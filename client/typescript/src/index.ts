
// Code generated by @open-rpc/generator DO NOT EDIT.
import { RequestManager, PostMessageWindowTransport, PostMessageIframeTransport, WebSocketTransport, HTTPTransport, Client, JSONRPCError } from "@open-rpc/client-js";
import _ from "lodash";
import { OpenrpcDocument as OpenRPC, MethodObject, ContentDescriptorObject } from "@open-rpc/meta-schema";
import { MethodCallValidator, MethodNotFoundError } from "@open-rpc/schema-utils-js";

/**
 *
 * Number is a number
 *
 * @example
 * `9`
 *
 */
export type NumberAsNumber = number;
/**
 *
 * Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.
 *
 */
export type ContentIdentifierAsString = string;
/**
 *
 * @example
 * `string value`
 *
 */
export type UndefinedAsString = string;
/**
 *
 * @example
 * `f01234`
 *
 */
export interface UndefinedAsObject { [key: string]: any; }
/**
 *
 * @example
 * `true`
 *
 */
export type UndefinedAsBoolean = boolean;
export type BooleanVyG3AETh = boolean;
export type StringDoaGddGA = string;
export interface ObjectM9Mo69S8 { [key: string]: any; }
/**
 *
 * Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.
 *
 * @example
 * `[object Object]`
 *
 */
export type ContentIdentifier = ContentIdentifierAsString;
export interface ObjectOfContentIdentifierStringDoaGddGAObjectM9Mo69S85ZHhptra {
  Address?: ObjectM9Mo69S8;
  ID?: StringDoaGddGA;
  PieceCID?: ContentIdentifier;
}
/**
 *
 * Number is a number
 *
 * @example
 * `10101`
 *
 */
export type Number = NumberAsNumber;
export interface ObjectOfStringDoaGddGAContentIdentifierNumberNumberContentIdentifierN57692K9 {
  PieceCid?: ContentIdentifier;
  PieceSize?: Number;
  RawBlockSize?: Number;
  Root?: ContentIdentifier;
  TransferType?: StringDoaGddGA;
}
export type StringBA0Rq1IJ = string;
export interface ObjectOfNumberStringBA0Rq1IJ2YUgzKFI {
  Data?: StringBA0Rq1IJ;
  Round?: Number;
}
export type UnorderedSetOfObjectOfNumberStringBA0Rq1IJ2YUgzKFIjem9Pecj = ObjectOfNumberStringBA0Rq1IJ2YUgzKFI[];
export interface ObjectOfNumberStringBA0Rq1IJHzQhZnR6 {
  VRFProof?: StringBA0Rq1IJ;
  WinCount?: Number;
}
export interface ObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4 {
  From?: ObjectM9Mo69S8;
  GasFeeCap?: ObjectM9Mo69S8;
  GasLimit?: Number;
  GasPremium?: ObjectM9Mo69S8;
  Method?: Number;
  Nonce?: Number;
  Params?: StringBA0Rq1IJ;
  To?: ObjectM9Mo69S8;
  Value?: ObjectM9Mo69S8;
  Version?: Number;
}
export interface ObjectOfNumberStringBA0Rq1IJDPaaQvVm {
  Data?: StringBA0Rq1IJ;
  Type?: Number;
}
export interface ObjectOfObjectOfNumberStringBA0Rq1IJDPaaQvVmObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4V8EVa7KT {
  Message?: ObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4;
  Signature?: ObjectOfNumberStringBA0Rq1IJDPaaQvVm;
}
export type UnorderedSetOfObjectOfObjectOfNumberStringBA0Rq1IJDPaaQvVmObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4V8EVa7KTIEA9KAXT = ObjectOfObjectOfNumberStringBA0Rq1IJDPaaQvVmObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4V8EVa7KT[];
export interface ObjectOfStringBA0Rq1IJPNUmOxq4 {
  VRFProof?: StringBA0Rq1IJ;
}
export interface ObjectOfStringBA0Rq1IJNumber9EoEvOMy {
  PoStProof?: Number;
  ProofBytes?: StringBA0Rq1IJ;
}
export type UnorderedSetOfObjectOfStringBA0Rq1IJNumber9EoEvOMysZWX8Aag = ObjectOfStringBA0Rq1IJNumber9EoEvOMy[];
export type OneOfUndefinedAsObjectPa2VKVW5 = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type UndefinedAsArray = [OneOfUndefinedAsObjectWY8HM5LO];
export type OneOfUndefinedAsObjectHBTCF0Ci = UndefinedAsObject;
/**
 *
 * @example
 * `12.3`
 *
 */
export type UndefinedAsNumber = number;
export type NumberHo1ClIqD = number;
export type UnorderedSetOfObjectM9Mo69S83X6Ly3S9 = ObjectM9Mo69S8[];
export type OneOfUndefinedAsObjectWY8HM5LO = UndefinedAsObject;
export interface ObjectOfNumberStringBA0Rq1IJObjectM9Mo69S8BRpRB44Z {
  Actor?: ObjectM9Mo69S8;
  Data?: StringBA0Rq1IJ;
  Method?: Number;
}
export type OneOfUndefinedAsObjectUAsbSIz2 = UndefinedAsObject;
export interface ObjectOfNumberNumberGZGWzYla {
  Lane?: Number;
  Nonce?: Number;
}
export type UnorderedSetOfObjectOfNumberNumberGZGWzYlaelp76Mji = ObjectOfNumberNumberGZGWzYla[];
export type UnorderedSetOfNumberfMzgzdno = Number[];
export type UnorderedSetOfContentIdentifierufUuJG8G = ContentIdentifier[];
export interface ObjectOfUnorderedSetOfObjectOfStringBA0Rq1IJNumber9EoEvOMysZWX8AagNumberObjectOfStringBA0Rq1IJPNUmOxq4UnorderedSetOfContentIdentifierufUuJG8GObjectM9Mo69S8ContentIdentifierContentIdentifierObjectM9Mo69S8ObjectM9Mo69S8ContentIdentifierNumberNumberObjectOfNumberStringBA0Rq1IJHzQhZnR6ObjectOfNumberStringBA0Rq1IJDPaaQvVmUnorderedSetOfObjectOfNumberStringBA0Rq1IJ2YUgzKFIjem9PecjObjectOfNumberStringBA0Rq1IJDPaaQvVmUzDnPsli {
  BLSAggregate?: ObjectOfNumberStringBA0Rq1IJDPaaQvVm;
  BeaconEntries?: UnorderedSetOfObjectOfNumberStringBA0Rq1IJ2YUgzKFIjem9Pecj;
  BlockSig?: ObjectOfNumberStringBA0Rq1IJDPaaQvVm;
  ElectionProof?: ObjectOfNumberStringBA0Rq1IJHzQhZnR6;
  ForkSignaling?: Number;
  Height?: Number;
  Messages?: ContentIdentifier;
  Miner?: ObjectM9Mo69S8;
  ParentBaseFee?: ObjectM9Mo69S8;
  ParentMessageReceipts?: ContentIdentifier;
  ParentStateRoot?: ContentIdentifier;
  ParentWeight?: ObjectM9Mo69S8;
  Parents?: UnorderedSetOfContentIdentifierufUuJG8G;
  Ticket?: ObjectOfStringBA0Rq1IJPNUmOxq4;
  Timestamp?: Number;
  WinPoStProof?: UnorderedSetOfObjectOfStringBA0Rq1IJNumber9EoEvOMysZWX8Aag;
}
export type UndefinedAsNull = null;
export type UnorderedSetOfObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4I4Ra3Tdy = ObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4[];
type AlwaysTrue = any;
export interface ObjectIZgu6KjQ { [key: string]: any; }
export type AnyL9Fw4VUO = any;
export interface ObjectOfAnyL9Fw4VUOContentIdentifier7SC90G7O {
  Cid?: ContentIdentifier;
  Message?: AnyL9Fw4VUO;
}
export type OneOfUndefinedAsObjectRPmMltvt = UndefinedAsObject;
export type OneOfUndefinedAsObjectJ6InzqhU = UndefinedAsObject;
export type OneOfUndefinedAsObjectD2Hk3HR0 = UndefinedAsObject;
export type OneOfUndefinedAsObjectGOQ6LHsc = UndefinedAsObject;
export type StringV0UwQeVu = string;
export interface ObjectOfStringDoaGddGANumberNumberNumberStringDoaGddGAStringDoaGddGABooleanVyG3AEThBooleanVyG3AEThContentIdentifierMabtoPdX {
  BaseCID?: ContentIdentifier;
  IsInitiator?: BooleanVyG3AETh;
  IsSender?: BooleanVyG3AETh;
  Message?: StringDoaGddGA;
  OtherPeer?: StringDoaGddGA;
  Status?: Number;
  TransferID?: Number;
  Transferred?: Number;
  Voucher?: StringDoaGddGA;
}
export interface ObjectOfStringDoaGddGAStringDoaGddGANumberPkcbSjqi {
  ID?: Number;
  Initiator?: StringDoaGddGA;
  Responder?: StringDoaGddGA;
}
export type OneOfUndefinedAsObjectDig3SDoI = UndefinedAsObject;
export type OneOfUndefinedAsObjectVe4IDyoj = UndefinedAsObject;
export type OneOfUndefinedAsObjectQfpnMczr = UndefinedAsObject;
export interface ObjectOfNumberContentIdentifierNumberEck2O1Wo {
  SealProof?: Number;
  SealedCID?: ContentIdentifier;
  SectorNumber?: Number;
}
export type UnorderedSetOfObjectOfNumberContentIdentifierNumberEck2O1WoWmUbwRF7 = ObjectOfNumberContentIdentifierNumberEck2O1Wo[];
export type OneOfUndefinedAsObjectI18GiniK = UndefinedAsObject;
export interface ObjectOfNumberNumberObjectOfNumberStringBA0Rq1IJDPaaQvVmStringBA0Rq1IJNumberNumberUnorderedSetOfObjectOfNumberNumberGZGWzYlaelp76MjiNumberObjectOfNumberStringBA0Rq1IJObjectM9Mo69S8BRpRB44ZObjectM9Mo69S8ObjectM9Mo69S8NJlpgLTo {
  Amount?: ObjectM9Mo69S8;
  ChannelAddr?: ObjectM9Mo69S8;
  Extra?: ObjectOfNumberStringBA0Rq1IJObjectM9Mo69S8BRpRB44Z;
  Lane?: Number;
  Merges?: UnorderedSetOfObjectOfNumberNumberGZGWzYlaelp76Mji;
  MinSettleHeight?: Number;
  Nonce?: Number;
  SecretPreimage?: StringBA0Rq1IJ;
  Signature?: ObjectOfNumberStringBA0Rq1IJDPaaQvVm;
  TimeLockMax?: Number;
  TimeLockMin?: Number;
}
export type UnorderedSetOfObjectOfNumberNumberObjectOfNumberStringBA0Rq1IJDPaaQvVmStringBA0Rq1IJNumberNumberUnorderedSetOfObjectOfNumberNumberGZGWzYlaelp76MjiNumberObjectOfNumberStringBA0Rq1IJObjectM9Mo69S8BRpRB44ZObjectM9Mo69S8ObjectM9Mo69S8NJlpgLToIzReHHXX = ObjectOfNumberNumberObjectOfNumberStringBA0Rq1IJDPaaQvVmStringBA0Rq1IJNumberNumberUnorderedSetOfObjectOfNumberNumberGZGWzYlaelp76MjiNumberObjectOfNumberStringBA0Rq1IJObjectM9Mo69S8BRpRB44ZObjectM9Mo69S8ObjectM9Mo69S8NJlpgLTo[];
export type OneOfUndefinedAsObjectQJBQzvT7 = UndefinedAsObject;
export type OneOfUndefinedAsObjectXf9RhFaI = UndefinedAsObject;
export interface ObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYY {
  File?: StringDoaGddGA;
  Function?: StringDoaGddGA;
  Line?: Number;
}
export type UnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9 = ObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYY[];
export interface ObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkk {
  Name?: StringDoaGddGA;
  cg?: Number;
  ex?: ObjectIZgu6KjQ;
  loc?: UnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9;
  sg?: Number;
  tg?: Number;
  tt?: Number;
  vcg?: Number;
  vsg?: Number;
  vtg?: Number;
}
export type UnorderedSetOfObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkkH47Zql3G = ObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkk[];
export interface ObjectOfStringBA0Rq1IJNumberNumberFtcz8HhS {
  ExitCode?: Number;
  GasUsed?: Number;
  Return?: StringBA0Rq1IJ;
}
export type UnorderedSetOfAnyL9Fw4VUO55Bn0VNb = AnyL9Fw4VUO[];
export interface ObjectOfUnorderedSetOfAnyL9Fw4VUO55Bn0VNbObjectOfStringBA0Rq1IJNumberNumberFtcz8HhSObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4UnorderedSetOfObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkkH47Zql3GStringDoaGddGANumberNFwSV5At {
  Duration?: Number;
  Error?: StringDoaGddGA;
  GasCharges?: UnorderedSetOfObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkkH47Zql3G;
  Msg?: ObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4;
  MsgRct?: ObjectOfStringBA0Rq1IJNumberNumberFtcz8HhS;
  Subcalls?: UnorderedSetOfAnyL9Fw4VUO55Bn0VNb;
}
export interface ObjectOfObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ContentIdentifierObjectM9Mo69S8ObjectM9Mo69S8B7SzuI38 {
  BaseFeeBurn?: ObjectM9Mo69S8;
  GasUsed?: ObjectM9Mo69S8;
  Message?: ContentIdentifier;
  MinerPenalty?: ObjectM9Mo69S8;
  MinerTip?: ObjectM9Mo69S8;
  OverEstimationBurn?: ObjectM9Mo69S8;
  Refund?: ObjectM9Mo69S8;
  TotalCost?: ObjectM9Mo69S8;
}
export interface ObjectOfNumberContentIdentifierContentIdentifierObjectM9Mo69S80Wr9Txyt {
  Balance?: ObjectM9Mo69S8;
  Code?: ContentIdentifier;
  Head?: ContentIdentifier;
  Nonce?: Number;
}
export interface ObjectOfObjectOfStringBA0Rq1IJNumberNumberFtcz8HhSContentIdentifierObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4ObjectOfObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ContentIdentifierObjectM9Mo69S8ObjectM9Mo69S8B7SzuI38ObjectOfUnorderedSetOfAnyL9Fw4VUO55Bn0VNbObjectOfStringBA0Rq1IJNumberNumberFtcz8HhSObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4UnorderedSetOfObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkkH47Zql3GStringDoaGddGANumberNFwSV5AtStringDoaGddGANumberUsQtonjr {
  Duration?: Number;
  Error?: StringDoaGddGA;
  ExecutionTrace?: ObjectOfUnorderedSetOfAnyL9Fw4VUO55Bn0VNbObjectOfStringBA0Rq1IJNumberNumberFtcz8HhSObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4UnorderedSetOfObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkkH47Zql3GStringDoaGddGANumberNFwSV5At;
  GasCost?: ObjectOfObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ContentIdentifierObjectM9Mo69S8ObjectM9Mo69S8B7SzuI38;
  Msg?: ObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4;
  MsgCid?: ContentIdentifier;
  MsgRct?: ObjectOfStringBA0Rq1IJNumberNumberFtcz8HhS;
}
export type UnorderedSetOfObjectOfObjectOfStringBA0Rq1IJNumberNumberFtcz8HhSContentIdentifierObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4ObjectOfObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ContentIdentifierObjectM9Mo69S8ObjectM9Mo69S8B7SzuI38ObjectOfUnorderedSetOfAnyL9Fw4VUO55Bn0VNbObjectOfStringBA0Rq1IJNumberNumberFtcz8HhSObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4UnorderedSetOfObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkkH47Zql3GStringDoaGddGANumberNFwSV5AtStringDoaGddGANumberUsQtonjrFSledrjG = ObjectOfObjectOfStringBA0Rq1IJNumberNumberFtcz8HhSContentIdentifierObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4ObjectOfObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ObjectM9Mo69S8ContentIdentifierObjectM9Mo69S8ObjectM9Mo69S8B7SzuI38ObjectOfUnorderedSetOfAnyL9Fw4VUO55Bn0VNbObjectOfStringBA0Rq1IJNumberNumberFtcz8HhSObjectOfNumberObjectM9Mo69S8ObjectM9Mo69S8StringBA0Rq1IJNumberNumberObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8ZKEkBuF4UnorderedSetOfObjectOfNumberNumberNumberNumberNumberNumberUnorderedSetOfObjectOfNumberStringDoaGddGAStringDoaGddGABBXq2TYYYpL72Ui9ObjectIZgu6KjQNumberStringDoaGddGAY76CMnkkH47Zql3GStringDoaGddGANumberNFwSV5AtStringDoaGddGANumberUsQtonjr[];
export interface ObjectOfBooleanVyG3AEThObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8NumberContentIdentifierStringDoaGddGANumberObjectM9Mo69S8ObjectM9Mo69S83ScTZHlD {
  Client?: ObjectM9Mo69S8;
  ClientCollateral?: ObjectM9Mo69S8;
  EndEpoch?: Number;
  Label?: StringDoaGddGA;
  PieceCID?: ContentIdentifier;
  PieceSize?: Number;
  Provider?: ObjectM9Mo69S8;
  ProviderCollateral?: ObjectM9Mo69S8;
  StartEpoch?: Number;
  StoragePricePerEpoch?: ObjectM9Mo69S8;
  VerifiedDeal?: BooleanVyG3AETh;
}
export interface ObjectOfNumberNumberNumberL9I1XGuq {
  LastUpdatedEpoch?: Number;
  SectorStartEpoch?: Number;
  SlashEpoch?: Number;
}
export interface ObjectOfObjectOfNumberNumberNumberL9I1XGuqObjectOfBooleanVyG3AEThObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8NumberContentIdentifierStringDoaGddGANumberObjectM9Mo69S8ObjectM9Mo69S83ScTZHlDSZGuKBIl {
  Proposal?: ObjectOfBooleanVyG3AEThObjectM9Mo69S8NumberObjectM9Mo69S8ObjectM9Mo69S8NumberContentIdentifierStringDoaGddGANumberObjectM9Mo69S8ObjectM9Mo69S83ScTZHlD;
  State?: ObjectOfNumberNumberNumberL9I1XGuq;
}
export interface ObjectOfObjectM9Mo69S8ObjectM9Mo69S8PdWZuKHB {
  Escrow?: ObjectM9Mo69S8;
  Locked?: ObjectM9Mo69S8;
}
export type OneOfUndefinedAsObjectWpph0Eg4 = UndefinedAsObject;
export type OneOfUndefinedAsObjectOWYTuwSD = UndefinedAsObject;
export type UnorderedSetOfStringBA0Rq1IJjh9Zs8EL = StringBA0Rq1IJ[];
export type OneOfUndefinedAsObjectWFzUtYiu = UndefinedAsObject;
export interface ObjectOfObjectM9Mo69S8ObjectM9Mo69S8EtGflztD {
  QualityAdjPower?: ObjectM9Mo69S8;
  RawBytePower?: ObjectM9Mo69S8;
}
export interface ObjectOfNumberContentIdentifierNumberNumberNumberNumberNumberBooleanVyG3AEThNumberUnorderedSetOfNumberfMzgzdnoTtcu1Gje {
  DealIDs?: UnorderedSetOfNumberfMzgzdno;
  Expiration?: Number;
  ReplaceCapacity?: BooleanVyG3AETh;
  ReplaceSectorDeadline?: Number;
  ReplaceSectorNumber?: Number;
  ReplaceSectorPartition?: Number;
  SealProof?: Number;
  SealRandEpoch?: Number;
  SealedCID?: ContentIdentifier;
  SectorNumber?: Number;
}
export interface ObjectOfNumberObjectM9Mo69S8StringV0UwQeVuNumberStringDoaGddGANumberStringV0UwQeVuObjectM9Mo69S8IaHLE3Et {
  Base?: ObjectM9Mo69S8;
  End?: StringV0UwQeVu;
  Height?: Number;
  Message?: StringDoaGddGA;
  Stage?: Number;
  Start?: StringV0UwQeVu;
  Target?: ObjectM9Mo69S8;
  WorkerID?: Number;
}
export type UnorderedSetOfObjectOfNumberObjectM9Mo69S8StringV0UwQeVuNumberStringDoaGddGANumberStringV0UwQeVuObjectM9Mo69S8IaHLE3EthuefQd39 = ObjectOfNumberObjectM9Mo69S8StringV0UwQeVuNumberStringDoaGddGANumberStringV0UwQeVuObjectM9Mo69S8IaHLE3Et[];
/**
 *
 * @example
 * `string value`
 *
 */
export type OneOfUndefinedAsStringRV2IDETs = UndefinedAsString;
/**
 *
 * @example
 * `[object Object],[object Object]`
 *
 */
export type OneOfUndefinedAsObjectJW9SOyZ0 = UndefinedAsObject;
/**
 *
 * @example
 * `Ynl0ZSBhcnJheQ==`
 *
 */
export type OneOfUndefinedAsStringG8UoFCYw = UndefinedAsString;
/**
 *
 * @example
 * `12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf`
 *
 */
export type OneOfUndefinedAsStringHMxHXG5S = UndefinedAsString;
/**
 *
 * @example
 * `true`
 *
 */
export type OneOfUndefinedAsBooleanA8H7A4CE = UndefinedAsBoolean;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectVdMqHqtK = UndefinedAsObject;
/**
 *
 * @example
 * `f01234`
 *
 */
export type OneOfUndefinedAsObjectRzKRMIxo = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectQPJZwFcW = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectG9FUzGMO = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectBkFf4IZ6 = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectOCWYnPOJ = UndefinedAsObject;
/**
 *
 * @example
 * `0`
 *
 */
export type OneOfUndefinedAsObjectQSHPqodE = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectNMWd6VJn = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayDvy0U7ZP = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayWpgGQIGU = UndefinedAsArray;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectXNkjvrBM = UndefinedAsObject;
/**
 *
 * @example
 * `12.3`
 *
 */
export type OneOfUndefinedAsNumberWNqkORJQ = UndefinedAsNumber;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject8VbkMTEN = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayPwlMjcTS = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayPxFbf2QK = UndefinedAsArray;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectBzTJu16Q = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectJP592Y2Q = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectBDX5SO3N = UndefinedAsObject;
/**
 *
 * @example
 * `0`
 *
 */
export type OneOfUndefinedAsObjectTLGSnzIQ = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectP7Bhicfe = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject6TeBViZn = UndefinedAsObject;
/**
 *
 * @example
 * `bls`
 *
 */
export type OneOfUndefinedAsStringRuEXeUwC = UndefinedAsString;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectPcvycdUd = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject4OkH7EzB = UndefinedAsObject;
export type OneOfUndefinedAsNullZDAlsr7S = UndefinedAsNull;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectMYxYezUc = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectMQqnRw5V = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectLjJDSynA = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectU6FLRakQ = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArray7QDNGLzV = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArraySbWfaKcF = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayMD615GYP = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayS7SQCcfQ = UndefinedAsArray;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectA1VkuDgX = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject5L3AfaOs = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectYIxpDvM8 = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject4BC0K3MK = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArray5XYyQROo = UndefinedAsArray;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectUOKGEhWA = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectRXLdev4Q = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayR7BBSnF6 = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayC7ILoEm4 = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayDB8KwVjq = UndefinedAsArray;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject1MlTWVrI = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectNeWYFARd = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectLhMuAxai = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayK0MFtk6N = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayBPUoc68H = UndefinedAsArray;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectNu6QOg2Q = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectKh7AbUIy = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject4FZaIBAk = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectZjUUIu5Z = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectBwqCWvoE = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectVXoJsHPc = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayTvhTOMFZ = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayE7BMCMKR = UndefinedAsArray;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectFk9V3T1D = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectS8KpvhQF = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectJzvojyWf = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectCo0CHOYR = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectPg71Ipc5 = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectMobtfjab = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject5YE58MOz = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectNeS1NSd9 = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectXpfzsqTi = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectE1CvpgJj = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectUjm6UPvF = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArraySN2PDW6A = UndefinedAsArray;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayIVdohQ7C = UndefinedAsArray;
/**
 *
 * @example
 * `5,1`
 *
 */
export type OneOfUndefinedAsObjectYwFwof6E = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectVjhahzuE = UndefinedAsObject;
/**
 *
 * @example
 * `null`
 *
 */
export type OneOfUndefinedAsArrayBgyxJc4T = UndefinedAsArray;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectGB0VvqNT = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectCd8UXzit = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectAYsPwdr7 = UndefinedAsObject;
/**
 *
 * @example
 * `lotus`
 *
 */
export type OneOfUndefinedAsStringKC3N7Ner = UndefinedAsString;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectRShbg4QO = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectA6Tom0Ky = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObject1YKUAzgE = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectZ4ZFkN0Q = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectPyPw7Fwo = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectUNeVoJIy = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectCZDCKOYm = UndefinedAsObject;
/**
 *
 * @example
 * `[object Object]`
 *
 */
export type OneOfUndefinedAsObjectNZ3V3J4E = UndefinedAsObject;
/**
 *
 * Generated! Represents an alias to any of the provided schemas
 *
 */
export type AnyOfNumberContentIdentifierContentIdentifierContentIdentifierContentIdentifierOneOfUndefinedAsStringRV2IDETsContentIdentifierContentIdentifierOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0NumberNumberOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectJW9SOyZ0NumberNumberOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectJW9SOyZ0NumberOneOfUndefinedAsObjectJW9SOyZ0ContentIdentifierContentIdentifierOneOfUndefinedAsObjectJW9SOyZ0ContentIdentifierContentIdentifierOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsStringRV2IDETsNumberOneOfUndefinedAsStringHMxHXG5SOneOfUndefinedAsBooleanA8H7A4CEContentIdentifierContentIdentifierContentIdentifierContentIdentifierOneOfUndefinedAsObjectVdMqHqtKOneOfUndefinedAsStringRV2IDETsContentIdentifierNumberContentIdentifierOneOfUndefinedAsObjectVdMqHqtKOneOfUndefinedAsObjectRzKRMIxoContentIdentifierContentIdentifierOneOfUndefinedAsStringHMxHXG5SOneOfUndefinedAsObjectRzKRMIxoNumberNumberOneOfUndefinedAsStringHMxHXG5SOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectQPJZwFcWOneOfUndefinedAsObjectVdMqHqtKOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectG9FUzGMOOneOfUndefinedAsStringRV2IDETsOneOfUndefinedAsObjectBkFf4IZ6NumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectBkFf4IZ6OneOfUndefinedAsObjectJW9SOyZ0NumberOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectBkFf4IZ6OneOfUndefinedAsObjectOCWYnPOJOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectNMWd6VJnOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsArrayDvy0U7ZPOneOfUndefinedAsArrayWpgGQIGUOneOfUndefinedAsObjectOCWYnPOJOneOfUndefinedAsArrayDvy0U7ZPOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectXNkjvrBMOneOfUndefinedAsObjectBkFf4IZ6OneOfUndefinedAsObjectOCWYnPOJOneOfUndefinedAsObjectXNkjvrBMOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsNumberWNqkORJQOneOfUndefinedAsObject8VbkMTENOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsStringG8UoFCYwNumberOneOfUndefinedAsArrayPwlMjcTSNumberOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEContentIdentifierOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsArrayPxFbf2QKOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectBzTJu16QOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectBzTJu16QOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectBzTJu16QOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodENumberOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectBzTJu16QOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0NumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectBkFf4IZ6OneOfUndefinedAsObjectJW9SOyZ0ContentIdentifierContentIdentifierOneOfUndefinedAsObjectJW9SOyZ0NumberOneOfUndefinedAsArrayWpgGQIGUOneOfUndefinedAsObjectJW9SOyZ0NumberOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0ContentIdentifierOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJP592Y2QOneOfUndefinedAsObjectJW9SOyZ0NumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0NumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectBDX5SO3NOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectBDX5SO3NOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectTLGSnzIQOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0ContentIdentifierContentIdentifierContentIdentifierNumberOneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoNumberOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectJW9SOyZ0ContentIdentifierNumberContentIdentifierNumberNumberContentIdentifierOneOfUndefinedAsObjectJW9SOyZ0ContentIdentifierOneOfUndefinedAsObjectP7BhicfeContentIdentifierOneOfUndefinedAsObjectJW9SOyZ0OneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObject6TeBViZnOneOfUndefinedAsStringRuEXeUwCOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectBkFf4IZ6OneOfUndefinedAsStringRV2IDETsOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsObjectPcvycdUdOneOfUndefinedAsObject4OkH7EzBOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObjectMYxYezUcOneOfUndefinedAsObjectMQqnRw5VOneOfUndefinedAsObjectLjJDSynAOneOfUndefinedAsObjectBkFf4IZ6OneOfUndefinedAsObjectU6FLRakQOneOfUndefinedAsArray7QDNGLzVOneOfUndefinedAsArraySbWfaKcFOneOfUndefinedAsArrayMD615GYPOneOfUndefinedAsArrayS7SQCcfQOneOfUndefinedAsArrayS7SQCcfQOneOfUndefinedAsObjectLjJDSynAOneOfUndefinedAsObjectLjJDSynAOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectLjJDSynAOneOfUndefinedAsStringG8UoFCYwOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObjectA1VkuDgXOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObject5L3AfaOsOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObjectYIxpDvM8OneOfUndefinedAsObject4BC0K3MKOneOfUndefinedAsArray5XYyQROoOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObjectUOKGEhWAOneOfUndefinedAsStringRV2IDETsOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectRXLdev4QOneOfUndefinedAsArrayR7BBSnF6OneOfUndefinedAsArrayC7ILoEm4OneOfUndefinedAsArrayDB8KwVjqOneOfUndefinedAsObject1MlTWVrIOneOfUndefinedAsObjectNeWYFARdOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsNullZDAlsr7SContentIdentifierOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObjectQSHPqodENumberOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectBkFf4IZ6ContentIdentifierOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsNullZDAlsr7SContentIdentifierContentIdentifierOneOfUndefinedAsObjectP7BhicfeOneOfUndefinedAsObjectLhMuAxaiOneOfUndefinedAsArrayK0MFtk6NOneOfUndefinedAsArrayDvy0U7ZPOneOfUndefinedAsArrayK0MFtk6NOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObject8VbkMTENNumberOneOfUndefinedAsArrayDvy0U7ZPContentIdentifierOneOfUndefinedAsObjectXNkjvrBMContentIdentifierOneOfUndefinedAsArrayDvy0U7ZPOneOfUndefinedAsNullZDAlsr7SContentIdentifierContentIdentifierContentIdentifierContentIdentifierContentIdentifierContentIdentifierContentIdentifierOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsArrayBPUoc68HOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectNu6QOg2QContentIdentifierContentIdentifierContentIdentifierContentIdentifierContentIdentifierNumberOneOfUndefinedAsObjectKh7AbUIyOneOfUndefinedAsObjectKh7AbUIyContentIdentifierOneOfUndefinedAsObject4FZaIBAkOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsArrayPwlMjcTSOneOfUndefinedAsObjectZjUUIu5ZContentIdentifierOneOfUndefinedAsObjectBwqCWvoEOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObjectVXoJsHPcOneOfUndefinedAsArrayTvhTOMFZContentIdentifierOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsArrayE7BMCMKROneOfUndefinedAsObjectFk9V3T1DOneOfUndefinedAsObjectS8KpvhQFOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectJzvojyWfOneOfUndefinedAsObjectCo0CHOYROneOfUndefinedAsObjectPg71Ipc5OneOfUndefinedAsObjectMobtfjabOneOfUndefinedAsObject5YE58MOzOneOfUndefinedAsArrayPwlMjcTSOneOfUndefinedAsArrayK0MFtk6NOneOfUndefinedAsArrayPwlMjcTSOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectNeS1NSd9OneOfUndefinedAsObjectXpfzsqTiOneOfUndefinedAsObjectE1CvpgJjOneOfUndefinedAsObjectUjm6UPvFOneOfUndefinedAsArraySN2PDW6AOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsArrayIVdohQ7COneOfUndefinedAsObjectYwFwof6EOneOfUndefinedAsObjectVjhahzuEOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsArrayBgyxJc4TOneOfUndefinedAsObjectGB0VvqNTOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectCd8UXzitOneOfUndefinedAsObjectYwFwof6EOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectAYsPwdr7OneOfUndefinedAsArraySN2PDW6AOneOfUndefinedAsStringKC3N7NerNumberOneOfUndefinedAsObjectRShbg4QOOneOfUndefinedAsObjectFk9V3T1DOneOfUndefinedAsObjectA6Tom0KyOneOfUndefinedAsObjectA6Tom0KyOneOfUndefinedAsObject1YKUAzgEOneOfUndefinedAsObjectZ4ZFkN0QOneOfUndefinedAsObjectPyPw7FwoOneOfUndefinedAsObjectUNeVoJIyOneOfUndefinedAsObjectCZDCKOYmOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectA6Tom0KyOneOfUndefinedAsObjectA6Tom0KyOneOfUndefinedAsStringRV2IDETsOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObjectNZ3V3J4EOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectQSHPqodEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObject6TeBViZnOneOfUndefinedAsBooleanA8H7A4CEOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsArrayPwlMjcTSOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsNullZDAlsr7SOneOfUndefinedAsObjectPcvycdUdOneOfUndefinedAsObjectXNkjvrBMOneOfUndefinedAsObjectRzKRMIxoOneOfUndefinedAsBooleanA8H7A4CE = Number | ContentIdentifier | OneOfUndefinedAsStringRV2IDETs | OneOfUndefinedAsObjectJW9SOyZ0 | OneOfUndefinedAsStringG8UoFCYw | OneOfUndefinedAsStringHMxHXG5S | OneOfUndefinedAsBooleanA8H7A4CE | OneOfUndefinedAsObjectVdMqHqtK | OneOfUndefinedAsObjectRzKRMIxo | OneOfUndefinedAsObjectQPJZwFcW | OneOfUndefinedAsObjectG9FUzGMO | OneOfUndefinedAsObjectBkFf4IZ6 | OneOfUndefinedAsObjectOCWYnPOJ | OneOfUndefinedAsObjectQSHPqodE | OneOfUndefinedAsObjectNMWd6VJn | OneOfUndefinedAsArrayDvy0U7ZP | OneOfUndefinedAsArrayWpgGQIGU | OneOfUndefinedAsObjectXNkjvrBM | OneOfUndefinedAsNumberWNqkORJQ | OneOfUndefinedAsObject8VbkMTEN | OneOfUndefinedAsArrayPwlMjcTS | OneOfUndefinedAsArrayPxFbf2QK | OneOfUndefinedAsObjectBzTJu16Q | OneOfUndefinedAsObjectJP592Y2Q | OneOfUndefinedAsObjectBDX5SO3N | OneOfUndefinedAsObjectTLGSnzIQ | OneOfUndefinedAsObjectP7Bhicfe | OneOfUndefinedAsObject6TeBViZn | OneOfUndefinedAsStringRuEXeUwC | OneOfUndefinedAsObjectPcvycdUd | OneOfUndefinedAsObject4OkH7EzB | OneOfUndefinedAsNullZDAlsr7S | OneOfUndefinedAsObjectMYxYezUc | OneOfUndefinedAsObjectMQqnRw5V | OneOfUndefinedAsObjectLjJDSynA | OneOfUndefinedAsObjectU6FLRakQ | OneOfUndefinedAsArray7QDNGLzV | OneOfUndefinedAsArraySbWfaKcF | OneOfUndefinedAsArrayMD615GYP | OneOfUndefinedAsArrayS7SQCcfQ | OneOfUndefinedAsObjectA1VkuDgX | OneOfUndefinedAsObject5L3AfaOs | OneOfUndefinedAsObjectYIxpDvM8 | OneOfUndefinedAsObject4BC0K3MK | OneOfUndefinedAsArray5XYyQROo | OneOfUndefinedAsObjectUOKGEhWA | OneOfUndefinedAsObjectRXLdev4Q | OneOfUndefinedAsArrayR7BBSnF6 | OneOfUndefinedAsArrayC7ILoEm4 | OneOfUndefinedAsArrayDB8KwVjq | OneOfUndefinedAsObject1MlTWVrI | OneOfUndefinedAsObjectNeWYFARd | OneOfUndefinedAsObjectLhMuAxai | OneOfUndefinedAsArrayK0MFtk6N | OneOfUndefinedAsArrayBPUoc68H | OneOfUndefinedAsObjectNu6QOg2Q | OneOfUndefinedAsObjectKh7AbUIy | OneOfUndefinedAsObject4FZaIBAk | OneOfUndefinedAsObjectZjUUIu5Z | OneOfUndefinedAsObjectBwqCWvoE | OneOfUndefinedAsObjectVXoJsHPc | OneOfUndefinedAsArrayTvhTOMFZ | OneOfUndefinedAsArrayE7BMCMKR | OneOfUndefinedAsObjectFk9V3T1D | OneOfUndefinedAsObjectS8KpvhQF | OneOfUndefinedAsObjectJzvojyWf | OneOfUndefinedAsObjectCo0CHOYR | OneOfUndefinedAsObjectPg71Ipc5 | OneOfUndefinedAsObjectMobtfjab | OneOfUndefinedAsObject5YE58MOz | OneOfUndefinedAsObjectNeS1NSd9 | OneOfUndefinedAsObjectXpfzsqTi | OneOfUndefinedAsObjectE1CvpgJj | OneOfUndefinedAsObjectUjm6UPvF | OneOfUndefinedAsArraySN2PDW6A | OneOfUndefinedAsArrayIVdohQ7C | OneOfUndefinedAsObjectYwFwof6E | OneOfUndefinedAsObjectVjhahzuE | OneOfUndefinedAsArrayBgyxJc4T | OneOfUndefinedAsObjectGB0VvqNT | OneOfUndefinedAsObjectCd8UXzit | OneOfUndefinedAsObjectAYsPwdr7 | OneOfUndefinedAsStringKC3N7Ner | OneOfUndefinedAsObjectRShbg4QO | OneOfUndefinedAsObjectA6Tom0Ky | OneOfUndefinedAsObject1YKUAzgE | OneOfUndefinedAsObjectZ4ZFkN0Q | OneOfUndefinedAsObjectPyPw7Fwo | OneOfUndefinedAsObjectUNeVoJIy | OneOfUndefinedAsObjectCZDCKOYm | OneOfUndefinedAsObjectNZ3V3J4E;
export type FilecoinBeaconGetEntry = (p1: Number) => Promise<ObjectBC2J87Le>;
export type FilecoinChainDeleteObj = (p1: ContentIdentifier) => Promise<NullIUT54VvM>;
export type FilecoinChainGetBlock = (p1: ContentIdentifier) => Promise<ObjectAmEStKuR>;
export type FilecoinChainGetBlockMessages = (p1: ContentIdentifier) => Promise<ObjectGCMBr4Ne>;
export type FilecoinChainGetGenesis = () => Promise<Object3RHzJ3Ze>;
export type FilecoinChainGetMessage = (p1: ContentIdentifier) => Promise<ObjectOOOg4JJn>;
export type FilecoinChainGetNode = (p1: StringEprQ2TNC) => Promise<ObjectWwmuu0C2>;
export type FilecoinChainGetParentMessages = (p1: ContentIdentifier) => Promise<ArrayCnOiR6Ut>;
export type FilecoinChainGetParentReceipts = (p1: ContentIdentifier) => Promise<ArrayRh7KfKkl>;
export type FilecoinChainGetPath = (p1: ObjectMw6SutP8, p2: ObjectMw6SutP8) => Promise<ArrayHiAoOzvx>;
export type FilecoinChainGetRandomnessFromBeacon = (p1: ObjectMw6SutP8, p2: Number, p3: Number, p4: String2IbrpYpS) => Promise<ArrayHAIVx3Fy>;
export type FilecoinChainGetRandomnessFromTickets = (p1: ObjectMw6SutP8, p2: Number, p3: Number, p4: String2IbrpYpS) => Promise<ArrayHAIVx3Fy>;
export type FilecoinChainGetTipSet = (p1: ObjectMw6SutP8) => Promise<Object3RHzJ3Ze>;
export type FilecoinChainGetTipSetByHeight = (p1: Number, p2: ObjectMw6SutP8) => Promise<Object3RHzJ3Ze>;
export type FilecoinChainHasObj = (p1: ContentIdentifier) => Promise<BooleanIYY4Gv1X>;
export type FilecoinChainHead = () => Promise<Object3RHzJ3Ze>;
export type FilecoinChainReadObj = (p1: ContentIdentifier) => Promise<String2IbrpYpS>;
export type FilecoinChainSetHead = (p1: ObjectMw6SutP8) => Promise<NullIUT54VvM>;
export type FilecoinChainStatObj = (p1: ContentIdentifier, p2: ContentIdentifier) => Promise<ObjectOcESYFzm>;
export type FilecoinChainTipSetWeight = (p1: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinClientCalcCommP = (p1: StringEprQ2TNC) => Promise<ObjectKrMX5Xoi>;
export type FilecoinClientCancelDataTransfer = (p1: Number, p2: StringQFEZCRqE, p3: BooleanIYY4Gv1X) => Promise<NullIUT54VvM>;
export type FilecoinClientDealPieceCID = (p1: ContentIdentifier) => Promise<ObjectGa7WpX8P>;
export type FilecoinClientDealSize = (p1: ContentIdentifier) => Promise<ObjectXZGpH0Hj>;
export type FilecoinClientFindData = (p1: ContentIdentifier, p2: ContentIdentifier) => Promise<ArrayRlot4Qak>;
export type FilecoinClientGenCar = (p1: ObjectLK1L4Uuq, p2: StringEprQ2TNC) => Promise<NullIUT54VvM>;
export type FilecoinClientGetDealInfo = (p1: ContentIdentifier) => Promise<ObjectPhZZWUrG>;
export type FilecoinClientGetDealStatus = (p1: Number) => Promise<StringEprQ2TNC>;
export type FilecoinClientHasLocal = (p1: ContentIdentifier) => Promise<BooleanIYY4Gv1X>;
export type FilecoinClientImport = (p1: ObjectLK1L4Uuq) => Promise<ObjectJ2HiTkzk>;
export type FilecoinClientListDataTransfers = () => Promise<Array2GXYQd7K>;
export type FilecoinClientListDeals = () => Promise<Array99OEaChA>;
export type FilecoinClientListImports = () => Promise<ArrayPKnnHfFb>;
export type FilecoinClientMinerQueryOffer = (p1: ObjectWXh79Zia, p2: ContentIdentifier, p3: ContentIdentifier) => Promise<ObjectQXmVwTzY>;
export type FilecoinClientQueryAsk = (p1: StringQFEZCRqE, p2: ObjectWXh79Zia) => Promise<ObjectFK9OH3RX>;
export type FilecoinClientRemoveImport = (p1: Number) => Promise<NullIUT54VvM>;
export type FilecoinClientRestartDataTransfer = (p1: Number, p2: StringQFEZCRqE, p3: BooleanIYY4Gv1X) => Promise<NullIUT54VvM>;
export type FilecoinClientRetrieve = (p1: ObjectB8YEjTta, p2: ObjectLK1L4Uuq) => Promise<NullIUT54VvM>;
export type FilecoinClientRetrieveTryRestartInsufficientFunds = (p1: ObjectWXh79Zia) => Promise<NullIUT54VvM>;
export type FilecoinClientStartDeal = (p1: ObjectRzHmWGCI) => Promise<ContentIdentifier>;
export type FilecoinCreateBackup = (p1: StringEprQ2TNC) => Promise<NullIUT54VvM>;
export type FilecoinGasEstimateFeeCap = (p1: ObjectOOOg4JJn, p2: Number, p3: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinGasEstimateGasLimit = (p1: ObjectOOOg4JJn, p2: ObjectMw6SutP8) => Promise<Number>;
export type FilecoinGasEstimateGasPremium = (p1: Number, p2: ObjectWXh79Zia, p3: Number, p4: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinGasEstimateMessageGas = (p1: ObjectOOOg4JJn, p2: ObjectT55VMCEg, p3: ObjectMw6SutP8) => Promise<ObjectOOOg4JJn>;
export type FilecoinMarketAddBalance = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ObjectTRro3FRk) => Promise<ContentIdentifier>;
export type FilecoinMarketGetReserved = (p1: ObjectWXh79Zia) => Promise<ObjectTRro3FRk>;
export type FilecoinMarketReleaseFunds = (p1: ObjectWXh79Zia, p2: ObjectTRro3FRk) => Promise<NullIUT54VvM>;
export type FilecoinMarketReserveFunds = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ObjectTRro3FRk) => Promise<ContentIdentifier>;
export type FilecoinMarketWithdraw = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ObjectTRro3FRk) => Promise<ContentIdentifier>;
export type FilecoinMinerCreateBlock = (p1: Object5N2Fa124) => Promise<ObjectGhlx9MOy>;
export type FilecoinMinerGetBaseInfo = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectMw6SutP8) => Promise<ObjectKrM76Ajk>;
export type FilecoinMpoolBatchPush = (p1: ArraySCAMOVjc) => Promise<ArrayId3OHima>;
export type FilecoinMpoolBatchPushMessage = (p1: ArrayTfS6CgDd, p2: ObjectT55VMCEg) => Promise<ArraySCAMOVjc>;
export type FilecoinMpoolBatchPushUntrusted = (p1: ArraySCAMOVjc) => Promise<ArrayId3OHima>;
export type FilecoinMpoolClear = (p1: BooleanIYY4Gv1X) => Promise<NullIUT54VvM>;
export type FilecoinMpoolGetConfig = () => Promise<ObjectVkNfDYAK>;
export type FilecoinMpoolGetNonce = (p1: ObjectWXh79Zia) => Promise<Number>;
export type FilecoinMpoolPending = (p1: ObjectMw6SutP8) => Promise<ArraySCAMOVjc>;
export type FilecoinMpoolPush = (p1: ObjectNh6TrVDD) => Promise<ContentIdentifier>;
export type FilecoinMpoolPushMessage = (p1: ObjectOOOg4JJn, p2: ObjectT55VMCEg) => Promise<ObjectNh6TrVDD>;
export type FilecoinMpoolPushUntrusted = (p1: ObjectNh6TrVDD) => Promise<ContentIdentifier>;
export type FilecoinMpoolSelect = (p1: ObjectMw6SutP8, p2: NumberHRow99PY) => Promise<ArraySCAMOVjc>;
export type FilecoinMpoolSetConfig = (p1: ObjectVkNfDYAK) => Promise<NullIUT54VvM>;
export type FilecoinMsigAddApprove = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: Number, p4: ObjectWXh79Zia, p5: ObjectWXh79Zia, p6: BooleanIYY4Gv1X) => Promise<ContentIdentifier>;
export type FilecoinMsigAddCancel = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: Number, p4: ObjectWXh79Zia, p5: BooleanIYY4Gv1X) => Promise<ContentIdentifier>;
export type FilecoinMsigAddPropose = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ObjectWXh79Zia, p4: BooleanIYY4Gv1X) => Promise<ContentIdentifier>;
export type FilecoinMsigApprove = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectWXh79Zia) => Promise<ContentIdentifier>;
export type FilecoinMsigApproveTxnHash = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectWXh79Zia, p4: ObjectWXh79Zia, p5: ObjectTRro3FRk, p6: ObjectWXh79Zia, p7: Number, p8: String2IbrpYpS) => Promise<ContentIdentifier>;
export type FilecoinMsigCancel = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectWXh79Zia, p4: ObjectTRro3FRk, p5: ObjectWXh79Zia, p6: Number, p7: String2IbrpYpS) => Promise<ContentIdentifier>;
export type FilecoinMsigCreate = (p1: Number, p2: Array7Mu8ImpI, p3: Number, p4: ObjectTRro3FRk, p5: ObjectWXh79Zia, p6: ObjectTRro3FRk) => Promise<ContentIdentifier>;
export type FilecoinMsigGetAvailableBalance = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinMsigGetPending = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ArrayVdff2ZPb>;
export type FilecoinMsigGetVested = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8, p3: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinMsigGetVestingSchedule = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectDuDzXhao>;
export type FilecoinMsigPropose = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ObjectTRro3FRk, p4: ObjectWXh79Zia, p5: Number, p6: String2IbrpYpS) => Promise<ContentIdentifier>;
export type FilecoinMsigRemoveSigner = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ObjectWXh79Zia, p4: BooleanIYY4Gv1X) => Promise<ContentIdentifier>;
export type FilecoinMsigSwapApprove = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: Number, p4: ObjectWXh79Zia, p5: ObjectWXh79Zia, p6: ObjectWXh79Zia) => Promise<ContentIdentifier>;
export type FilecoinMsigSwapCancel = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: Number, p4: ObjectWXh79Zia, p5: ObjectWXh79Zia) => Promise<ContentIdentifier>;
export type FilecoinMsigSwapPropose = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ObjectWXh79Zia, p4: ObjectWXh79Zia) => Promise<ContentIdentifier>;
export type FilecoinPaychAllocateLane = (p1: ObjectWXh79Zia) => Promise<Number>;
export type FilecoinPaychAvailableFunds = (p1: ObjectWXh79Zia) => Promise<ObjectUMtSO1Nx>;
export type FilecoinPaychAvailableFundsByFromTo = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia) => Promise<ObjectUMtSO1Nx>;
export type FilecoinPaychCollect = (p1: ObjectWXh79Zia) => Promise<ContentIdentifier>;
export type FilecoinPaychGet = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ObjectTRro3FRk) => Promise<ObjectHVWV6ILr>;
export type FilecoinPaychGetWaitReady = (p1: ContentIdentifier) => Promise<ObjectWXh79Zia>;
export type FilecoinPaychList = () => Promise<Array7Mu8ImpI>;
export type FilecoinPaychNewPayment = (p1: ObjectWXh79Zia, p2: ObjectWXh79Zia, p3: ArrayRKQ41New) => Promise<ObjectUF50ZBDS>;
export type FilecoinPaychSettle = (p1: ObjectWXh79Zia) => Promise<ContentIdentifier>;
export type FilecoinPaychStatus = (p1: ObjectWXh79Zia) => Promise<ObjectO0CTJoCl>;
export type FilecoinPaychVoucherAdd = (p1: ObjectWXh79Zia, p2: ObjectRnBxderB, p3: String2IbrpYpS, p4: ObjectTRro3FRk) => Promise<ObjectTRro3FRk>;
export type FilecoinPaychVoucherCheckSpendable = (p1: ObjectWXh79Zia, p2: ObjectRnBxderB, p3: String2IbrpYpS, p4: String2IbrpYpS) => Promise<BooleanIYY4Gv1X>;
export type FilecoinPaychVoucherCheckValid = (p1: ObjectWXh79Zia, p2: ObjectRnBxderB) => Promise<NullIUT54VvM>;
export type FilecoinPaychVoucherCreate = (p1: ObjectWXh79Zia, p2: ObjectTRro3FRk, p3: Number) => Promise<ObjectWMzdEx1C>;
export type FilecoinPaychVoucherList = (p1: ObjectWXh79Zia) => Promise<ArrayQFPMpdrK>;
export type FilecoinPaychVoucherSubmit = (p1: ObjectWXh79Zia, p2: ObjectRnBxderB, p3: String2IbrpYpS, p4: String2IbrpYpS) => Promise<ContentIdentifier>;
export type FilecoinStateAccountKey = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectWXh79Zia>;
export type FilecoinStateAllMinerFaults = (p1: Number, p2: ObjectMw6SutP8) => Promise<ArrayTzK5TTYg>;
export type FilecoinStateCall = (p1: ObjectOOOg4JJn, p2: ObjectMw6SutP8) => Promise<ObjectMt3SEa4S>;
export type FilecoinStateChangedActors = (p1: ContentIdentifier, p2: ContentIdentifier) => Promise<Object10UezsL5>;
export type FilecoinStateCirculatingSupply = (p1: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinStateCompute = (p1: Number, p2: ArrayTfS6CgDd, p3: ObjectMw6SutP8) => Promise<ObjectD7RFJ6SD>;
export type FilecoinStateDealProviderCollateralBounds = (p1: Number, p2: BooleanIYY4Gv1X, p3: ObjectMw6SutP8) => Promise<ObjectZutLAc4M>;
export type FilecoinStateDecodeParams = (p1: ObjectWXh79Zia, p2: Number, p3: String2IbrpYpS, p4: ObjectMw6SutP8) => Promise<ObjectZgItuZYX>;
export type FilecoinStateGetActor = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectBYMdfMQJ>;
export type FilecoinStateGetReceipt = (p1: ContentIdentifier, p2: ObjectMw6SutP8) => Promise<ObjectXz4IKszv>;
export type FilecoinStateListActors = (p1: ObjectMw6SutP8) => Promise<Array7Mu8ImpI>;
export type FilecoinStateListMessages = (p1: ObjectBCBCKXFA, p2: ObjectMw6SutP8, p3: Number) => Promise<ArrayId3OHima>;
export type FilecoinStateListMiners = (p1: ObjectMw6SutP8) => Promise<Array7Mu8ImpI>;
export type FilecoinStateLookupID = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectWXh79Zia>;
export type FilecoinStateMarketBalance = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectMQVTKuPk>;
export type FilecoinStateMarketDeals = (p1: ObjectMw6SutP8) => Promise<ObjectENdvl28N>;
export type FilecoinStateMarketParticipants = (p1: ObjectMw6SutP8) => Promise<Object5MgJsYPo>;
export type FilecoinStateMarketStorageDeal = (p1: Number, p2: ObjectMw6SutP8) => Promise<ObjectFMWZX8Qc>;
export type FilecoinStateMinerActiveSectors = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ArrayBFLgbtlS>;
export type FilecoinStateMinerAvailableBalance = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinStateMinerDeadlines = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ArrayQFMUOT8H>;
export type FilecoinStateMinerFaults = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectREUsqv6X>;
export type FilecoinStateMinerInfo = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectH4LtRNwh>;
export type FilecoinStateMinerInitialPledgeCollateral = (p1: ObjectWXh79Zia, p2: ObjectW0P0EkaP, p3: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinStateMinerPartitions = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectMw6SutP8) => Promise<Array3WjXhEPN>;
export type FilecoinStateMinerPower = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectMLzEAdSl>;
export type FilecoinStateMinerPreCommitDepositForPower = (p1: ObjectWXh79Zia, p2: ObjectW0P0EkaP, p3: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinStateMinerProvingDeadline = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectAOZ9YPlj>;
export type FilecoinStateMinerRecoveries = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectREUsqv6X>;
export type FilecoinStateMinerSectorAllocated = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectMw6SutP8) => Promise<BooleanIYY4Gv1X>;
export type FilecoinStateMinerSectorCount = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<Object5MZ1POLG>;
export type FilecoinStateMinerSectors = (p1: ObjectWXh79Zia, p2: ObjectNwRVM0Vh, p3: ObjectMw6SutP8) => Promise<ArrayBFLgbtlS>;
export type FilecoinStateNetworkName = () => Promise<String8And9Pou>;
export type FilecoinStateNetworkVersion = (p1: ObjectMw6SutP8) => Promise<Number>;
export type FilecoinStateReadState = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectKZPD6KsB>;
export type FilecoinStateReplay = (p1: ObjectMw6SutP8, p2: ContentIdentifier) => Promise<ObjectMt3SEa4S>;
export type FilecoinStateSearchMsg = (p1: ContentIdentifier) => Promise<ObjectTlcAx28B>;
export type FilecoinStateSearchMsgLimited = (p1: ContentIdentifier, p2: Number) => Promise<ObjectTlcAx28B>;
export type FilecoinStateSectorExpiration = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectMw6SutP8) => Promise<ObjectWovmks4Y>;
export type FilecoinStateSectorGetInfo = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectMw6SutP8) => Promise<Object5EJDhq5A>;
export type FilecoinStateSectorPartition = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectMw6SutP8) => Promise<ObjectNCEe8UIy>;
export type FilecoinStateSectorPreCommitInfo = (p1: ObjectWXh79Zia, p2: Number, p3: ObjectMw6SutP8) => Promise<ObjectMtRXyBKv>;
export type FilecoinStateVMCirculatingSupplyInternal = (p1: ObjectMw6SutP8) => Promise<ObjectEmZXzaIn>;
export type FilecoinStateVerifiedClientStatus = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinStateVerifiedRegistryRootKey = (p1: ObjectMw6SutP8) => Promise<ObjectWXh79Zia>;
export type FilecoinStateVerifierStatus = (p1: ObjectWXh79Zia, p2: ObjectMw6SutP8) => Promise<ObjectTRro3FRk>;
export type FilecoinStateWaitMsg = (p1: ContentIdentifier, p2: Number) => Promise<ObjectTlcAx28B>;
export type FilecoinStateWaitMsgLimited = (p1: ContentIdentifier, p2: Number, p3: Number) => Promise<ObjectTlcAx28B>;
export type FilecoinSyncCheckBad = (p1: ContentIdentifier) => Promise<StringEprQ2TNC>;
export type FilecoinSyncCheckpoint = (p1: ObjectMw6SutP8) => Promise<NullIUT54VvM>;
export type FilecoinSyncMarkBad = (p1: ContentIdentifier) => Promise<NullIUT54VvM>;
export type FilecoinSyncState = () => Promise<ObjectEVcd7Aow>;
export type FilecoinSyncSubmitBlock = (p1: ObjectGhlx9MOy) => Promise<NullIUT54VvM>;
export type FilecoinSyncUnmarkAllBad = () => Promise<NullIUT54VvM>;
export type FilecoinSyncUnmarkBad = (p1: ContentIdentifier) => Promise<NullIUT54VvM>;
export type FilecoinSyncValidateTipset = (p1: ObjectMw6SutP8) => Promise<BooleanIYY4Gv1X>;
export type FilecoinWalletBalance = (p1: ObjectWXh79Zia) => Promise<ObjectTRro3FRk>;
export type FilecoinWalletDefaultAddress = () => Promise<ObjectWXh79Zia>;
export type FilecoinWalletDelete = (p1: ObjectWXh79Zia) => Promise<NullIUT54VvM>;
export type FilecoinWalletExport = (p1: ObjectWXh79Zia) => Promise<ObjectGcAIGtwI>;
export type FilecoinWalletHas = (p1: ObjectWXh79Zia) => Promise<BooleanIYY4Gv1X>;
export type FilecoinWalletImport = (p1: ObjectGcAIGtwI) => Promise<ObjectWXh79Zia>;
export type FilecoinWalletList = () => Promise<Array7Mu8ImpI>;
export type FilecoinWalletNew = (p1: String8CwHPQpT) => Promise<ObjectWXh79Zia>;
export type FilecoinWalletSetDefault = (p1: ObjectWXh79Zia) => Promise<NullIUT54VvM>;
export type FilecoinWalletSign = (p1: ObjectWXh79Zia, p2: String2IbrpYpS) => Promise<ObjectQA1HvUjh>;
export type FilecoinWalletSignMessage = (p1: ObjectWXh79Zia, p2: ObjectOOOg4JJn) => Promise<ObjectNh6TrVDD>;
export type FilecoinWalletValidateAddress = (p1: StringEprQ2TNC) => Promise<ObjectWXh79Zia>;
export type FilecoinWalletVerify = (p1: ObjectWXh79Zia, p2: String2IbrpYpS, p3: ObjectQA1HvUjh) => Promise<BooleanIYY4Gv1X>;

export interface Options {
  transport: {
    type: "websocket" | "http" | "https" | "postmessagewindow" | "postmessageiframe";
    host: string;
    port: number;
    path?: string;
    protocol?: string;
  },
}

export class LotusRPCAPI {
  public rpc: Client;
  public static openrpcDocument: OpenRPC = {"openrpc":"1.2.6","info":{"title":"Lotus RPC API","version":"1.7.0-dev"},"methods":[{"name":"Filecoin.BeaconGetEntry","description":"```go\nfunc (s *FullNodeStruct) BeaconGetEntry(p0 context.Context, p1 abi.ChainEpoch) (*types.BeaconEntry, error) {\n\treturn s.Internal.BeaconGetEntry(p0, p1)\n}\n```","summary":"BeaconGetEntry returns the beacon entry for the given filecoin epoch. If\nthe entry has not yet been produced, the call will block until the entry\nbecomes available\n","paramStructure":"by-position","params":[{"name":"p1","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false}],"result":{"name":"*types.BeaconEntry","description":"*types.BeaconEntry","summary":"","schema":{"examples":[{"Round":42,"Data":"Ynl0ZSBhcnJheQ=="}],"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Round":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L888"}},{"name":"Filecoin.ChainDeleteObj","description":"```go\nfunc (s *FullNodeStruct) ChainDeleteObj(p0 context.Context, p1 cid.Cid) error {\n\treturn s.Internal.ChainDeleteObj(p0, p1)\n}\n```","summary":"ChainDeleteObj deletes node referenced by the given CID\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L892"}},{"name":"Filecoin.ChainGetBlock","description":"```go\nfunc (s *FullNodeStruct) ChainGetBlock(p0 context.Context, p1 cid.Cid) (*types.BlockHeader, error) {\n\treturn s.Internal.ChainGetBlock(p0, p1)\n}\n```","summary":"ChainGetBlock returns the block specified by the given CID.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"*types.BlockHeader","description":"*types.BlockHeader","summary":"","schema":{"examples":[{"Miner":"f01234","Ticket":{"VRFProof":"Ynl0ZSBhcnJheQ=="},"ElectionProof":{"WinCount":9,"VRFProof":"Ynl0ZSBhcnJheQ=="},"BeaconEntries":null,"WinPoStProof":null,"Parents":null,"ParentWeight":"0","Height":10101,"ParentStateRoot":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"ParentMessageReceipts":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Messages":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"BLSAggregate":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"Timestamp":42,"BlockSig":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"ForkSignaling":42,"ParentBaseFee":"0"}],"additionalProperties":false,"properties":{"BLSAggregate":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"BeaconEntries":{"items":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Round":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_2yUgzKFI"},"type":"array","title":"unorderedSetOf_objectOf_number_string_BA0rq1iJ_2yUgzKFIjem9Pecj"},"BlockSig":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"ElectionProof":{"additionalProperties":false,"properties":{"VRFProof":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"WinCount":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_HzQhZnR6"},"ForkSignaling":{"title":"number","type":"number"},"Height":{"title":"number","type":"number"},"Messages":{"title":"Content Identifier","type":"string"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ParentBaseFee":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ParentMessageReceipts":{"title":"Content Identifier","type":"string"},"ParentStateRoot":{"title":"Content Identifier","type":"string"},"ParentWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Parents":{"items":{"description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","title":"Content Identifier","type":"string"},"type":"array","title":"unorderedSetOf_Content IdentifierufUuJG8G"},"Ticket":{"additionalProperties":false,"properties":{"VRFProof":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_PNUmOxq4"},"Timestamp":{"title":"number","type":"number"},"WinPoStProof":{"items":{"additionalProperties":false,"properties":{"PoStProof":{"title":"number","type":"number"},"ProofBytes":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_9EoEvOMy"},"type":"array","title":"unorderedSetOf_objectOf_string_BA0rq1iJ_number_9EoEvOMysZWX8aag"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L900"}},{"name":"Filecoin.ChainGetBlockMessages","description":"```go\nfunc (s *FullNodeStruct) ChainGetBlockMessages(p0 context.Context, p1 cid.Cid) (*api.BlockMessages, error) {\n\treturn s.Internal.ChainGetBlockMessages(p0, p1)\n}\n```","summary":"ChainGetBlockMessages returns messages stored in the specified block.\n\nNote: If there are multiple blocks in a tipset, it's likely that some\nmessages will be duplicated. It's also possible for blocks in a tipset to have\ndifferent messages from the same sender at the same nonce. When that happens,\nonly the first message (in a block with lowest ticket) will be considered\nfor execution\n\nNOTE: THIS METHOD SHOULD ONLY BE USED FOR GETTING MESSAGES IN A SPECIFIC BLOCK\n\nDO NOT USE THIS METHOD TO GET MESSAGES INCLUDED IN A TIPSET\nUse ChainGetParentMessages, which will perform correct message deduplication\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"*api.BlockMessages","description":"*api.BlockMessages","summary":"","schema":{"examples":[{"BlsMessages":null,"SecpkMessages":null,"Cids":null}],"additionalProperties":false,"properties":{"BlsMessages":{"items":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"type":"array","title":"unorderedSetOf_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4i4Ra3tdy"},"Cids":{"items":{"description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","title":"Content Identifier","type":"string"},"type":"array","title":"unorderedSetOf_Content IdentifierufUuJG8G"},"SecpkMessages":{"items":{"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":"object","title":"objectOf_objectOf_number_string_BA0rq1iJ_DPaaQvVm_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_V8EVa7kT"},"type":"array","title":"unorderedSetOf_objectOf_objectOf_number_string_BA0rq1iJ_DPaaQvVm_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_V8EVa7kTIEA9kAXT"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L904"}},{"name":"Filecoin.ChainGetGenesis","description":"```go\nfunc (s *FullNodeStruct) ChainGetGenesis(p0 context.Context) (*types.TipSet, error) {\n\treturn s.Internal.ChainGetGenesis(p0)\n}\n```","summary":"ChainGetGenesis returns the genesis tipset.\n","paramStructure":"by-position","params":[],"result":{"name":"*types.TipSet","description":"*types.TipSet","summary":"","schema":{"examples":[{"Cids":null,"Blocks":null,"Height":0}],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L908"}},{"name":"Filecoin.ChainGetMessage","description":"```go\nfunc (s *FullNodeStruct) ChainGetMessage(p0 context.Context, p1 cid.Cid) (*types.Message, error) {\n\treturn s.Internal.ChainGetMessage(p0, p1)\n}\n```","summary":"ChainGetMessage reads a message referenced by the specified CID from the\nchain blockstore.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"*types.Message","description":"*types.Message","summary":"","schema":{"examples":[{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L912"}},{"name":"Filecoin.ChainGetNode","description":"```go\nfunc (s *FullNodeStruct) ChainGetNode(p0 context.Context, p1 string) (*api.IpldObject, error) {\n\treturn s.Internal.ChainGetNode(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"string","summary":"","schema":{"examples":["string value"],"type":["string"],"title":"string_eprQ2tNC"},"required":true,"deprecated":false}],"result":{"name":"*api.IpldObject","description":"*api.IpldObject","summary":"","schema":{"examples":[{"Cid":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Obj":{}}],"additionalProperties":false,"properties":{"Cid":{"title":"Content Identifier","type":"string"},"Obj":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L916"}},{"name":"Filecoin.ChainGetParentMessages","description":"```go\nfunc (s *FullNodeStruct) ChainGetParentMessages(p0 context.Context, p1 cid.Cid) ([]api.Message, error) {\n\treturn s.Internal.ChainGetParentMessages(p0, p1)\n}\n```","summary":"ChainGetParentMessages returns messages stored in parent tipset of the\nspecified block.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"[]api.Message","description":"[]api.Message","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Cid":{"title":"Content Identifier","type":"string"},"Message":{"additionalProperties":false,"properties":{"Cid":{"title":"Content Identifier","type":"string"},"Message":{"title":"any_l9Fw4VUO"}},"type":"object","title":"objectOf_any_l9Fw4VUO_Content Identifier_7SC90G7o"}},"type":["object"],"title":"object_v5XLSYDF"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L920"}},{"name":"Filecoin.ChainGetParentReceipts","description":"```go\nfunc (s *FullNodeStruct) ChainGetParentReceipts(p0 context.Context, p1 cid.Cid) ([]*types.MessageReceipt, error) {\n\treturn s.Internal.ChainGetParentReceipts(p0, p1)\n}\n```","summary":"ChainGetParentReceipts returns receipts for messages in parent tipset of\nthe specified block. The receipts in the list returned is one-to-one with the\nmessages returned by a call to ChainGetParentMessages with the same blockCid.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"[]*types.MessageReceipt","description":"[]*types.MessageReceipt","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":["object"],"title":"object_q4tLcmB0"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L924"}},{"name":"Filecoin.ChainGetPath","description":"```go\nfunc (s *FullNodeStruct) ChainGetPath(p0 context.Context, p1 types.TipSetKey, p2 types.TipSetKey) ([]*api.HeadChange, error) {\n\treturn s.Internal.ChainGetPath(p0, p1, p2)\n}\n```","summary":"ChainGetPath returns a set of revert/apply operations needed to get from\none tipset to another, for example:\n```\n       to\n        ^\nfrom   tAA\n  ^     ^\ntBA    tAB\n ^---*--^\n     ^\n    tRR\n```\nWould return `[revert(tBA), apply(tAB), apply(tAA)]`\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]*api.HeadChange","description":"[]*api.HeadChange","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Type":{"type":"string","title":"string_doaGddGA"},"Val":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_UllcSffT"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L928"}},{"name":"Filecoin.ChainGetRandomnessFromBeacon","description":"```go\nfunc (s *FullNodeStruct) ChainGetRandomnessFromBeacon(p0 context.Context, p1 types.TipSetKey, p2 crypto.DomainSeparationTag, p3 abi.ChainEpoch, p4 []byte) (abi.Randomness, error) {\n\treturn s.Internal.ChainGetRandomnessFromBeacon(p0, p1, p2, p3, p4)\n}\n```","summary":"ChainGetRandomnessFromBeacon is used to sample the beacon for randomness.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false},{"name":"p2","description":"crypto.DomainSeparationTag","summary":"","schema":{"title":"number","description":"Number is a number","examples":[2],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false},{"name":"p4","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false}],"result":{"name":"abi.Randomness","description":"abi.Randomness","summary":"","schema":{"examples":[null],"items":[{"title":"number","description":"Number is a number","type":["number"]}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L932"}},{"name":"Filecoin.ChainGetRandomnessFromTickets","description":"```go\nfunc (s *FullNodeStruct) ChainGetRandomnessFromTickets(p0 context.Context, p1 types.TipSetKey, p2 crypto.DomainSeparationTag, p3 abi.ChainEpoch, p4 []byte) (abi.Randomness, error) {\n\treturn s.Internal.ChainGetRandomnessFromTickets(p0, p1, p2, p3, p4)\n}\n```","summary":"ChainGetRandomnessFromTickets is used to sample the chain for randomness.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false},{"name":"p2","description":"crypto.DomainSeparationTag","summary":"","schema":{"title":"number","description":"Number is a number","examples":[2],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false},{"name":"p4","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false}],"result":{"name":"abi.Randomness","description":"abi.Randomness","summary":"","schema":{"examples":[null],"items":[{"title":"number","description":"Number is a number","type":["number"]}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L936"}},{"name":"Filecoin.ChainGetTipSet","description":"```go\nfunc (s *FullNodeStruct) ChainGetTipSet(p0 context.Context, p1 types.TipSetKey) (*types.TipSet, error) {\n\treturn s.Internal.ChainGetTipSet(p0, p1)\n}\n```","summary":"ChainGetTipSet returns the tipset specified by the given TipSetKey.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*types.TipSet","description":"*types.TipSet","summary":"","schema":{"examples":[{"Cids":null,"Blocks":null,"Height":0}],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L940"}},{"name":"Filecoin.ChainGetTipSetByHeight","description":"```go\nfunc (s *FullNodeStruct) ChainGetTipSetByHeight(p0 context.Context, p1 abi.ChainEpoch, p2 types.TipSetKey) (*types.TipSet, error) {\n\treturn s.Internal.ChainGetTipSetByHeight(p0, p1, p2)\n}\n```","summary":"ChainGetTipSetByHeight looks back for a tipset at the specified epoch.\nIf there are no blocks at the specified epoch, a tipset at an earlier epoch\nwill be returned.\n","paramStructure":"by-position","params":[{"name":"p1","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*types.TipSet","description":"*types.TipSet","summary":"","schema":{"examples":[{"Cids":null,"Blocks":null,"Height":0}],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L944"}},{"name":"Filecoin.ChainHasObj","description":"```go\nfunc (s *FullNodeStruct) ChainHasObj(p0 context.Context, p1 cid.Cid) (bool, error) {\n\treturn s.Internal.ChainHasObj(p0, p1)\n}\n```","summary":"ChainHasObj checks if a given CID exists in the chain blockstore.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"bool","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L948"}},{"name":"Filecoin.ChainHead","description":"```go\nfunc (s *FullNodeStruct) ChainHead(p0 context.Context) (*types.TipSet, error) {\n\treturn s.Internal.ChainHead(p0)\n}\n```","summary":"ChainHead returns the current head of the chain.\n","paramStructure":"by-position","params":[],"result":{"name":"*types.TipSet","description":"*types.TipSet","summary":"","schema":{"examples":[{"Cids":null,"Blocks":null,"Height":0}],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L952"}},{"name":"Filecoin.ChainReadObj","description":"```go\nfunc (s *FullNodeStruct) ChainReadObj(p0 context.Context, p1 cid.Cid) ([]byte, error) {\n\treturn s.Internal.ChainReadObj(p0, p1)\n}\n```","summary":"ChainReadObj reads ipld nodes referenced by the specified CID from chain\nblockstore and returns raw bytes.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"[]byte","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L960"}},{"name":"Filecoin.ChainSetHead","description":"```go\nfunc (s *FullNodeStruct) ChainSetHead(p0 context.Context, p1 types.TipSetKey) error {\n\treturn s.Internal.ChainSetHead(p0, p1)\n}\n```","summary":"ChainSetHead forcefully sets current chain head. Use with caution.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L964"}},{"name":"Filecoin.ChainStatObj","description":"```go\nfunc (s *FullNodeStruct) ChainStatObj(p0 context.Context, p1 cid.Cid, p2 cid.Cid) (api.ObjStat, error) {\n\treturn s.Internal.ChainStatObj(p0, p1, p2)\n}\n```","summary":"ChainStatObj returns statistics about the graph referenced by 'obj'.\nIf 'base' is also specified, then the returned stat will be a diff\nbetween the two objects.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},{"name":"p2","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"api.ObjStat","description":"api.ObjStat","summary":"","schema":{"examples":[{"Size":42,"Links":42}],"additionalProperties":false,"properties":{"Links":{"title":"number","type":"number"},"Size":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L968"}},{"name":"Filecoin.ChainTipSetWeight","description":"```go\nfunc (s *FullNodeStruct) ChainTipSetWeight(p0 context.Context, p1 types.TipSetKey) (types.BigInt, error) {\n\treturn s.Internal.ChainTipSetWeight(p0, p1)\n}\n```","summary":"ChainTipSetWeight computes weight for the specified tipset.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L972"}},{"name":"Filecoin.ClientCalcCommP","description":"```go\nfunc (s *FullNodeStruct) ClientCalcCommP(p0 context.Context, p1 string) (*api.CommPRet, error) {\n\treturn s.Internal.ClientCalcCommP(p0, p1)\n}\n```","summary":"ClientCalcCommP calculates the CommP for a specified file\n","paramStructure":"by-position","params":[{"name":"p1","description":"string","summary":"","schema":{"examples":["string value"],"type":["string"],"title":"string_eprQ2tNC"},"required":true,"deprecated":false}],"result":{"name":"*api.CommPRet","description":"*api.CommPRet","summary":"","schema":{"examples":[{"Root":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Size":1024}],"additionalProperties":false,"properties":{"Root":{"title":"Content Identifier","type":"string"},"Size":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L976"}},{"name":"Filecoin.ClientCancelDataTransfer","description":"```go\nfunc (s *FullNodeStruct) ClientCancelDataTransfer(p0 context.Context, p1 datatransfer.TransferID, p2 peer.ID, p3 bool) error {\n\treturn s.Internal.ClientCancelDataTransfer(p0, p1, p2, p3)\n}\n```","summary":"ClientCancelDataTransfer cancels a data transfer with the given transfer ID and other peer\n","paramStructure":"by-position","params":[{"name":"p1","description":"datatransfer.TransferID","summary":"","schema":{"title":"number","description":"Number is a number","examples":[3],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"peer.ID","summary":"","schema":{"examples":["12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"],"type":["string"],"title":"string_QFEZCRqE"},"required":true,"deprecated":false},{"name":"p3","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"],"title":"boolean_iYY4Gv1x"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L980"}},{"name":"Filecoin.ClientDealPieceCID","description":"```go\nfunc (s *FullNodeStruct) ClientDealPieceCID(p0 context.Context, p1 cid.Cid) (api.DataCIDSize, error) {\n\treturn s.Internal.ClientDealPieceCID(p0, p1)\n}\n```","summary":"ClientCalcCommP calculates the CommP and data size of the specified CID\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"api.DataCIDSize","description":"api.DataCIDSize","summary":"","schema":{"examples":[{"PayloadSize":9,"PieceSize":1032,"PieceCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}}],"additionalProperties":false,"properties":{"PayloadSize":{"title":"number","type":"number"},"PieceCID":{"title":"Content Identifier","type":"string"},"PieceSize":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L988"}},{"name":"Filecoin.ClientDealSize","description":"```go\nfunc (s *FullNodeStruct) ClientDealSize(p0 context.Context, p1 cid.Cid) (api.DataSize, error) {\n\treturn s.Internal.ClientDealSize(p0, p1)\n}\n```","summary":"ClientDealSize calculates real deal data size\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"api.DataSize","description":"api.DataSize","summary":"","schema":{"examples":[{"PayloadSize":9,"PieceSize":1032}],"additionalProperties":false,"properties":{"PayloadSize":{"title":"number","type":"number"},"PieceSize":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L992"}},{"name":"Filecoin.ClientFindData","description":"```go\nfunc (s *FullNodeStruct) ClientFindData(p0 context.Context, p1 cid.Cid, p2 *cid.Cid) ([]api.QueryOffer, error) {\n\treturn s.Internal.ClientFindData(p0, p1, p2)\n}\n```","summary":"ClientFindData identifies peers that have a certain file, and returns QueryOffers (one per peer).\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},{"name":"p2","description":"*cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[null],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"[]api.QueryOffer","description":"[]api.QueryOffer","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Err":{"type":"string","title":"string_doaGddGA"},"MinPrice":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"MinerPeer":{"additionalProperties":false,"properties":{"Address":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ID":{"type":"string","title":"string_doaGddGA"},"PieceCID":{"title":"Content Identifier","type":"string"}},"type":"object","title":"objectOf_Content Identifier_string_doaGddGA_object_m9mo69s8_5zHhptra"},"PaymentInterval":{"title":"number","type":"number"},"PaymentIntervalIncrease":{"title":"number","type":"number"},"Piece":{"title":"Content Identifier","type":"string"},"Root":{"title":"Content Identifier","type":"string"},"Size":{"title":"number","type":"number"},"UnsealPrice":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_PCuPN0zd"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L996"}},{"name":"Filecoin.ClientGenCar","description":"```go\nfunc (s *FullNodeStruct) ClientGenCar(p0 context.Context, p1 api.FileRef, p2 string) error {\n\treturn s.Internal.ClientGenCar(p0, p1, p2)\n}\n```","summary":"ClientGenCar generates a CAR file for the specified file.\n","paramStructure":"by-position","params":[{"name":"p1","description":"api.FileRef","summary":"","schema":{"examples":[{"Path":"string value","IsCAR":true}],"additionalProperties":false,"properties":{"IsCAR":{"type":"boolean","title":"boolean_vyG3AETh"},"Path":{"type":"string","title":"string_doaGddGA"}},"type":["object"],"title":"object_lK1L4Uuq"},"required":true,"deprecated":false},{"name":"p2","description":"string","summary":"","schema":{"examples":["string value"],"type":["string"],"title":"string_eprQ2tNC"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1000"}},{"name":"Filecoin.ClientGetDealInfo","description":"```go\nfunc (s *FullNodeStruct) ClientGetDealInfo(p0 context.Context, p1 cid.Cid) (*api.DealInfo, error) {\n\treturn s.Internal.ClientGetDealInfo(p0, p1)\n}\n```","summary":"ClientGetDealInfo returns the latest information about a given deal.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"*api.DealInfo","description":"*api.DealInfo","summary":"","schema":{"examples":[{"ProposalCid":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"State":42,"Message":"string value","Provider":"f01234","DataRef":{"TransferType":"string value","Root":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"PieceCid":null,"PieceSize":1024,"RawBlockSize":42},"PieceCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Size":42,"PricePerEpoch":"0","Duration":42,"DealID":5432,"CreationTime":"0001-01-01T00:00:00Z","Verified":true,"TransferChannelID":{"Initiator":"12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf","Responder":"12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf","ID":3},"DataTransfer":{"TransferID":3,"Status":1,"BaseCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"IsInitiator":true,"IsSender":true,"Voucher":"string value","Message":"string value","OtherPeer":"12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf","Transferred":42}}],"additionalProperties":false,"properties":{"CreationTime":{"format":"date-time","type":"string","title":"string_V0uwQeVu"},"DataRef":{"additionalProperties":false,"properties":{"PieceCid":{"title":"Content Identifier","type":"string"},"PieceSize":{"title":"number","type":"number"},"RawBlockSize":{"title":"number","type":"number"},"Root":{"title":"Content Identifier","type":"string"},"TransferType":{"type":"string","title":"string_doaGddGA"}},"type":"object","title":"objectOf_string_doaGddGA_Content Identifier_number_number_Content Identifier_n57692k9"},"DataTransfer":{"additionalProperties":false,"properties":{"BaseCID":{"title":"Content Identifier","type":"string"},"IsInitiator":{"type":"boolean","title":"boolean_vyG3AETh"},"IsSender":{"type":"boolean","title":"boolean_vyG3AETh"},"Message":{"type":"string","title":"string_doaGddGA"},"OtherPeer":{"type":"string","title":"string_doaGddGA"},"Status":{"title":"number","type":"number"},"TransferID":{"title":"number","type":"number"},"Transferred":{"title":"number","type":"number"},"Voucher":{"type":"string","title":"string_doaGddGA"}},"type":"object","title":"objectOf_string_doaGddGA_number_number_number_string_doaGddGA_string_doaGddGA_boolean_vyG3AETh_boolean_vyG3AETh_Content Identifier_mabtoPdX"},"DealID":{"title":"number","type":"number"},"Duration":{"title":"number","type":"number"},"Message":{"type":"string","title":"string_doaGddGA"},"PieceCID":{"title":"Content Identifier","type":"string"},"PricePerEpoch":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ProposalCid":{"title":"Content Identifier","type":"string"},"Provider":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Size":{"title":"number","type":"number"},"State":{"title":"number","type":"number"},"TransferChannelID":{"additionalProperties":false,"properties":{"ID":{"title":"number","type":"number"},"Initiator":{"type":"string","title":"string_doaGddGA"},"Responder":{"type":"string","title":"string_doaGddGA"}},"type":"object","title":"objectOf_string_doaGddGA_string_doaGddGA_number_PkcbSjqi"},"Verified":{"type":"boolean","title":"boolean_vyG3AETh"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1004"}},{"name":"Filecoin.ClientGetDealStatus","description":"```go\nfunc (s *FullNodeStruct) ClientGetDealStatus(p0 context.Context, p1 uint64) (string, error) {\n\treturn s.Internal.ClientGetDealStatus(p0, p1)\n}\n```","summary":"ClientGetDealStatus returns status given a code\n","paramStructure":"by-position","params":[{"name":"p1","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false}],"result":{"name":"string","description":"string","summary":"","schema":{"examples":["string value"],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1008"}},{"name":"Filecoin.ClientHasLocal","description":"```go\nfunc (s *FullNodeStruct) ClientHasLocal(p0 context.Context, p1 cid.Cid) (bool, error) {\n\treturn s.Internal.ClientHasLocal(p0, p1)\n}\n```","summary":"ClientHasLocal indicates whether a certain CID is locally stored.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"bool","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1016"}},{"name":"Filecoin.ClientImport","description":"```go\nfunc (s *FullNodeStruct) ClientImport(p0 context.Context, p1 api.FileRef) (*api.ImportRes, error) {\n\treturn s.Internal.ClientImport(p0, p1)\n}\n```","summary":"ClientImport imports file under the specified path into filestore.\n","paramStructure":"by-position","params":[{"name":"p1","description":"api.FileRef","summary":"","schema":{"examples":[{"Path":"string value","IsCAR":true}],"additionalProperties":false,"properties":{"IsCAR":{"type":"boolean","title":"boolean_vyG3AETh"},"Path":{"type":"string","title":"string_doaGddGA"}},"type":["object"],"title":"object_lK1L4Uuq"},"required":true,"deprecated":false}],"result":{"name":"*api.ImportRes","description":"*api.ImportRes","summary":"","schema":{"examples":[{"Root":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"ImportID":50}],"additionalProperties":false,"properties":{"ImportID":{"title":"number","type":"number"},"Root":{"title":"Content Identifier","type":"string"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1020"}},{"name":"Filecoin.ClientListDataTransfers","description":"```go\nfunc (s *FullNodeStruct) ClientListDataTransfers(p0 context.Context) ([]api.DataTransferChannel, error) {\n\treturn s.Internal.ClientListDataTransfers(p0)\n}\n```","summary":"ClientListTransfers returns the status of all ongoing transfers of data\n","paramStructure":"by-position","params":[],"result":{"name":"[]api.DataTransferChannel","description":"[]api.DataTransferChannel","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"BaseCID":{"title":"Content Identifier","type":"string"},"IsInitiator":{"type":"boolean","title":"boolean_vyG3AETh"},"IsSender":{"type":"boolean","title":"boolean_vyG3AETh"},"Message":{"type":"string","title":"string_doaGddGA"},"OtherPeer":{"type":"string","title":"string_doaGddGA"},"Status":{"title":"number","type":"number"},"TransferID":{"title":"number","type":"number"},"Transferred":{"title":"number","type":"number"},"Voucher":{"type":"string","title":"string_doaGddGA"}},"type":["object"],"title":"object_oFAaCkq2"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1024"}},{"name":"Filecoin.ClientListDeals","description":"```go\nfunc (s *FullNodeStruct) ClientListDeals(p0 context.Context) ([]api.DealInfo, error) {\n\treturn s.Internal.ClientListDeals(p0)\n}\n```","summary":"ClientListDeals returns information about the deals made by the local client.\n","paramStructure":"by-position","params":[],"result":{"name":"[]api.DealInfo","description":"[]api.DealInfo","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"CreationTime":{"format":"date-time","type":"string","title":"string_V0uwQeVu"},"DataRef":{"additionalProperties":false,"properties":{"PieceCid":{"title":"Content Identifier","type":"string"},"PieceSize":{"title":"number","type":"number"},"RawBlockSize":{"title":"number","type":"number"},"Root":{"title":"Content Identifier","type":"string"},"TransferType":{"type":"string","title":"string_doaGddGA"}},"type":"object","title":"objectOf_string_doaGddGA_Content Identifier_number_number_Content Identifier_n57692k9"},"DataTransfer":{"additionalProperties":false,"properties":{"BaseCID":{"title":"Content Identifier","type":"string"},"IsInitiator":{"type":"boolean","title":"boolean_vyG3AETh"},"IsSender":{"type":"boolean","title":"boolean_vyG3AETh"},"Message":{"type":"string","title":"string_doaGddGA"},"OtherPeer":{"type":"string","title":"string_doaGddGA"},"Status":{"title":"number","type":"number"},"TransferID":{"title":"number","type":"number"},"Transferred":{"title":"number","type":"number"},"Voucher":{"type":"string","title":"string_doaGddGA"}},"type":"object","title":"objectOf_string_doaGddGA_number_number_number_string_doaGddGA_string_doaGddGA_boolean_vyG3AETh_boolean_vyG3AETh_Content Identifier_mabtoPdX"},"DealID":{"title":"number","type":"number"},"Duration":{"title":"number","type":"number"},"Message":{"type":"string","title":"string_doaGddGA"},"PieceCID":{"title":"Content Identifier","type":"string"},"PricePerEpoch":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ProposalCid":{"title":"Content Identifier","type":"string"},"Provider":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Size":{"title":"number","type":"number"},"State":{"title":"number","type":"number"},"TransferChannelID":{"additionalProperties":false,"properties":{"ID":{"title":"number","type":"number"},"Initiator":{"type":"string","title":"string_doaGddGA"},"Responder":{"type":"string","title":"string_doaGddGA"}},"type":"object","title":"objectOf_string_doaGddGA_string_doaGddGA_number_PkcbSjqi"},"Verified":{"type":"boolean","title":"boolean_vyG3AETh"}},"type":["object"],"title":"object_Dl9QZpfi"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1028"}},{"name":"Filecoin.ClientListImports","description":"```go\nfunc (s *FullNodeStruct) ClientListImports(p0 context.Context) ([]api.Import, error) {\n\treturn s.Internal.ClientListImports(p0)\n}\n```","summary":"ClientListImports lists imported files and their root CIDs\n","paramStructure":"by-position","params":[],"result":{"name":"[]api.Import","description":"[]api.Import","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Err":{"type":"string","title":"string_doaGddGA"},"FilePath":{"type":"string","title":"string_doaGddGA"},"Key":{"title":"number","type":"number"},"Root":{"title":"Content Identifier","type":"string"},"Source":{"type":"string","title":"string_doaGddGA"}},"type":["object"],"title":"object_js9DRQBd"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1032"}},{"name":"Filecoin.ClientMinerQueryOffer","description":"```go\nfunc (s *FullNodeStruct) ClientMinerQueryOffer(p0 context.Context, p1 address.Address, p2 cid.Cid, p3 *cid.Cid) (api.QueryOffer, error) {\n\treturn s.Internal.ClientMinerQueryOffer(p0, p1, p2, p3)\n}\n```","summary":"ClientMinerQueryOffer returns a QueryOffer for the specific miner and file.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},{"name":"p3","description":"*cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[null],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"api.QueryOffer","description":"api.QueryOffer","summary":"","schema":{"examples":[{"Err":"string value","Root":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Piece":null,"Size":42,"MinPrice":"0","UnsealPrice":"0","PaymentInterval":42,"PaymentIntervalIncrease":42,"Miner":"f01234","MinerPeer":{"Address":"f01234","ID":"12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf","PieceCID":null}}],"additionalProperties":false,"properties":{"Err":{"type":"string","title":"string_doaGddGA"},"MinPrice":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"MinerPeer":{"additionalProperties":false,"properties":{"Address":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ID":{"type":"string","title":"string_doaGddGA"},"PieceCID":{"title":"Content Identifier","type":"string"}},"type":"object","title":"objectOf_Content Identifier_string_doaGddGA_object_m9mo69s8_5zHhptra"},"PaymentInterval":{"title":"number","type":"number"},"PaymentIntervalIncrease":{"title":"number","type":"number"},"Piece":{"title":"Content Identifier","type":"string"},"Root":{"title":"Content Identifier","type":"string"},"Size":{"title":"number","type":"number"},"UnsealPrice":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1036"}},{"name":"Filecoin.ClientQueryAsk","description":"```go\nfunc (s *FullNodeStruct) ClientQueryAsk(p0 context.Context, p1 peer.ID, p2 address.Address) (*storagemarket.StorageAsk, error) {\n\treturn s.Internal.ClientQueryAsk(p0, p1, p2)\n}\n```","summary":"ClientQueryAsk returns a signed StorageAsk from the specified miner.\n","paramStructure":"by-position","params":[{"name":"p1","description":"peer.ID","summary":"","schema":{"examples":["12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"],"type":["string"],"title":"string_QFEZCRqE"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"*storagemarket.StorageAsk","description":"*storagemarket.StorageAsk","summary":"","schema":{"examples":[{"Price":"0","VerifiedPrice":"0","MinPieceSize":1032,"MaxPieceSize":1032,"Miner":"f01234","Timestamp":10101,"Expiry":10101,"SeqNo":42}],"additionalProperties":false,"properties":{"Expiry":{"title":"number","type":"number"},"MaxPieceSize":{"title":"number","type":"number"},"MinPieceSize":{"title":"number","type":"number"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Price":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"SeqNo":{"title":"number","type":"number"},"Timestamp":{"title":"number","type":"number"},"VerifiedPrice":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1040"}},{"name":"Filecoin.ClientRemoveImport","description":"```go\nfunc (s *FullNodeStruct) ClientRemoveImport(p0 context.Context, p1 multistore.StoreID) error {\n\treturn s.Internal.ClientRemoveImport(p0, p1)\n}\n```","summary":"ClientRemoveImport removes file import\n","paramStructure":"by-position","params":[{"name":"p1","description":"multistore.StoreID","summary":"","schema":{"title":"number","description":"Number is a number","examples":[50],"type":["number"]},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1044"}},{"name":"Filecoin.ClientRestartDataTransfer","description":"```go\nfunc (s *FullNodeStruct) ClientRestartDataTransfer(p0 context.Context, p1 datatransfer.TransferID, p2 peer.ID, p3 bool) error {\n\treturn s.Internal.ClientRestartDataTransfer(p0, p1, p2, p3)\n}\n```","summary":"ClientRestartDataTransfer attempts to restart a data transfer with the given transfer ID and other peer\n","paramStructure":"by-position","params":[{"name":"p1","description":"datatransfer.TransferID","summary":"","schema":{"title":"number","description":"Number is a number","examples":[3],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"peer.ID","summary":"","schema":{"examples":["12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf"],"type":["string"],"title":"string_QFEZCRqE"},"required":true,"deprecated":false},{"name":"p3","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"],"title":"boolean_iYY4Gv1x"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1048"}},{"name":"Filecoin.ClientRetrieve","description":"```go\nfunc (s *FullNodeStruct) ClientRetrieve(p0 context.Context, p1 api.RetrievalOrder, p2 *api.FileRef) error {\n\treturn s.Internal.ClientRetrieve(p0, p1, p2)\n}\n```","summary":"ClientRetrieve initiates the retrieval of a file, as specified in the order.\n","paramStructure":"by-position","params":[{"name":"p1","description":"api.RetrievalOrder","summary":"","schema":{"examples":[{"Root":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Piece":null,"Size":42,"Total":"0","UnsealPrice":"0","PaymentInterval":42,"PaymentIntervalIncrease":42,"Client":"f01234","Miner":"f01234","MinerPeer":{"Address":"f01234","ID":"12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf","PieceCID":null}}],"additionalProperties":false,"properties":{"Client":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"MinerPeer":{"additionalProperties":false,"properties":{"Address":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ID":{"type":"string","title":"string_doaGddGA"},"PieceCID":{"title":"Content Identifier","type":"string"}},"type":"object","title":"objectOf_Content Identifier_string_doaGddGA_object_m9mo69s8_5zHhptra"},"PaymentInterval":{"title":"number","type":"number"},"PaymentIntervalIncrease":{"title":"number","type":"number"},"Piece":{"title":"Content Identifier","type":"string"},"Root":{"title":"Content Identifier","type":"string"},"Size":{"title":"number","type":"number"},"Total":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"UnsealPrice":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_B8YEjTta"},"required":true,"deprecated":false},{"name":"p2","description":"*api.FileRef","summary":"","schema":{"examples":[{"Path":"string value","IsCAR":true}],"additionalProperties":false,"properties":{"IsCAR":{"type":"boolean","title":"boolean_vyG3AETh"},"Path":{"type":"string","title":"string_doaGddGA"}},"type":["object"],"title":"object_lK1L4Uuq"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1052"}},{"name":"Filecoin.ClientRetrieveTryRestartInsufficientFunds","description":"```go\nfunc (s *FullNodeStruct) ClientRetrieveTryRestartInsufficientFunds(p0 context.Context, p1 address.Address) error {\n\treturn s.Internal.ClientRetrieveTryRestartInsufficientFunds(p0, p1)\n}\n```","summary":"ClientRetrieveTryRestartInsufficientFunds attempts to restart stalled retrievals on a given payment channel\nwhich are stuck due to insufficient funds\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1056"}},{"name":"Filecoin.ClientStartDeal","description":"```go\nfunc (s *FullNodeStruct) ClientStartDeal(p0 context.Context, p1 *api.StartDealParams) (*cid.Cid, error) {\n\treturn s.Internal.ClientStartDeal(p0, p1)\n}\n```","summary":"ClientStartDeal proposes a deal with a miner.\n","paramStructure":"by-position","params":[{"name":"p1","description":"*api.StartDealParams","summary":"","schema":{"examples":[{"Data":{"TransferType":"string value","Root":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"PieceCid":null,"PieceSize":1024,"RawBlockSize":42},"Wallet":"f01234","Miner":"f01234","EpochPrice":"0","MinBlocksDuration":42,"ProviderCollateral":"0","DealStartEpoch":10101,"FastRetrieval":true,"VerifiedDeal":true}],"additionalProperties":false,"properties":{"Data":{"additionalProperties":false,"properties":{"PieceCid":{"title":"Content Identifier","type":"string"},"PieceSize":{"title":"number","type":"number"},"RawBlockSize":{"title":"number","type":"number"},"Root":{"title":"Content Identifier","type":"string"},"TransferType":{"type":"string","title":"string_doaGddGA"}},"type":"object","title":"objectOf_string_doaGddGA_Content Identifier_number_number_Content Identifier_n57692k9"},"DealStartEpoch":{"title":"number","type":"number"},"EpochPrice":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"FastRetrieval":{"type":"boolean","title":"boolean_vyG3AETh"},"MinBlocksDuration":{"title":"number","type":"number"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ProviderCollateral":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"VerifiedDeal":{"type":"boolean","title":"boolean_vyG3AETh"},"Wallet":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_rzHmWGCI"},"required":true,"deprecated":false}],"result":{"name":"*cid.Cid","description":"*cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[null],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1064"}},{"name":"Filecoin.CreateBackup","description":"```go\nfunc (s *FullNodeStruct) CreateBackup(p0 context.Context, p1 string) error {\n\treturn s.Internal.CreateBackup(p0, p1)\n}\n```","summary":"CreateBackup creates node backup onder the specified file name. The\nmethod requires that the lotus daemon is running with the\nLOTUS_BACKUP_BASE_PATH environment variable set to some path, and that\nthe path specified when calling CreateBackup is within the base path\n","paramStructure":"by-position","params":[{"name":"p1","description":"string","summary":"","schema":{"examples":["string value"],"type":["string"],"title":"string_eprQ2tNC"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1068"}},{"name":"Filecoin.GasEstimateFeeCap","description":"```go\nfunc (s *FullNodeStruct) GasEstimateFeeCap(p0 context.Context, p1 *types.Message, p2 int64, p3 types.TipSetKey) (types.BigInt, error) {\n\treturn s.Internal.GasEstimateFeeCap(p0, p1, p2, p3)\n}\n```","summary":"GasEstimateFeeCap estimates gas fee cap\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.Message","summary":"","schema":{"examples":[{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"],"title":"object_oOOg4jJn"},"required":true,"deprecated":false},{"name":"p2","description":"int64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1072"}},{"name":"Filecoin.GasEstimateGasLimit","description":"```go\nfunc (s *FullNodeStruct) GasEstimateGasLimit(p0 context.Context, p1 *types.Message, p2 types.TipSetKey) (int64, error) {\n\treturn s.Internal.GasEstimateGasLimit(p0, p1, p2)\n}\n```","summary":"GasEstimateGasLimit estimates gas used by the message and returns it.\nIt fails if message fails to execute.\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.Message","summary":"","schema":{"examples":[{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"],"title":"object_oOOg4jJn"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"int64","description":"int64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1076"}},{"name":"Filecoin.GasEstimateGasPremium","description":"```go\nfunc (s *FullNodeStruct) GasEstimateGasPremium(p0 context.Context, p1 uint64, p2 address.Address, p3 int64, p4 types.TipSetKey) (types.BigInt, error) {\n\treturn s.Internal.GasEstimateGasPremium(p0, p1, p2, p3, p4)\n}\n```","summary":"GasEstimateGasPremium estimates what gas price should be used for a\nmessage to have high likelihood of inclusion in `nblocksincl` epochs.\n","paramStructure":"by-position","params":[{"name":"p1","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"int64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},{"name":"p4","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1080"}},{"name":"Filecoin.GasEstimateMessageGas","description":"```go\nfunc (s *FullNodeStruct) GasEstimateMessageGas(p0 context.Context, p1 *types.Message, p2 *api.MessageSendSpec, p3 types.TipSetKey) (*types.Message, error) {\n\treturn s.Internal.GasEstimateMessageGas(p0, p1, p2, p3)\n}\n```","summary":"GasEstimateMessageGas estimates gas values for unset message gas fields\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.Message","summary":"","schema":{"examples":[{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"],"title":"object_oOOg4jJn"},"required":true,"deprecated":false},{"name":"p2","description":"*api.MessageSendSpec","summary":"","schema":{"examples":[{"MaxFee":"0"}],"additionalProperties":false,"properties":{"MaxFee":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_T55VMCEg"},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*types.Message","description":"*types.Message","summary":"","schema":{"examples":[{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1084"}},{"name":"Filecoin.MarketAddBalance","description":"```go\nfunc (s *FullNodeStruct) MarketAddBalance(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt) (cid.Cid, error) {\n\treturn s.Internal.MarketAddBalance(p0, p1, p2, p3)\n}\n```","summary":"MarketAddBalance adds funds to the market actor\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1088"}},{"name":"Filecoin.MarketGetReserved","description":"```go\nfunc (s *FullNodeStruct) MarketGetReserved(p0 context.Context, p1 address.Address) (types.BigInt, error) {\n\treturn s.Internal.MarketGetReserved(p0, p1)\n}\n```","summary":"MarketGetReserved gets the amount of funds that are currently reserved for the address\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1092"}},{"name":"Filecoin.MarketReleaseFunds","description":"```go\nfunc (s *FullNodeStruct) MarketReleaseFunds(p0 context.Context, p1 address.Address, p2 types.BigInt) error {\n\treturn s.Internal.MarketReleaseFunds(p0, p1, p2)\n}\n```","summary":"MarketReleaseFunds releases funds reserved by MarketReserveFunds\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1096"}},{"name":"Filecoin.MarketReserveFunds","description":"```go\nfunc (s *FullNodeStruct) MarketReserveFunds(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt) (cid.Cid, error) {\n\treturn s.Internal.MarketReserveFunds(p0, p1, p2, p3)\n}\n```","summary":"MarketReserveFunds reserves funds for a deal\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1100"}},{"name":"Filecoin.MarketWithdraw","description":"```go\nfunc (s *FullNodeStruct) MarketWithdraw(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt) (cid.Cid, error) {\n\treturn s.Internal.MarketWithdraw(p0, p1, p2, p3)\n}\n```","summary":"MarketWithdraw withdraws unlocked funds from the market actor\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1104"}},{"name":"Filecoin.MinerCreateBlock","description":"```go\nfunc (s *FullNodeStruct) MinerCreateBlock(p0 context.Context, p1 *api.BlockTemplate) (*types.BlockMsg, error) {\n\treturn s.Internal.MinerCreateBlock(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"*api.BlockTemplate","summary":"","schema":{"examples":[{"Miner":"f01234","Parents":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}],"Ticket":{"VRFProof":"Ynl0ZSBhcnJheQ=="},"Eproof":{"WinCount":9,"VRFProof":"Ynl0ZSBhcnJheQ=="},"BeaconValues":null,"Messages":null,"Epoch":10101,"Timestamp":42,"WinningPoStProof":null}],"additionalProperties":false,"properties":{"BeaconValues":{"items":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Round":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_2yUgzKFI"},"type":"array","title":"unorderedSetOf_objectOf_number_string_BA0rq1iJ_2yUgzKFIjem9Pecj"},"Epoch":{"title":"number","type":"number"},"Eproof":{"additionalProperties":false,"properties":{"VRFProof":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"WinCount":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_HzQhZnR6"},"Messages":{"items":{"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":"object","title":"objectOf_objectOf_number_string_BA0rq1iJ_DPaaQvVm_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_V8EVa7kT"},"type":"array","title":"unorderedSetOf_objectOf_objectOf_number_string_BA0rq1iJ_DPaaQvVm_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_V8EVa7kTIEA9kAXT"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Parents":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Ticket":{"additionalProperties":false,"properties":{"VRFProof":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_PNUmOxq4"},"Timestamp":{"title":"number","type":"number"},"WinningPoStProof":{"items":{"additionalProperties":false,"properties":{"PoStProof":{"title":"number","type":"number"},"ProofBytes":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_9EoEvOMy"},"type":"array","title":"unorderedSetOf_objectOf_string_BA0rq1iJ_number_9EoEvOMysZWX8aag"}},"type":["object"],"title":"object_5n2Fa124"},"required":true,"deprecated":false}],"result":{"name":"*types.BlockMsg","description":"*types.BlockMsg","summary":"","schema":{"examples":[{"Header":{"Miner":"f01234","Ticket":{"VRFProof":"Ynl0ZSBhcnJheQ=="},"ElectionProof":{"WinCount":9,"VRFProof":"Ynl0ZSBhcnJheQ=="},"BeaconEntries":null,"WinPoStProof":null,"Parents":null,"ParentWeight":"0","Height":10101,"ParentStateRoot":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"ParentMessageReceipts":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Messages":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"BLSAggregate":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"Timestamp":42,"BlockSig":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"ForkSignaling":42,"ParentBaseFee":"0"},"BlsMessages":null,"SecpkMessages":null}],"additionalProperties":false,"properties":{"BlsMessages":{"items":{"description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","title":"Content Identifier","type":"string"},"type":"array","title":"unorderedSetOf_Content IdentifierufUuJG8G"},"Header":{"additionalProperties":false,"properties":{"BLSAggregate":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"BeaconEntries":{"items":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Round":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_2yUgzKFI"},"type":"array","title":"unorderedSetOf_objectOf_number_string_BA0rq1iJ_2yUgzKFIjem9Pecj"},"BlockSig":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"ElectionProof":{"additionalProperties":false,"properties":{"VRFProof":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"WinCount":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_HzQhZnR6"},"ForkSignaling":{"title":"number","type":"number"},"Height":{"title":"number","type":"number"},"Messages":{"title":"Content Identifier","type":"string"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ParentBaseFee":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ParentMessageReceipts":{"title":"Content Identifier","type":"string"},"ParentStateRoot":{"title":"Content Identifier","type":"string"},"ParentWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Parents":{"items":{"description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","title":"Content Identifier","type":"string"},"type":"array","title":"unorderedSetOf_Content IdentifierufUuJG8G"},"Ticket":{"additionalProperties":false,"properties":{"VRFProof":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_PNUmOxq4"},"Timestamp":{"title":"number","type":"number"},"WinPoStProof":{"items":{"additionalProperties":false,"properties":{"PoStProof":{"title":"number","type":"number"},"ProofBytes":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_9EoEvOMy"},"type":"array","title":"unorderedSetOf_objectOf_string_BA0rq1iJ_number_9EoEvOMysZWX8aag"}},"type":"object","title":"objectOf_unorderedSetOf_objectOf_string_BA0rq1iJ_number_9EoEvOMysZWX8aag_number_objectOf_string_BA0rq1iJ_PNUmOxq4_unorderedSetOf_Content IdentifierufUuJG8G_object_m9mo69s8_Content Identifier_Content Identifier_object_m9mo69s8_object_m9mo69s8_Content Identifier_number_number_objectOf_number_string_BA0rq1iJ_HzQhZnR6_objectOf_number_string_BA0rq1iJ_DPaaQvVm_unorderedSetOf_objectOf_number_string_BA0rq1iJ_2yUgzKFIjem9Pecj_objectOf_number_string_BA0rq1iJ_DPaaQvVm_uzDnPsli"},"SecpkMessages":{"items":{"description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","title":"Content Identifier","type":"string"},"type":"array","title":"unorderedSetOf_Content IdentifierufUuJG8G"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1108"}},{"name":"Filecoin.MinerGetBaseInfo","description":"```go\nfunc (s *FullNodeStruct) MinerGetBaseInfo(p0 context.Context, p1 address.Address, p2 abi.ChainEpoch, p3 types.TipSetKey) (*api.MiningBaseInfo, error) {\n\treturn s.Internal.MinerGetBaseInfo(p0, p1, p2, p3)\n}\n```","summary":"There are not yet any comments for this method.","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*api.MiningBaseInfo","description":"*api.MiningBaseInfo","summary":"","schema":{"examples":[{"MinerPower":"0","NetworkPower":"0","Sectors":null,"WorkerKey":"f01234","SectorSize":34359738368,"PrevBeaconEntry":{"Round":42,"Data":"Ynl0ZSBhcnJheQ=="},"BeaconEntries":null,"EligibleForMining":true}],"additionalProperties":false,"properties":{"BeaconEntries":{"items":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Round":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_2yUgzKFI"},"type":"array","title":"unorderedSetOf_objectOf_number_string_BA0rq1iJ_2yUgzKFIjem9Pecj"},"EligibleForMining":{"type":"boolean","title":"boolean_vyG3AETh"},"MinerPower":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"NetworkPower":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"PrevBeaconEntry":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Round":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_2yUgzKFI"},"SectorSize":{"title":"number","type":"number"},"Sectors":{"items":{"additionalProperties":false,"properties":{"SealProof":{"title":"number","type":"number"},"SealedCID":{"title":"Content Identifier","type":"string"},"SectorNumber":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_Content Identifier_number_eck2o1Wo"},"type":"array","title":"unorderedSetOf_objectOf_number_Content Identifier_number_eck2o1WoWmUbwRF7"},"WorkerKey":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1112"}},{"name":"Filecoin.MpoolBatchPush","description":"```go\nfunc (s *FullNodeStruct) MpoolBatchPush(p0 context.Context, p1 []*types.SignedMessage) ([]cid.Cid, error) {\n\treturn s.Internal.MpoolBatchPush(p0, p1)\n}\n```","summary":"MpoolBatchPush batch pushes a signed message to mempool.\n","paramStructure":"by-position","params":[{"name":"p1","description":"[]*types.SignedMessage","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"],"title":"object_9VTWPx8K"}],"type":["array"],"title":"array_sCAMOVjc"},"required":true,"deprecated":false}],"result":{"name":"[]cid.Cid","description":"[]cid.Cid","summary":"","schema":{"examples":[null],"items":[{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","type":["string"]}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1116"}},{"name":"Filecoin.MpoolBatchPushMessage","description":"```go\nfunc (s *FullNodeStruct) MpoolBatchPushMessage(p0 context.Context, p1 []*types.Message, p2 *api.MessageSendSpec) ([]*types.SignedMessage, error) {\n\treturn s.Internal.MpoolBatchPushMessage(p0, p1, p2)\n}\n```","summary":"MpoolBatchPushMessage batch pushes a unsigned message to mempool.\n","paramStructure":"by-position","params":[{"name":"p1","description":"[]*types.Message","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"],"title":"object_NkhmKJFa"}],"type":["array"],"title":"array_tfS6CgDd"},"required":true,"deprecated":false},{"name":"p2","description":"*api.MessageSendSpec","summary":"","schema":{"examples":[{"MaxFee":"0"}],"additionalProperties":false,"properties":{"MaxFee":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_T55VMCEg"},"required":true,"deprecated":false}],"result":{"name":"[]*types.SignedMessage","description":"[]*types.SignedMessage","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"],"title":"object_9VTWPx8K"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1120"}},{"name":"Filecoin.MpoolBatchPushUntrusted","description":"```go\nfunc (s *FullNodeStruct) MpoolBatchPushUntrusted(p0 context.Context, p1 []*types.SignedMessage) ([]cid.Cid, error) {\n\treturn s.Internal.MpoolBatchPushUntrusted(p0, p1)\n}\n```","summary":"MpoolBatchPushUntrusted batch pushes a signed message to mempool from untrusted sources.\n","paramStructure":"by-position","params":[{"name":"p1","description":"[]*types.SignedMessage","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"],"title":"object_9VTWPx8K"}],"type":["array"],"title":"array_sCAMOVjc"},"required":true,"deprecated":false}],"result":{"name":"[]cid.Cid","description":"[]cid.Cid","summary":"","schema":{"examples":[null],"items":[{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","type":["string"]}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1124"}},{"name":"Filecoin.MpoolClear","description":"```go\nfunc (s *FullNodeStruct) MpoolClear(p0 context.Context, p1 bool) error {\n\treturn s.Internal.MpoolClear(p0, p1)\n}\n```","summary":"MpoolClear clears pending messages from the mpool\n","paramStructure":"by-position","params":[{"name":"p1","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"],"title":"boolean_iYY4Gv1x"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1128"}},{"name":"Filecoin.MpoolGetConfig","description":"```go\nfunc (s *FullNodeStruct) MpoolGetConfig(p0 context.Context) (*types.MpoolConfig, error) {\n\treturn s.Internal.MpoolGetConfig(p0)\n}\n```","summary":"MpoolGetConfig returns (a copy of) the current mpool config\n","paramStructure":"by-position","params":[],"result":{"name":"*types.MpoolConfig","description":"*types.MpoolConfig","summary":"","schema":{"examples":[{"PriorityAddrs":null,"SizeLimitHigh":123,"SizeLimitLow":123,"ReplaceByFeeRatio":12.3,"PruneCooldown":60000000000,"GasLimitOverestimation":12.3}],"additionalProperties":false,"properties":{"GasLimitOverestimation":{"type":"number","title":"number_Ho1clIqD"},"PriorityAddrs":{"items":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"type":"array","title":"unorderedSetOf_object_m9mo69s83X6ly3s9"},"PruneCooldown":{"title":"number","type":"number"},"ReplaceByFeeRatio":{"type":"number","title":"number_Ho1clIqD"},"SizeLimitHigh":{"title":"number","type":"number"},"SizeLimitLow":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1132"}},{"name":"Filecoin.MpoolGetNonce","description":"```go\nfunc (s *FullNodeStruct) MpoolGetNonce(p0 context.Context, p1 address.Address) (uint64, error) {\n\treturn s.Internal.MpoolGetNonce(p0, p1)\n}\n```","summary":"MpoolGetNonce gets next nonce for the specified sender.\nNote that this method may not be atomic. Use MpoolPushMessage instead.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"uint64","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1136"}},{"name":"Filecoin.MpoolPending","description":"```go\nfunc (s *FullNodeStruct) MpoolPending(p0 context.Context, p1 types.TipSetKey) ([]*types.SignedMessage, error) {\n\treturn s.Internal.MpoolPending(p0, p1)\n}\n```","summary":"MpoolPending returns pending mempool messages.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]*types.SignedMessage","description":"[]*types.SignedMessage","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"],"title":"object_9VTWPx8K"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1140"}},{"name":"Filecoin.MpoolPush","description":"```go\nfunc (s *FullNodeStruct) MpoolPush(p0 context.Context, p1 *types.SignedMessage) (cid.Cid, error) {\n\treturn s.Internal.MpoolPush(p0, p1)\n}\n```","summary":"MpoolPush pushes a signed message to mempool.\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.SignedMessage","summary":"","schema":{"examples":[{"Message":{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}},"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"],"title":"object_Nh6TrVDD"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1144"}},{"name":"Filecoin.MpoolPushMessage","description":"```go\nfunc (s *FullNodeStruct) MpoolPushMessage(p0 context.Context, p1 *types.Message, p2 *api.MessageSendSpec) (*types.SignedMessage, error) {\n\treturn s.Internal.MpoolPushMessage(p0, p1, p2)\n}\n```","summary":"MpoolPushMessage atomically assigns a nonce, signs, and pushes a message\nto mempool.\nmaxFee is only used when GasFeeCap/GasPremium fields aren't specified\n\nWhen maxFee is set to 0, MpoolPushMessage will guess appropriate fee\nbased on current chain conditions\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.Message","summary":"","schema":{"examples":[{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"],"title":"object_oOOg4jJn"},"required":true,"deprecated":false},{"name":"p2","description":"*api.MessageSendSpec","summary":"","schema":{"examples":[{"MaxFee":"0"}],"additionalProperties":false,"properties":{"MaxFee":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_T55VMCEg"},"required":true,"deprecated":false}],"result":{"name":"*types.SignedMessage","description":"*types.SignedMessage","summary":"","schema":{"examples":[{"Message":{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}},"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1148"}},{"name":"Filecoin.MpoolPushUntrusted","description":"```go\nfunc (s *FullNodeStruct) MpoolPushUntrusted(p0 context.Context, p1 *types.SignedMessage) (cid.Cid, error) {\n\treturn s.Internal.MpoolPushUntrusted(p0, p1)\n}\n```","summary":"MpoolPushUntrusted pushes a signed message to mempool from untrusted sources.\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.SignedMessage","summary":"","schema":{"examples":[{"Message":{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}},"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"],"title":"object_Nh6TrVDD"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1152"}},{"name":"Filecoin.MpoolSelect","description":"```go\nfunc (s *FullNodeStruct) MpoolSelect(p0 context.Context, p1 types.TipSetKey, p2 float64) ([]*types.SignedMessage, error) {\n\treturn s.Internal.MpoolSelect(p0, p1, p2)\n}\n```","summary":"MpoolSelect returns a list of pending messages for inclusion in the next block\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false},{"name":"p2","description":"float64","summary":"","schema":{"examples":[12.3],"type":["number"],"title":"number_hRow99pY"},"required":true,"deprecated":false}],"result":{"name":"[]*types.SignedMessage","description":"[]*types.SignedMessage","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"],"title":"object_9VTWPx8K"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1156"}},{"name":"Filecoin.MpoolSetConfig","description":"```go\nfunc (s *FullNodeStruct) MpoolSetConfig(p0 context.Context, p1 *types.MpoolConfig) error {\n\treturn s.Internal.MpoolSetConfig(p0, p1)\n}\n```","summary":"MpoolSetConfig sets the mpool config to (a copy of) the supplied config\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.MpoolConfig","summary":"","schema":{"examples":[{"PriorityAddrs":null,"SizeLimitHigh":123,"SizeLimitLow":123,"ReplaceByFeeRatio":12.3,"PruneCooldown":60000000000,"GasLimitOverestimation":12.3}],"additionalProperties":false,"properties":{"GasLimitOverestimation":{"type":"number","title":"number_Ho1clIqD"},"PriorityAddrs":{"items":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"type":"array","title":"unorderedSetOf_object_m9mo69s83X6ly3s9"},"PruneCooldown":{"title":"number","type":"number"},"ReplaceByFeeRatio":{"type":"number","title":"number_Ho1clIqD"},"SizeLimitHigh":{"title":"number","type":"number"},"SizeLimitLow":{"title":"number","type":"number"}},"type":["object"],"title":"object_VkNfDYAK"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1160"}},{"name":"Filecoin.MsigAddApprove","description":"```go\nfunc (s *FullNodeStruct) MsigAddApprove(p0 context.Context, p1 address.Address, p2 address.Address, p3 uint64, p4 address.Address, p5 address.Address, p6 bool) (cid.Cid, error) {\n\treturn s.Internal.MsigAddApprove(p0, p1, p2, p3, p4, p5, p6)\n}\n```","summary":"MsigAddApprove approves a previously proposed AddSigner message\nIt takes the following params: <multisig address>, <sender address of the approve msg>, <proposed message ID>,\n<proposer address>, <new signer>, <whether the number of required signers should be increased>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p4","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p5","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p6","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"],"title":"boolean_iYY4Gv1x"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1168"}},{"name":"Filecoin.MsigAddCancel","description":"```go\nfunc (s *FullNodeStruct) MsigAddCancel(p0 context.Context, p1 address.Address, p2 address.Address, p3 uint64, p4 address.Address, p5 bool) (cid.Cid, error) {\n\treturn s.Internal.MsigAddCancel(p0, p1, p2, p3, p4, p5)\n}\n```","summary":"MsigAddCancel cancels a previously proposed AddSigner message\nIt takes the following params: <multisig address>, <sender address of the cancel msg>, <proposed message ID>,\n<new signer>, <whether the number of required signers should be increased>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p4","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p5","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"],"title":"boolean_iYY4Gv1x"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1172"}},{"name":"Filecoin.MsigAddPropose","description":"```go\nfunc (s *FullNodeStruct) MsigAddPropose(p0 context.Context, p1 address.Address, p2 address.Address, p3 address.Address, p4 bool) (cid.Cid, error) {\n\treturn s.Internal.MsigAddPropose(p0, p1, p2, p3, p4)\n}\n```","summary":"MsigAddPropose proposes adding a signer in the multisig\nIt takes the following params: <multisig address>, <sender address of the propose msg>,\n<new signer>, <whether the number of required signers should be increased>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p4","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"],"title":"boolean_iYY4Gv1x"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1176"}},{"name":"Filecoin.MsigApprove","description":"```go\nfunc (s *FullNodeStruct) MsigApprove(p0 context.Context, p1 address.Address, p2 uint64, p3 address.Address) (cid.Cid, error) {\n\treturn s.Internal.MsigApprove(p0, p1, p2, p3)\n}\n```","summary":"MsigApprove approves a previously-proposed multisig message by transaction ID\nIt takes the following params: <multisig address>, <proposed transaction ID> <signer address>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1180"}},{"name":"Filecoin.MsigApproveTxnHash","description":"```go\nfunc (s *FullNodeStruct) MsigApproveTxnHash(p0 context.Context, p1 address.Address, p2 uint64, p3 address.Address, p4 address.Address, p5 types.BigInt, p6 address.Address, p7 uint64, p8 []byte) (cid.Cid, error) {\n\treturn s.Internal.MsigApproveTxnHash(p0, p1, p2, p3, p4, p5, p6, p7, p8)\n}\n```","summary":"MsigApproveTxnHash approves a previously-proposed multisig message, specified\nusing both transaction ID and a hash of the parameters used in the\nproposal. This method of approval can be used to ensure you only approve\nexactly the transaction you think you are.\nIt takes the following params: <multisig address>, <proposed message ID>, <proposer address>, <recipient address>, <value to transfer>,\n<sender address of the approve msg>, <method to call in the proposed message>, <params to include in the proposed message>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p4","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p5","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false},{"name":"p6","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p7","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p8","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1184"}},{"name":"Filecoin.MsigCancel","description":"```go\nfunc (s *FullNodeStruct) MsigCancel(p0 context.Context, p1 address.Address, p2 uint64, p3 address.Address, p4 types.BigInt, p5 address.Address, p6 uint64, p7 []byte) (cid.Cid, error) {\n\treturn s.Internal.MsigCancel(p0, p1, p2, p3, p4, p5, p6, p7)\n}\n```","summary":"MsigCancel cancels a previously-proposed multisig message\nIt takes the following params: <multisig address>, <proposed transaction ID>, <recipient address>, <value to transfer>,\n<sender address of the cancel msg>, <method to call in the proposed message>, <params to include in the proposed message>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p4","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false},{"name":"p5","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p6","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p7","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1188"}},{"name":"Filecoin.MsigCreate","description":"```go\nfunc (s *FullNodeStruct) MsigCreate(p0 context.Context, p1 uint64, p2 []address.Address, p3 abi.ChainEpoch, p4 types.BigInt, p5 address.Address, p6 types.BigInt) (cid.Cid, error) {\n\treturn s.Internal.MsigCreate(p0, p1, p2, p3, p4, p5, p6)\n}\n```","summary":"MsigCreate creates a multisig wallet\nIt takes the following params: <required number of senders>, <approving addresses>, <unlock duration>\n<initial balance>, <sender address of the create msg>, <gas price>\n","paramStructure":"by-position","params":[{"name":"p1","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"[]address.Address","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"type":["object"],"title":"object_88oBAfX3"}],"type":["array"],"title":"array_7Mu8impI"},"required":true,"deprecated":false},{"name":"p3","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false},{"name":"p4","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false},{"name":"p5","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p6","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1192"}},{"name":"Filecoin.MsigGetAvailableBalance","description":"```go\nfunc (s *FullNodeStruct) MsigGetAvailableBalance(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (types.BigInt, error) {\n\treturn s.Internal.MsigGetAvailableBalance(p0, p1, p2)\n}\n```","summary":"MsigGetAvailableBalance returns the portion of a multisig's balance that can be withdrawn or spent\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1196"}},{"name":"Filecoin.MsigGetPending","description":"```go\nfunc (s *FullNodeStruct) MsigGetPending(p0 context.Context, p1 address.Address, p2 types.TipSetKey) ([]*api.MsigTransaction, error) {\n\treturn s.Internal.MsigGetPending(p0, p1, p2)\n}\n```","summary":"MsigGetPending returns pending transactions for the given multisig\nwallet. Once pending transactions are fully approved, they will no longer\nappear here.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]*api.MsigTransaction","description":"[]*api.MsigTransaction","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Approved":{"items":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"type":"array","title":"unorderedSetOf_object_m9mo69s83X6ly3s9"},"ID":{"title":"number","type":"number"},"Method":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_nBnDGIKx"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1200"}},{"name":"Filecoin.MsigGetVested","description":"```go\nfunc (s *FullNodeStruct) MsigGetVested(p0 context.Context, p1 address.Address, p2 types.TipSetKey, p3 types.TipSetKey) (types.BigInt, error) {\n\treturn s.Internal.MsigGetVested(p0, p1, p2, p3)\n}\n```","summary":"MsigGetVested returns the amount of FIL that vested in a multisig in a certain period.\nIt takes the following params: <multisig address>, <start epoch>, <end epoch>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1204"}},{"name":"Filecoin.MsigGetVestingSchedule","description":"```go\nfunc (s *FullNodeStruct) MsigGetVestingSchedule(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (api.MsigVesting, error) {\n\treturn s.Internal.MsigGetVestingSchedule(p0, p1, p2)\n}\n```","summary":"MsigGetVestingSchedule returns the vesting details of a given multisig.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"api.MsigVesting","description":"api.MsigVesting","summary":"","schema":{"examples":[{"InitialBalance":"0","StartEpoch":10101,"UnlockDuration":10101}],"additionalProperties":false,"properties":{"InitialBalance":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"StartEpoch":{"title":"number","type":"number"},"UnlockDuration":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1208"}},{"name":"Filecoin.MsigPropose","description":"```go\nfunc (s *FullNodeStruct) MsigPropose(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt, p4 address.Address, p5 uint64, p6 []byte) (cid.Cid, error) {\n\treturn s.Internal.MsigPropose(p0, p1, p2, p3, p4, p5, p6)\n}\n```","summary":"MsigPropose proposes a multisig message\nIt takes the following params: <multisig address>, <recipient address>, <value to transfer>,\n<sender address of the propose msg>, <method to call in the proposed message>, <params to include in the proposed message>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false},{"name":"p4","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p5","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p6","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1212"}},{"name":"Filecoin.MsigRemoveSigner","description":"```go\nfunc (s *FullNodeStruct) MsigRemoveSigner(p0 context.Context, p1 address.Address, p2 address.Address, p3 address.Address, p4 bool) (cid.Cid, error) {\n\treturn s.Internal.MsigRemoveSigner(p0, p1, p2, p3, p4)\n}\n```","summary":"MsigRemoveSigner proposes the removal of a signer from the multisig.\nIt accepts the multisig to make the change on, the proposer address to\nsend the message from, the address to be removed, and a boolean\nindicating whether or not the signing threshold should be lowered by one\nalong with the address removal.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p4","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"],"title":"boolean_iYY4Gv1x"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1216"}},{"name":"Filecoin.MsigSwapApprove","description":"```go\nfunc (s *FullNodeStruct) MsigSwapApprove(p0 context.Context, p1 address.Address, p2 address.Address, p3 uint64, p4 address.Address, p5 address.Address, p6 address.Address) (cid.Cid, error) {\n\treturn s.Internal.MsigSwapApprove(p0, p1, p2, p3, p4, p5, p6)\n}\n```","summary":"MsigSwapApprove approves a previously proposed SwapSigner\nIt takes the following params: <multisig address>, <sender address of the approve msg>, <proposed message ID>,\n<proposer address>, <old signer>, <new signer>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p4","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p5","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p6","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1220"}},{"name":"Filecoin.MsigSwapCancel","description":"```go\nfunc (s *FullNodeStruct) MsigSwapCancel(p0 context.Context, p1 address.Address, p2 address.Address, p3 uint64, p4 address.Address, p5 address.Address) (cid.Cid, error) {\n\treturn s.Internal.MsigSwapCancel(p0, p1, p2, p3, p4, p5)\n}\n```","summary":"MsigSwapCancel cancels a previously proposed SwapSigner message\nIt takes the following params: <multisig address>, <sender address of the cancel msg>, <proposed message ID>,\n<old signer>, <new signer>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p4","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p5","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1224"}},{"name":"Filecoin.MsigSwapPropose","description":"```go\nfunc (s *FullNodeStruct) MsigSwapPropose(p0 context.Context, p1 address.Address, p2 address.Address, p3 address.Address, p4 address.Address) (cid.Cid, error) {\n\treturn s.Internal.MsigSwapPropose(p0, p1, p2, p3, p4)\n}\n```","summary":"MsigSwapPropose proposes swapping 2 signers in the multisig\nIt takes the following params: <multisig address>, <sender address of the propose msg>,\n<old signer>, <new signer>\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p4","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1228"}},{"name":"Filecoin.PaychAllocateLane","description":"```go\nfunc (s *FullNodeStruct) PaychAllocateLane(p0 context.Context, p1 address.Address) (uint64, error) {\n\treturn s.Internal.PaychAllocateLane(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"uint64","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1232"}},{"name":"Filecoin.PaychAvailableFunds","description":"```go\nfunc (s *FullNodeStruct) PaychAvailableFunds(p0 context.Context, p1 address.Address) (*api.ChannelAvailableFunds, error) {\n\treturn s.Internal.PaychAvailableFunds(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"*api.ChannelAvailableFunds","description":"*api.ChannelAvailableFunds","summary":"","schema":{"examples":[{"Channel":"<empty>","From":"f01234","To":"f01234","ConfirmedAmt":"0","PendingAmt":"0","PendingWaitSentinel":null,"QueuedAmt":"0","VoucherReedeemedAmt":"0"}],"additionalProperties":false,"properties":{"Channel":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ConfirmedAmt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"PendingAmt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"PendingWaitSentinel":{"title":"Content Identifier","type":"string"},"QueuedAmt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"VoucherReedeemedAmt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1236"}},{"name":"Filecoin.PaychAvailableFundsByFromTo","description":"```go\nfunc (s *FullNodeStruct) PaychAvailableFundsByFromTo(p0 context.Context, p1 address.Address, p2 address.Address) (*api.ChannelAvailableFunds, error) {\n\treturn s.Internal.PaychAvailableFundsByFromTo(p0, p1, p2)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"*api.ChannelAvailableFunds","description":"*api.ChannelAvailableFunds","summary":"","schema":{"examples":[{"Channel":"<empty>","From":"f01234","To":"f01234","ConfirmedAmt":"0","PendingAmt":"0","PendingWaitSentinel":null,"QueuedAmt":"0","VoucherReedeemedAmt":"0"}],"additionalProperties":false,"properties":{"Channel":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ConfirmedAmt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"PendingAmt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"PendingWaitSentinel":{"title":"Content Identifier","type":"string"},"QueuedAmt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"VoucherReedeemedAmt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1240"}},{"name":"Filecoin.PaychCollect","description":"```go\nfunc (s *FullNodeStruct) PaychCollect(p0 context.Context, p1 address.Address) (cid.Cid, error) {\n\treturn s.Internal.PaychCollect(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1244"}},{"name":"Filecoin.PaychGet","description":"```go\nfunc (s *FullNodeStruct) PaychGet(p0 context.Context, p1 address.Address, p2 address.Address, p3 types.BigInt) (*api.ChannelInfo, error) {\n\treturn s.Internal.PaychGet(p0, p1, p2, p3)\n}\n```","summary":"There are not yet any comments for this method.","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false}],"result":{"name":"*api.ChannelInfo","description":"*api.ChannelInfo","summary":"","schema":{"examples":[{"Channel":"f01234","WaitSentinel":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}}],"additionalProperties":false,"properties":{"Channel":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"WaitSentinel":{"title":"Content Identifier","type":"string"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1248"}},{"name":"Filecoin.PaychGetWaitReady","description":"```go\nfunc (s *FullNodeStruct) PaychGetWaitReady(p0 context.Context, p1 cid.Cid) (address.Address, error) {\n\treturn s.Internal.PaychGetWaitReady(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"address.Address","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1252"}},{"name":"Filecoin.PaychList","description":"```go\nfunc (s *FullNodeStruct) PaychList(p0 context.Context) ([]address.Address, error) {\n\treturn s.Internal.PaychList(p0)\n}\n```","summary":"","paramStructure":"by-position","params":[],"result":{"name":"[]address.Address","description":"[]address.Address","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"type":["object"],"title":"object_88oBAfX3"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1256"}},{"name":"Filecoin.PaychNewPayment","description":"```go\nfunc (s *FullNodeStruct) PaychNewPayment(p0 context.Context, p1 address.Address, p2 address.Address, p3 []api.VoucherSpec) (*api.PaymentInfo, error) {\n\treturn s.Internal.PaychNewPayment(p0, p1, p2, p3)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p3","description":"[]api.VoucherSpec","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Amount":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Extra":{"additionalProperties":false,"properties":{"Actor":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Method":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z"},"MinSettle":{"title":"number","type":"number"},"TimeLockMax":{"title":"number","type":"number"},"TimeLockMin":{"title":"number","type":"number"}},"type":["object"],"title":"object_9wb7yglw"}],"type":["array"],"title":"array_rKQ41new"},"required":true,"deprecated":false}],"result":{"name":"*api.PaymentInfo","description":"*api.PaymentInfo","summary":"","schema":{"examples":[{"Channel":"f01234","WaitSentinel":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Vouchers":null}],"additionalProperties":false,"properties":{"Channel":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Vouchers":{"items":{"additionalProperties":false,"properties":{"Amount":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ChannelAddr":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Extra":{"additionalProperties":false,"properties":{"Actor":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Method":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z"},"Lane":{"title":"number","type":"number"},"Merges":{"items":{"additionalProperties":false,"properties":{"Lane":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_GZGWzYla"},"type":"array","title":"unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji"},"MinSettleHeight":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"SecretPreimage":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"TimeLockMax":{"title":"number","type":"number"},"TimeLockMin":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_objectOf_number_string_BA0rq1iJ_DPaaQvVm_string_BA0rq1iJ_number_number_unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji_number_objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z_object_m9mo69s8_object_m9mo69s8_nJlpgLTo"},"type":"array","title":"unorderedSetOf_objectOf_number_number_objectOf_number_string_BA0rq1iJ_DPaaQvVm_string_BA0rq1iJ_number_number_unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji_number_objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z_object_m9mo69s8_object_m9mo69s8_nJlpgLToIzReHHXX"},"WaitSentinel":{"title":"Content Identifier","type":"string"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1260"}},{"name":"Filecoin.PaychSettle","description":"```go\nfunc (s *FullNodeStruct) PaychSettle(p0 context.Context, p1 address.Address) (cid.Cid, error) {\n\treturn s.Internal.PaychSettle(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1264"}},{"name":"Filecoin.PaychStatus","description":"```go\nfunc (s *FullNodeStruct) PaychStatus(p0 context.Context, p1 address.Address) (*api.PaychStatus, error) {\n\treturn s.Internal.PaychStatus(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"*api.PaychStatus","description":"*api.PaychStatus","summary":"","schema":{"examples":[{"ControlAddr":"f01234","Direction":1}],"additionalProperties":false,"properties":{"ControlAddr":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Direction":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1268"}},{"name":"Filecoin.PaychVoucherAdd","description":"```go\nfunc (s *FullNodeStruct) PaychVoucherAdd(p0 context.Context, p1 address.Address, p2 *paych.SignedVoucher, p3 []byte, p4 types.BigInt) (types.BigInt, error) {\n\treturn s.Internal.PaychVoucherAdd(p0, p1, p2, p3, p4)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"*paych.SignedVoucher","summary":"","schema":{"examples":[{"ChannelAddr":"f01234","TimeLockMin":10101,"TimeLockMax":10101,"SecretPreimage":"Ynl0ZSBhcnJheQ==","Extra":{"Actor":"f01234","Method":1,"Data":"Ynl0ZSBhcnJheQ=="},"Lane":42,"Nonce":42,"Amount":"0","MinSettleHeight":10101,"Merges":null,"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="}}],"additionalProperties":false,"properties":{"Amount":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ChannelAddr":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Extra":{"additionalProperties":false,"properties":{"Actor":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Method":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z"},"Lane":{"title":"number","type":"number"},"Merges":{"items":{"additionalProperties":false,"properties":{"Lane":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_GZGWzYla"},"type":"array","title":"unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji"},"MinSettleHeight":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"SecretPreimage":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"TimeLockMax":{"title":"number","type":"number"},"TimeLockMin":{"title":"number","type":"number"}},"type":["object"],"title":"object_RnBxderB"},"required":true,"deprecated":false},{"name":"p3","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false},{"name":"p4","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1272"}},{"name":"Filecoin.PaychVoucherCheckSpendable","description":"```go\nfunc (s *FullNodeStruct) PaychVoucherCheckSpendable(p0 context.Context, p1 address.Address, p2 *paych.SignedVoucher, p3 []byte, p4 []byte) (bool, error) {\n\treturn s.Internal.PaychVoucherCheckSpendable(p0, p1, p2, p3, p4)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"*paych.SignedVoucher","summary":"","schema":{"examples":[{"ChannelAddr":"f01234","TimeLockMin":10101,"TimeLockMax":10101,"SecretPreimage":"Ynl0ZSBhcnJheQ==","Extra":{"Actor":"f01234","Method":1,"Data":"Ynl0ZSBhcnJheQ=="},"Lane":42,"Nonce":42,"Amount":"0","MinSettleHeight":10101,"Merges":null,"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="}}],"additionalProperties":false,"properties":{"Amount":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ChannelAddr":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Extra":{"additionalProperties":false,"properties":{"Actor":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Method":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z"},"Lane":{"title":"number","type":"number"},"Merges":{"items":{"additionalProperties":false,"properties":{"Lane":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_GZGWzYla"},"type":"array","title":"unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji"},"MinSettleHeight":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"SecretPreimage":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"TimeLockMax":{"title":"number","type":"number"},"TimeLockMin":{"title":"number","type":"number"}},"type":["object"],"title":"object_RnBxderB"},"required":true,"deprecated":false},{"name":"p3","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false},{"name":"p4","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false}],"result":{"name":"bool","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1276"}},{"name":"Filecoin.PaychVoucherCheckValid","description":"```go\nfunc (s *FullNodeStruct) PaychVoucherCheckValid(p0 context.Context, p1 address.Address, p2 *paych.SignedVoucher) error {\n\treturn s.Internal.PaychVoucherCheckValid(p0, p1, p2)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"*paych.SignedVoucher","summary":"","schema":{"examples":[{"ChannelAddr":"f01234","TimeLockMin":10101,"TimeLockMax":10101,"SecretPreimage":"Ynl0ZSBhcnJheQ==","Extra":{"Actor":"f01234","Method":1,"Data":"Ynl0ZSBhcnJheQ=="},"Lane":42,"Nonce":42,"Amount":"0","MinSettleHeight":10101,"Merges":null,"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="}}],"additionalProperties":false,"properties":{"Amount":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ChannelAddr":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Extra":{"additionalProperties":false,"properties":{"Actor":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Method":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z"},"Lane":{"title":"number","type":"number"},"Merges":{"items":{"additionalProperties":false,"properties":{"Lane":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_GZGWzYla"},"type":"array","title":"unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji"},"MinSettleHeight":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"SecretPreimage":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"TimeLockMax":{"title":"number","type":"number"},"TimeLockMin":{"title":"number","type":"number"}},"type":["object"],"title":"object_RnBxderB"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1280"}},{"name":"Filecoin.PaychVoucherCreate","description":"```go\nfunc (s *FullNodeStruct) PaychVoucherCreate(p0 context.Context, p1 address.Address, p2 types.BigInt, p3 uint64) (*api.VoucherCreateResult, error) {\n\treturn s.Internal.PaychVoucherCreate(p0, p1, p2, p3)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"],"title":"object_TRro3fRk"},"required":true,"deprecated":false},{"name":"p3","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false}],"result":{"name":"*api.VoucherCreateResult","description":"*api.VoucherCreateResult","summary":"","schema":{"examples":[{"Voucher":{"ChannelAddr":"f01234","TimeLockMin":10101,"TimeLockMax":10101,"SecretPreimage":"Ynl0ZSBhcnJheQ==","Extra":{"Actor":"f01234","Method":1,"Data":"Ynl0ZSBhcnJheQ=="},"Lane":42,"Nonce":42,"Amount":"0","MinSettleHeight":10101,"Merges":null,"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="}},"Shortfall":"0"}],"additionalProperties":false,"properties":{"Shortfall":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Voucher":{"additionalProperties":false,"properties":{"Amount":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ChannelAddr":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Extra":{"additionalProperties":false,"properties":{"Actor":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Method":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z"},"Lane":{"title":"number","type":"number"},"Merges":{"items":{"additionalProperties":false,"properties":{"Lane":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_GZGWzYla"},"type":"array","title":"unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji"},"MinSettleHeight":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"SecretPreimage":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"TimeLockMax":{"title":"number","type":"number"},"TimeLockMin":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_objectOf_number_string_BA0rq1iJ_DPaaQvVm_string_BA0rq1iJ_number_number_unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji_number_objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z_object_m9mo69s8_object_m9mo69s8_nJlpgLTo"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1284"}},{"name":"Filecoin.PaychVoucherList","description":"```go\nfunc (s *FullNodeStruct) PaychVoucherList(p0 context.Context, p1 address.Address) ([]*paych.SignedVoucher, error) {\n\treturn s.Internal.PaychVoucherList(p0, p1)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"[]*paych.SignedVoucher","description":"[]*paych.SignedVoucher","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Amount":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ChannelAddr":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Extra":{"additionalProperties":false,"properties":{"Actor":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Method":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z"},"Lane":{"title":"number","type":"number"},"Merges":{"items":{"additionalProperties":false,"properties":{"Lane":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_GZGWzYla"},"type":"array","title":"unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji"},"MinSettleHeight":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"SecretPreimage":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"TimeLockMax":{"title":"number","type":"number"},"TimeLockMin":{"title":"number","type":"number"}},"type":["object"],"title":"object_NmYTC7Xj"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1288"}},{"name":"Filecoin.PaychVoucherSubmit","description":"```go\nfunc (s *FullNodeStruct) PaychVoucherSubmit(p0 context.Context, p1 address.Address, p2 *paych.SignedVoucher, p3 []byte, p4 []byte) (cid.Cid, error) {\n\treturn s.Internal.PaychVoucherSubmit(p0, p1, p2, p3, p4)\n}\n```","summary":"","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"*paych.SignedVoucher","summary":"","schema":{"examples":[{"ChannelAddr":"f01234","TimeLockMin":10101,"TimeLockMax":10101,"SecretPreimage":"Ynl0ZSBhcnJheQ==","Extra":{"Actor":"f01234","Method":1,"Data":"Ynl0ZSBhcnJheQ=="},"Lane":42,"Nonce":42,"Amount":"0","MinSettleHeight":10101,"Merges":null,"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="}}],"additionalProperties":false,"properties":{"Amount":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ChannelAddr":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Extra":{"additionalProperties":false,"properties":{"Actor":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Method":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_object_m9mo69s8_BRpRB44Z"},"Lane":{"title":"number","type":"number"},"Merges":{"items":{"additionalProperties":false,"properties":{"Lane":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_GZGWzYla"},"type":"array","title":"unorderedSetOf_objectOf_number_number_GZGWzYlaelp76mji"},"MinSettleHeight":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"SecretPreimage":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"TimeLockMax":{"title":"number","type":"number"},"TimeLockMin":{"title":"number","type":"number"}},"type":["object"],"title":"object_RnBxderB"},"required":true,"deprecated":false},{"name":"p3","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false},{"name":"p4","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false}],"result":{"name":"cid.Cid","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1292"}},{"name":"Filecoin.StateAccountKey","description":"```go\nfunc (s *FullNodeStruct) StateAccountKey(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (address.Address, error) {\n\treturn s.Internal.StateAccountKey(p0, p1, p2)\n}\n```","summary":"StateAccountKey returns the public key address of the given ID address\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"address.Address","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1296"}},{"name":"Filecoin.StateAllMinerFaults","description":"```go\nfunc (s *FullNodeStruct) StateAllMinerFaults(p0 context.Context, p1 abi.ChainEpoch, p2 types.TipSetKey) ([]*api.Fault, error) {\n\treturn s.Internal.StateAllMinerFaults(p0, p1, p2)\n}\n```","summary":"StateAllMinerFaults returns all non-expired Faults that occur within lookback epochs of the given tipset\n","paramStructure":"by-position","params":[{"name":"p1","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]*api.Fault","description":"[]*api.Fault","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Epoch":{"title":"number","type":"number"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_HPXMlBbl"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1300"}},{"name":"Filecoin.StateCall","description":"```go\nfunc (s *FullNodeStruct) StateCall(p0 context.Context, p1 *types.Message, p2 types.TipSetKey) (*api.InvocResult, error) {\n\treturn s.Internal.StateCall(p0, p1, p2)\n}\n```","summary":"StateCall runs the given message and returns its result without any persisted changes.\n\nStateCall applies the message to the tipset's parent state. The\nmessage is not applied on-top-of the messages in the passed-in\ntipset.\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.Message","summary":"","schema":{"examples":[{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"],"title":"object_oOOg4jJn"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*api.InvocResult","description":"*api.InvocResult","summary":"","schema":{"examples":[{"MsgCid":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Msg":{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}},"MsgRct":{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9},"GasCost":{"Message":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"GasUsed":"0","BaseFeeBurn":"0","OverEstimationBurn":"0","MinerPenalty":"0","MinerTip":"0","Refund":"0","TotalCost":"0"},"ExecutionTrace":{"Msg":{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}},"MsgRct":{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9},"Error":"string value","Duration":60000000000,"GasCharges":null,"Subcalls":null},"Error":"string value","Duration":60000000000}],"additionalProperties":false,"properties":{"Duration":{"title":"number","type":"number"},"Error":{"type":"string","title":"string_doaGddGA"},"ExecutionTrace":{"additionalProperties":false,"properties":{"Duration":{"title":"number","type":"number"},"Error":{"type":"string","title":"string_doaGddGA"},"GasCharges":{"items":{"additionalProperties":false,"properties":{"Name":{"type":"string","title":"string_doaGddGA"},"cg":{"title":"number","type":"number"},"ex":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"},"loc":{"items":{"additionalProperties":false,"properties":{"File":{"type":"string","title":"string_doaGddGA"},"Function":{"type":"string","title":"string_doaGddGA"},"Line":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYY"},"type":"array","title":"unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9"},"sg":{"title":"number","type":"number"},"tg":{"title":"number","type":"number"},"tt":{"title":"number","type":"number"},"vcg":{"title":"number","type":"number"},"vsg":{"title":"number","type":"number"},"vtg":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkk"},"type":"array","title":"unorderedSetOf_objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkkH47Zql3G"},"Msg":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"MsgRct":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"},"Subcalls":{"items":{"title":"any_l9Fw4VUO"},"type":"array","title":"unorderedSetOf_any_l9Fw4VUO55Bn0VNb"}},"type":"object","title":"objectOf_unorderedSetOf_any_l9Fw4VUO55Bn0VNb_objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_unorderedSetOf_objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkkH47Zql3G_string_doaGddGA_number_nFwSV5at"},"GasCost":{"additionalProperties":false,"properties":{"BaseFeeBurn":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasUsed":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Message":{"title":"Content Identifier","type":"string"},"MinerPenalty":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"MinerTip":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"OverEstimationBurn":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Refund":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"TotalCost":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":"object","title":"objectOf_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_Content Identifier_object_m9mo69s8_object_m9mo69s8_B7SzuI38"},"Msg":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"MsgCid":{"title":"Content Identifier","type":"string"},"MsgRct":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1304"}},{"name":"Filecoin.StateChangedActors","description":"```go\nfunc (s *FullNodeStruct) StateChangedActors(p0 context.Context, p1 cid.Cid, p2 cid.Cid) (map[string]types.Actor, error) {\n\treturn s.Internal.StateChangedActors(p0, p1, p2)\n}\n```","summary":"StateChangedActors returns all the actors whose states change between the two given state CIDs\nTODO: Should this take tipset keys instead?\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},{"name":"p2","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"map[string]types.Actor","description":"map[string]types.Actor","summary":"","schema":{"examples":[{"t01236":{"Code":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Head":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Nonce":42,"Balance":"0"}}],"patternProperties":{".*":{"additionalProperties":false,"properties":{"Balance":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Code":{"title":"Content Identifier","type":"string"},"Head":{"title":"Content Identifier","type":"string"},"Nonce":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_Content Identifier_Content Identifier_object_m9mo69s8_0Wr9txyt"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1308"}},{"name":"Filecoin.StateCirculatingSupply","description":"```go\nfunc (s *FullNodeStruct) StateCirculatingSupply(p0 context.Context, p1 types.TipSetKey) (abi.TokenAmount, error) {\n\treturn s.Internal.StateCirculatingSupply(p0, p1)\n}\n```","summary":"StateCirculatingSupply returns the exact circulating supply of Filecoin at the given tipset.\nThis is not used anywhere in the protocol itself, and is only for external consumption.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"abi.TokenAmount","description":"abi.TokenAmount","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1312"}},{"name":"Filecoin.StateCompute","description":"```go\nfunc (s *FullNodeStruct) StateCompute(p0 context.Context, p1 abi.ChainEpoch, p2 []*types.Message, p3 types.TipSetKey) (*api.ComputeStateOutput, error) {\n\treturn s.Internal.StateCompute(p0, p1, p2, p3)\n}\n```","summary":"StateCompute is a flexible command that applies the given messages on the given tipset.\nThe messages are run as though the VM were at the provided height.\n\nWhen called, StateCompute will:\n- Load the provided tipset, or use the current chain head if not provided\n- Compute the tipset state of the provided tipset on top of the parent state\n  - (note that this step runs before vmheight is applied to the execution)\n  - Execute state upgrade if any were scheduled at the epoch, or in null\n    blocks preceding the tipset\n  - Call the cron actor on null blocks preceding the tipset\n  - For each block in the tipset\n    - Apply messages in blocks in the specified\n    - Award block reward by calling the reward actor\n  - Call the cron actor for the current epoch\n- If the specified vmheight is higher than the current epoch, apply any\n  needed state upgrades to the state\n- Apply the specified messages to the state\n\nThe vmheight parameter sets VM execution epoch, and can be used to simulate\nmessage execution in different network versions. If the specified vmheight\nepoch is higher than the epoch of the specified tipset, any state upgrades\nuntil the vmheight will be executed on the state before applying messages\nspecified by the user.\n\nNote that the initial tipset state computation is not affected by the\nvmheight parameter - only the messages in the `apply` set are\n\nIf the caller wants to simply compute the state, vmheight should be set to\nthe epoch of the specified tipset.\n\nMessages in the `apply` parameter must have the correct nonces, and gas\nvalues set.\n","paramStructure":"by-position","params":[{"name":"p1","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"[]*types.Message","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"],"title":"object_NkhmKJFa"}],"type":["array"],"title":"array_tfS6CgDd"},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*api.ComputeStateOutput","description":"*api.ComputeStateOutput","summary":"","schema":{"examples":[{"Root":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Trace":null}],"additionalProperties":false,"properties":{"Root":{"title":"Content Identifier","type":"string"},"Trace":{"items":{"additionalProperties":false,"properties":{"Duration":{"title":"number","type":"number"},"Error":{"type":"string","title":"string_doaGddGA"},"ExecutionTrace":{"additionalProperties":false,"properties":{"Duration":{"title":"number","type":"number"},"Error":{"type":"string","title":"string_doaGddGA"},"GasCharges":{"items":{"additionalProperties":false,"properties":{"Name":{"type":"string","title":"string_doaGddGA"},"cg":{"title":"number","type":"number"},"ex":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"},"loc":{"items":{"additionalProperties":false,"properties":{"File":{"type":"string","title":"string_doaGddGA"},"Function":{"type":"string","title":"string_doaGddGA"},"Line":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYY"},"type":"array","title":"unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9"},"sg":{"title":"number","type":"number"},"tg":{"title":"number","type":"number"},"tt":{"title":"number","type":"number"},"vcg":{"title":"number","type":"number"},"vsg":{"title":"number","type":"number"},"vtg":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkk"},"type":"array","title":"unorderedSetOf_objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkkH47Zql3G"},"Msg":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"MsgRct":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"},"Subcalls":{"items":{"title":"any_l9Fw4VUO"},"type":"array","title":"unorderedSetOf_any_l9Fw4VUO55Bn0VNb"}},"type":"object","title":"objectOf_unorderedSetOf_any_l9Fw4VUO55Bn0VNb_objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_unorderedSetOf_objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkkH47Zql3G_string_doaGddGA_number_nFwSV5at"},"GasCost":{"additionalProperties":false,"properties":{"BaseFeeBurn":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasUsed":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Message":{"title":"Content Identifier","type":"string"},"MinerPenalty":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"MinerTip":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"OverEstimationBurn":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Refund":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"TotalCost":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":"object","title":"objectOf_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_Content Identifier_object_m9mo69s8_object_m9mo69s8_B7SzuI38"},"Msg":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"MsgCid":{"title":"Content Identifier","type":"string"},"MsgRct":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"}},"type":"object","title":"objectOf_objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS_Content Identifier_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_objectOf_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_Content Identifier_object_m9mo69s8_object_m9mo69s8_B7SzuI38_objectOf_unorderedSetOf_any_l9Fw4VUO55Bn0VNb_objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_unorderedSetOf_objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkkH47Zql3G_string_doaGddGA_number_nFwSV5at_string_doaGddGA_number_UsQtonjr"},"type":"array","title":"unorderedSetOf_objectOf_objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS_Content Identifier_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_objectOf_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_Content Identifier_object_m9mo69s8_object_m9mo69s8_B7SzuI38_objectOf_unorderedSetOf_any_l9Fw4VUO55Bn0VNb_objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_unorderedSetOf_objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkkH47Zql3G_string_doaGddGA_number_nFwSV5at_string_doaGddGA_number_UsQtonjrFSledrjG"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1316"}},{"name":"Filecoin.StateDealProviderCollateralBounds","description":"```go\nfunc (s *FullNodeStruct) StateDealProviderCollateralBounds(p0 context.Context, p1 abi.PaddedPieceSize, p2 bool, p3 types.TipSetKey) (api.DealCollateralBounds, error) {\n\treturn s.Internal.StateDealProviderCollateralBounds(p0, p1, p2, p3)\n}\n```","summary":"StateDealProviderCollateralBounds returns the min and max collateral a storage provider\ncan issue. It takes the deal size and verified status as parameters.\n","paramStructure":"by-position","params":[{"name":"p1","description":"abi.PaddedPieceSize","summary":"","schema":{"title":"number","description":"Number is a number","examples":[1032],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"],"title":"boolean_iYY4Gv1x"},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"api.DealCollateralBounds","description":"api.DealCollateralBounds","summary":"","schema":{"examples":[{"Min":"0","Max":"0"}],"additionalProperties":false,"properties":{"Max":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Min":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1320"}},{"name":"Filecoin.StateDecodeParams","description":"```go\nfunc (s *FullNodeStruct) StateDecodeParams(p0 context.Context, p1 address.Address, p2 abi.MethodNum, p3 []byte, p4 types.TipSetKey) (interface{}, error) {\n\treturn s.Internal.StateDecodeParams(p0, p1, p2, p3, p4)\n}\n```","summary":"StateDecodeParams attempts to decode the provided params, based on the recipient actor address and method number.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"abi.MethodNum","summary":"","schema":{"title":"number","description":"Number is a number","examples":[1],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false},{"name":"p4","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"interface{}","description":"interface{}","summary":"","schema":{"examples":[{}],"additionalProperties":true,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1324"}},{"name":"Filecoin.StateGetActor","description":"```go\nfunc (s *FullNodeStruct) StateGetActor(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*types.Actor, error) {\n\treturn s.Internal.StateGetActor(p0, p1, p2)\n}\n```","summary":"StateGetActor returns the indicated actor's nonce and balance.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*types.Actor","description":"*types.Actor","summary":"","schema":{"examples":[{"Code":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Head":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Nonce":42,"Balance":"0"}],"additionalProperties":false,"properties":{"Balance":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Code":{"title":"Content Identifier","type":"string"},"Head":{"title":"Content Identifier","type":"string"},"Nonce":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1328"}},{"name":"Filecoin.StateGetReceipt","description":"```go\nfunc (s *FullNodeStruct) StateGetReceipt(p0 context.Context, p1 cid.Cid, p2 types.TipSetKey) (*types.MessageReceipt, error) {\n\treturn s.Internal.StateGetReceipt(p0, p1, p2)\n}\n```","summary":"StateGetReceipt returns the message receipt for the given message or for a\nmatching gas-repriced replacing message\n\nNOTE: If the requested message was replaced, this method will return the receipt\nfor the replacing message - if the caller needs the receipt for exactly the\nrequested message, use StateSearchMsg().Receipt, and check that MsgLookup.Message\nis matching the requested CID\n\nDEPRECATED: Use StateSearchMsg, this method won't be supported in v1 API\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*types.MessageReceipt","description":"*types.MessageReceipt","summary":"","schema":{"examples":[{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9}],"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1332"}},{"name":"Filecoin.StateListActors","description":"```go\nfunc (s *FullNodeStruct) StateListActors(p0 context.Context, p1 types.TipSetKey) ([]address.Address, error) {\n\treturn s.Internal.StateListActors(p0, p1)\n}\n```","summary":"StateListActors returns the addresses of every actor in the state\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]address.Address","description":"[]address.Address","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"type":["object"],"title":"object_88oBAfX3"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1336"}},{"name":"Filecoin.StateListMessages","description":"```go\nfunc (s *FullNodeStruct) StateListMessages(p0 context.Context, p1 *api.MessageMatch, p2 types.TipSetKey, p3 abi.ChainEpoch) ([]cid.Cid, error) {\n\treturn s.Internal.StateListMessages(p0, p1, p2, p3)\n}\n```","summary":"StateListMessages looks back and returns all messages with a matching to or from address, stopping at the given height.\n","paramStructure":"by-position","params":[{"name":"p1","description":"*api.MessageMatch","summary":"","schema":{"examples":[{"To":"f01234","From":"f01234"}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_BCBCKXFA"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false},{"name":"p3","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false}],"result":{"name":"[]cid.Cid","description":"[]cid.Cid","summary":"","schema":{"examples":[null],"items":[{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","type":["string"]}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1340"}},{"name":"Filecoin.StateListMiners","description":"```go\nfunc (s *FullNodeStruct) StateListMiners(p0 context.Context, p1 types.TipSetKey) ([]address.Address, error) {\n\treturn s.Internal.StateListMiners(p0, p1)\n}\n```","summary":"StateListMiners returns the addresses of every miner that has claimed power in the Power Actor\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]address.Address","description":"[]address.Address","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"type":["object"],"title":"object_88oBAfX3"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1344"}},{"name":"Filecoin.StateLookupID","description":"```go\nfunc (s *FullNodeStruct) StateLookupID(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (address.Address, error) {\n\treturn s.Internal.StateLookupID(p0, p1, p2)\n}\n```","summary":"StateLookupID retrieves the ID address of the given address\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"address.Address","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1348"}},{"name":"Filecoin.StateMarketBalance","description":"```go\nfunc (s *FullNodeStruct) StateMarketBalance(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (api.MarketBalance, error) {\n\treturn s.Internal.StateMarketBalance(p0, p1, p2)\n}\n```","summary":"StateMarketBalance looks up the Escrow and Locked balances of the given address in the Storage Market\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"api.MarketBalance","description":"api.MarketBalance","summary":"","schema":{"examples":[{"Escrow":"0","Locked":"0"}],"additionalProperties":false,"properties":{"Escrow":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Locked":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1352"}},{"name":"Filecoin.StateMarketDeals","description":"```go\nfunc (s *FullNodeStruct) StateMarketDeals(p0 context.Context, p1 types.TipSetKey) (map[string]api.MarketDeal, error) {\n\treturn s.Internal.StateMarketDeals(p0, p1)\n}\n```","summary":"StateMarketDeals returns information about every deal in the Storage Market\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"map[string]api.MarketDeal","description":"map[string]api.MarketDeal","summary":"","schema":{"examples":[{"t026363":{"Proposal":{"PieceCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"PieceSize":1032,"VerifiedDeal":true,"Client":"f01234","Provider":"f01234","Label":"string value","StartEpoch":10101,"EndEpoch":10101,"StoragePricePerEpoch":"0","ProviderCollateral":"0","ClientCollateral":"0"},"State":{"SectorStartEpoch":10101,"LastUpdatedEpoch":10101,"SlashEpoch":10101}}}],"patternProperties":{".*":{"additionalProperties":false,"properties":{"Proposal":{"additionalProperties":false,"properties":{"Client":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ClientCollateral":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"EndEpoch":{"title":"number","type":"number"},"Label":{"type":"string","title":"string_doaGddGA"},"PieceCID":{"title":"Content Identifier","type":"string"},"PieceSize":{"title":"number","type":"number"},"Provider":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ProviderCollateral":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"StartEpoch":{"title":"number","type":"number"},"StoragePricePerEpoch":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"VerifiedDeal":{"type":"boolean","title":"boolean_vyG3AETh"}},"type":"object","title":"objectOf_boolean_vyG3AETh_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_number_Content Identifier_string_doaGddGA_number_object_m9mo69s8_object_m9mo69s8_3ScTZHlD"},"State":{"additionalProperties":false,"properties":{"LastUpdatedEpoch":{"title":"number","type":"number"},"SectorStartEpoch":{"title":"number","type":"number"},"SlashEpoch":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_number_l9i1xGuq"}},"type":"object","title":"objectOf_objectOf_number_number_number_l9i1xGuq_objectOf_boolean_vyG3AETh_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_number_Content Identifier_string_doaGddGA_number_object_m9mo69s8_object_m9mo69s8_3ScTZHlD_sZGuKBIl"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1356"}},{"name":"Filecoin.StateMarketParticipants","description":"```go\nfunc (s *FullNodeStruct) StateMarketParticipants(p0 context.Context, p1 types.TipSetKey) (map[string]api.MarketBalance, error) {\n\treturn s.Internal.StateMarketParticipants(p0, p1)\n}\n```","summary":"StateMarketParticipants returns the Escrow and Locked balances of every participant in the Storage Market\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"map[string]api.MarketBalance","description":"map[string]api.MarketBalance","summary":"","schema":{"examples":[{"t026363":{"Escrow":"0","Locked":"0"}}],"patternProperties":{".*":{"additionalProperties":false,"properties":{"Escrow":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Locked":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":"object","title":"objectOf_object_m9mo69s8_object_m9mo69s8_pdWZuKHB"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1360"}},{"name":"Filecoin.StateMarketStorageDeal","description":"```go\nfunc (s *FullNodeStruct) StateMarketStorageDeal(p0 context.Context, p1 abi.DealID, p2 types.TipSetKey) (*api.MarketDeal, error) {\n\treturn s.Internal.StateMarketStorageDeal(p0, p1, p2)\n}\n```","summary":"StateMarketStorageDeal returns information about the indicated deal\n","paramStructure":"by-position","params":[{"name":"p1","description":"abi.DealID","summary":"","schema":{"title":"number","description":"Number is a number","examples":[5432],"type":["number"]},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*api.MarketDeal","description":"*api.MarketDeal","summary":"","schema":{"examples":[{"Proposal":{"PieceCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"PieceSize":1032,"VerifiedDeal":true,"Client":"f01234","Provider":"f01234","Label":"string value","StartEpoch":10101,"EndEpoch":10101,"StoragePricePerEpoch":"0","ProviderCollateral":"0","ClientCollateral":"0"},"State":{"SectorStartEpoch":10101,"LastUpdatedEpoch":10101,"SlashEpoch":10101}}],"additionalProperties":false,"properties":{"Proposal":{"additionalProperties":false,"properties":{"Client":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ClientCollateral":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"EndEpoch":{"title":"number","type":"number"},"Label":{"type":"string","title":"string_doaGddGA"},"PieceCID":{"title":"Content Identifier","type":"string"},"PieceSize":{"title":"number","type":"number"},"Provider":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ProviderCollateral":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"StartEpoch":{"title":"number","type":"number"},"StoragePricePerEpoch":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"VerifiedDeal":{"type":"boolean","title":"boolean_vyG3AETh"}},"type":"object","title":"objectOf_boolean_vyG3AETh_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_number_Content Identifier_string_doaGddGA_number_object_m9mo69s8_object_m9mo69s8_3ScTZHlD"},"State":{"additionalProperties":false,"properties":{"LastUpdatedEpoch":{"title":"number","type":"number"},"SectorStartEpoch":{"title":"number","type":"number"},"SlashEpoch":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_number_l9i1xGuq"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1364"}},{"name":"Filecoin.StateMinerActiveSectors","description":"```go\nfunc (s *FullNodeStruct) StateMinerActiveSectors(p0 context.Context, p1 address.Address, p2 types.TipSetKey) ([]*miner.SectorOnChainInfo, error) {\n\treturn s.Internal.StateMinerActiveSectors(p0, p1, p2)\n}\n```","summary":"StateMinerActiveSectors returns info about sectors that a given miner is actively proving.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]*miner.SectorOnChainInfo","description":"[]*miner.SectorOnChainInfo","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Activation":{"title":"number","type":"number"},"DealIDs":{"items":{"description":"Number is a number","title":"number","type":"number"},"type":"array","title":"unorderedSetOf_numberfMzgzdno"},"DealWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ExpectedDayReward":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ExpectedStoragePledge":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Expiration":{"title":"number","type":"number"},"InitialPledge":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"SealProof":{"title":"number","type":"number"},"SealedCID":{"title":"Content Identifier","type":"string"},"SectorNumber":{"title":"number","type":"number"},"VerifiedDealWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_s6Y0wC8x"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1368"}},{"name":"Filecoin.StateMinerAvailableBalance","description":"```go\nfunc (s *FullNodeStruct) StateMinerAvailableBalance(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (types.BigInt, error) {\n\treturn s.Internal.StateMinerAvailableBalance(p0, p1, p2)\n}\n```","summary":"StateMinerAvailableBalance returns the portion of a miner's balance that can be withdrawn or spent\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1372"}},{"name":"Filecoin.StateMinerDeadlines","description":"```go\nfunc (s *FullNodeStruct) StateMinerDeadlines(p0 context.Context, p1 address.Address, p2 types.TipSetKey) ([]api.Deadline, error) {\n\treturn s.Internal.StateMinerDeadlines(p0, p1, p2)\n}\n```","summary":"StateMinerDeadlines returns all the proving deadlines for the given miner\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]api.Deadline","description":"[]api.Deadline","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"DisputableProofCount":{"title":"number","type":"number"},"PostSubmissions":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_joR9Sd52"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1376"}},{"name":"Filecoin.StateMinerFaults","description":"```go\nfunc (s *FullNodeStruct) StateMinerFaults(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (bitfield.BitField, error) {\n\treturn s.Internal.StateMinerFaults(p0, p1, p2)\n}\n```","summary":"StateMinerFaults returns a bitfield indicating the faulty sectors of the given miner\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"bitfield.BitField","description":"bitfield.BitField","summary":"","schema":{"examples":[[5,1]],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1380"}},{"name":"Filecoin.StateMinerInfo","description":"```go\nfunc (s *FullNodeStruct) StateMinerInfo(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (miner.MinerInfo, error) {\n\treturn s.Internal.StateMinerInfo(p0, p1, p2)\n}\n```","summary":"StateMinerInfo returns info about the indicated miner\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"miner.MinerInfo","description":"miner.MinerInfo","summary":"","schema":{"examples":[{"Owner":"f01234","Worker":"f01234","NewWorker":"f01234","ControlAddresses":null,"WorkerChangeEpoch":10101,"PeerId":"12D3KooWGzxzKZYveHXtpG6AsrUJBcWxHBFS2HsEoGTxrMLvKXtf","Multiaddrs":null,"WindowPoStProofType":8,"SectorSize":34359738368,"WindowPoStPartitionSectors":42,"ConsensusFaultElapsed":10101}],"additionalProperties":false,"properties":{"ConsensusFaultElapsed":{"title":"number","type":"number"},"ControlAddresses":{"items":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"type":"array","title":"unorderedSetOf_object_m9mo69s83X6ly3s9"},"Multiaddrs":{"items":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"type":"array","title":"unorderedSetOf_string_BA0rq1iJjh9Zs8EL"},"NewWorker":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Owner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"PeerId":{"type":"string","title":"string_doaGddGA"},"SectorSize":{"title":"number","type":"number"},"WindowPoStPartitionSectors":{"title":"number","type":"number"},"WindowPoStProofType":{"title":"number","type":"number"},"Worker":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"WorkerChangeEpoch":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1384"}},{"name":"Filecoin.StateMinerInitialPledgeCollateral","description":"```go\nfunc (s *FullNodeStruct) StateMinerInitialPledgeCollateral(p0 context.Context, p1 address.Address, p2 miner.SectorPreCommitInfo, p3 types.TipSetKey) (types.BigInt, error) {\n\treturn s.Internal.StateMinerInitialPledgeCollateral(p0, p1, p2, p3)\n}\n```","summary":"StateMinerInitialPledgeCollateral returns the initial pledge collateral for the specified miner's sector\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"miner.SectorPreCommitInfo","summary":"","schema":{"examples":[{"SealProof":8,"SectorNumber":9,"SealedCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"SealRandEpoch":10101,"DealIDs":null,"Expiration":10101,"ReplaceCapacity":true,"ReplaceSectorDeadline":42,"ReplaceSectorPartition":42,"ReplaceSectorNumber":9}],"additionalProperties":false,"properties":{"DealIDs":{"items":{"description":"Number is a number","title":"number","type":"number"},"type":"array","title":"unorderedSetOf_numberfMzgzdno"},"Expiration":{"title":"number","type":"number"},"ReplaceCapacity":{"type":"boolean","title":"boolean_vyG3AETh"},"ReplaceSectorDeadline":{"title":"number","type":"number"},"ReplaceSectorNumber":{"title":"number","type":"number"},"ReplaceSectorPartition":{"title":"number","type":"number"},"SealProof":{"title":"number","type":"number"},"SealRandEpoch":{"title":"number","type":"number"},"SealedCID":{"title":"Content Identifier","type":"string"},"SectorNumber":{"title":"number","type":"number"}},"type":["object"],"title":"object_w0P0ekaP"},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1388"}},{"name":"Filecoin.StateMinerPartitions","description":"```go\nfunc (s *FullNodeStruct) StateMinerPartitions(p0 context.Context, p1 address.Address, p2 uint64, p3 types.TipSetKey) ([]api.Partition, error) {\n\treturn s.Internal.StateMinerPartitions(p0, p1, p2, p3)\n}\n```","summary":"StateMinerPartitions returns all partitions in the specified deadline\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]api.Partition","description":"[]api.Partition","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"ActiveSectors":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"AllSectors":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"FaultySectors":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"LiveSectors":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"RecoveringSectors":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_4NkzLlnl"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1392"}},{"name":"Filecoin.StateMinerPower","description":"```go\nfunc (s *FullNodeStruct) StateMinerPower(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*api.MinerPower, error) {\n\treturn s.Internal.StateMinerPower(p0, p1, p2)\n}\n```","summary":"StateMinerPower returns the power of the indicated miner\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*api.MinerPower","description":"*api.MinerPower","summary":"","schema":{"examples":[{"MinerPower":{"RawBytePower":"0","QualityAdjPower":"0"},"TotalPower":{"RawBytePower":"0","QualityAdjPower":"0"},"HasMinPower":true}],"additionalProperties":false,"properties":{"HasMinPower":{"type":"boolean","title":"boolean_vyG3AETh"},"MinerPower":{"additionalProperties":false,"properties":{"QualityAdjPower":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"RawBytePower":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":"object","title":"objectOf_object_m9mo69s8_object_m9mo69s8_EtGflztD"},"TotalPower":{"additionalProperties":false,"properties":{"QualityAdjPower":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"RawBytePower":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":"object","title":"objectOf_object_m9mo69s8_object_m9mo69s8_EtGflztD"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1396"}},{"name":"Filecoin.StateMinerPreCommitDepositForPower","description":"```go\nfunc (s *FullNodeStruct) StateMinerPreCommitDepositForPower(p0 context.Context, p1 address.Address, p2 miner.SectorPreCommitInfo, p3 types.TipSetKey) (types.BigInt, error) {\n\treturn s.Internal.StateMinerPreCommitDepositForPower(p0, p1, p2, p3)\n}\n```","summary":"StateMinerInitialPledgeCollateral returns the precommit deposit for the specified miner's sector\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"miner.SectorPreCommitInfo","summary":"","schema":{"examples":[{"SealProof":8,"SectorNumber":9,"SealedCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"SealRandEpoch":10101,"DealIDs":null,"Expiration":10101,"ReplaceCapacity":true,"ReplaceSectorDeadline":42,"ReplaceSectorPartition":42,"ReplaceSectorNumber":9}],"additionalProperties":false,"properties":{"DealIDs":{"items":{"description":"Number is a number","title":"number","type":"number"},"type":"array","title":"unorderedSetOf_numberfMzgzdno"},"Expiration":{"title":"number","type":"number"},"ReplaceCapacity":{"type":"boolean","title":"boolean_vyG3AETh"},"ReplaceSectorDeadline":{"title":"number","type":"number"},"ReplaceSectorNumber":{"title":"number","type":"number"},"ReplaceSectorPartition":{"title":"number","type":"number"},"SealProof":{"title":"number","type":"number"},"SealRandEpoch":{"title":"number","type":"number"},"SealedCID":{"title":"Content Identifier","type":"string"},"SectorNumber":{"title":"number","type":"number"}},"type":["object"],"title":"object_w0P0ekaP"},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1400"}},{"name":"Filecoin.StateMinerProvingDeadline","description":"```go\nfunc (s *FullNodeStruct) StateMinerProvingDeadline(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*dline.Info, error) {\n\treturn s.Internal.StateMinerProvingDeadline(p0, p1, p2)\n}\n```","summary":"StateMinerProvingDeadline calculates the deadline at some epoch for a proving period\nand returns the deadline-related calculations.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*dline.Info","description":"*dline.Info","summary":"","schema":{"examples":[{"CurrentEpoch":10101,"PeriodStart":10101,"Index":42,"Open":10101,"Close":10101,"Challenge":10101,"FaultCutoff":10101,"WPoStPeriodDeadlines":42,"WPoStProvingPeriod":10101,"WPoStChallengeWindow":10101,"WPoStChallengeLookback":10101,"FaultDeclarationCutoff":10101}],"additionalProperties":false,"properties":{"Challenge":{"title":"number","type":"number"},"Close":{"title":"number","type":"number"},"CurrentEpoch":{"title":"number","type":"number"},"FaultCutoff":{"title":"number","type":"number"},"FaultDeclarationCutoff":{"title":"number","type":"number"},"Index":{"title":"number","type":"number"},"Open":{"title":"number","type":"number"},"PeriodStart":{"title":"number","type":"number"},"WPoStChallengeLookback":{"title":"number","type":"number"},"WPoStChallengeWindow":{"title":"number","type":"number"},"WPoStPeriodDeadlines":{"title":"number","type":"number"},"WPoStProvingPeriod":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1404"}},{"name":"Filecoin.StateMinerRecoveries","description":"```go\nfunc (s *FullNodeStruct) StateMinerRecoveries(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (bitfield.BitField, error) {\n\treturn s.Internal.StateMinerRecoveries(p0, p1, p2)\n}\n```","summary":"StateMinerRecoveries returns a bitfield indicating the recovering sectors of the given miner\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"bitfield.BitField","description":"bitfield.BitField","summary":"","schema":{"examples":[[5,1]],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1408"}},{"name":"Filecoin.StateMinerSectorAllocated","description":"```go\nfunc (s *FullNodeStruct) StateMinerSectorAllocated(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (bool, error) {\n\treturn s.Internal.StateMinerSectorAllocated(p0, p1, p2, p3)\n}\n```","summary":"StateMinerSectorAllocated checks if a sector is allocated\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"abi.SectorNumber","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"bool","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1412"}},{"name":"Filecoin.StateMinerSectorCount","description":"```go\nfunc (s *FullNodeStruct) StateMinerSectorCount(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (api.MinerSectors, error) {\n\treturn s.Internal.StateMinerSectorCount(p0, p1, p2)\n}\n```","summary":"StateMinerSectorCount returns the number of sectors in a miner's sector set and proving set\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"api.MinerSectors","description":"api.MinerSectors","summary":"","schema":{"examples":[{"Live":42,"Active":42,"Faulty":42}],"additionalProperties":false,"properties":{"Active":{"title":"number","type":"number"},"Faulty":{"title":"number","type":"number"},"Live":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1416"}},{"name":"Filecoin.StateMinerSectors","description":"```go\nfunc (s *FullNodeStruct) StateMinerSectors(p0 context.Context, p1 address.Address, p2 *bitfield.BitField, p3 types.TipSetKey) ([]*miner.SectorOnChainInfo, error) {\n\treturn s.Internal.StateMinerSectors(p0, p1, p2, p3)\n}\n```","summary":"StateMinerSectors returns info about the given miner's sectors. If the filter bitfield is nil, all sectors are included.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"*bitfield.BitField","summary":"","schema":{"examples":[[0]],"additionalProperties":false,"type":["object"],"title":"object_NwRVM0Vh"},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"[]*miner.SectorOnChainInfo","description":"[]*miner.SectorOnChainInfo","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"properties":{"Activation":{"title":"number","type":"number"},"DealIDs":{"items":{"description":"Number is a number","title":"number","type":"number"},"type":"array","title":"unorderedSetOf_numberfMzgzdno"},"DealWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ExpectedDayReward":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ExpectedStoragePledge":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Expiration":{"title":"number","type":"number"},"InitialPledge":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"SealProof":{"title":"number","type":"number"},"SealedCID":{"title":"Content Identifier","type":"string"},"SectorNumber":{"title":"number","type":"number"},"VerifiedDealWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"],"title":"object_s6Y0wC8x"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1420"}},{"name":"Filecoin.StateNetworkName","description":"```go\nfunc (s *FullNodeStruct) StateNetworkName(p0 context.Context) (dtypes.NetworkName, error) {\n\treturn s.Internal.StateNetworkName(p0)\n}\n```","summary":"StateNetworkName returns the name of the network the node is synced to\n","paramStructure":"by-position","params":[],"result":{"name":"dtypes.NetworkName","description":"dtypes.NetworkName","summary":"","schema":{"examples":["lotus"],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1424"}},{"name":"Filecoin.StateNetworkVersion","description":"```go\nfunc (s *FullNodeStruct) StateNetworkVersion(p0 context.Context, p1 types.TipSetKey) (apitypes.NetworkVersion, error) {\n\treturn s.Internal.StateNetworkVersion(p0, p1)\n}\n```","summary":"StateNetworkVersion returns the network version at the given tipset\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"apitypes.NetworkVersion","description":"apitypes.NetworkVersion","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1428"}},{"name":"Filecoin.StateReadState","description":"```go\nfunc (s *FullNodeStruct) StateReadState(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*api.ActorState, error) {\n\treturn s.Internal.StateReadState(p0, p1, p2)\n}\n```","summary":"StateReadState returns the indicated actor's state.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*api.ActorState","description":"*api.ActorState","summary":"","schema":{"examples":[{"Balance":"0","Code":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"State":{}}],"additionalProperties":false,"properties":{"Balance":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Code":{"title":"Content Identifier","type":"string"},"State":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1432"}},{"name":"Filecoin.StateReplay","description":"```go\nfunc (s *FullNodeStruct) StateReplay(p0 context.Context, p1 types.TipSetKey, p2 cid.Cid) (*api.InvocResult, error) {\n\treturn s.Internal.StateReplay(p0, p1, p2)\n}\n```","summary":"StateReplay replays a given message, assuming it was included in a block in the specified tipset.\n\nIf a tipset key is provided, and a replacing message is found on chain,\nthe method will return an error saying that the message wasn't found\n\nIf no tipset key is provided, the appropriate tipset is looked up, and if\nthe message was gas-repriced, the on-chain message will be replayed - in\nthat case the returned InvocResult.MsgCid will not match the Cid param\n\nIf the caller wants to ensure that exactly the requested message was executed,\nthey MUST check that InvocResult.MsgCid is equal to the provided Cid.\nWithout this check both the requested and original message may appear as\nsuccessfully executed on-chain, which may look like a double-spend.\n\nA replacing message is a message with a different CID, any of Gas values, and\ndifferent signature, but with all other parameters matching (source/destination,\nnonce, params, etc.)\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false},{"name":"p2","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"*api.InvocResult","description":"*api.InvocResult","summary":"","schema":{"examples":[{"MsgCid":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Msg":{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}},"MsgRct":{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9},"GasCost":{"Message":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"GasUsed":"0","BaseFeeBurn":"0","OverEstimationBurn":"0","MinerPenalty":"0","MinerTip":"0","Refund":"0","TotalCost":"0"},"ExecutionTrace":{"Msg":{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}},"MsgRct":{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9},"Error":"string value","Duration":60000000000,"GasCharges":null,"Subcalls":null},"Error":"string value","Duration":60000000000}],"additionalProperties":false,"properties":{"Duration":{"title":"number","type":"number"},"Error":{"type":"string","title":"string_doaGddGA"},"ExecutionTrace":{"additionalProperties":false,"properties":{"Duration":{"title":"number","type":"number"},"Error":{"type":"string","title":"string_doaGddGA"},"GasCharges":{"items":{"additionalProperties":false,"properties":{"Name":{"type":"string","title":"string_doaGddGA"},"cg":{"title":"number","type":"number"},"ex":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"},"loc":{"items":{"additionalProperties":false,"properties":{"File":{"type":"string","title":"string_doaGddGA"},"Function":{"type":"string","title":"string_doaGddGA"},"Line":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYY"},"type":"array","title":"unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9"},"sg":{"title":"number","type":"number"},"tg":{"title":"number","type":"number"},"tt":{"title":"number","type":"number"},"vcg":{"title":"number","type":"number"},"vsg":{"title":"number","type":"number"},"vtg":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkk"},"type":"array","title":"unorderedSetOf_objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkkH47Zql3G"},"Msg":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"MsgRct":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"},"Subcalls":{"items":{"title":"any_l9Fw4VUO"},"type":"array","title":"unorderedSetOf_any_l9Fw4VUO55Bn0VNb"}},"type":"object","title":"objectOf_unorderedSetOf_any_l9Fw4VUO55Bn0VNb_objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS_objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4_unorderedSetOf_objectOf_number_number_number_number_number_number_unorderedSetOf_objectOf_number_string_doaGddGA_string_doaGddGA_bBXq2tYYYpL72Ui9_object_iZgu6kjQ_number_string_doaGddGA_Y76CMnkkH47Zql3G_string_doaGddGA_number_nFwSV5at"},"GasCost":{"additionalProperties":false,"properties":{"BaseFeeBurn":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasUsed":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Message":{"title":"Content Identifier","type":"string"},"MinerPenalty":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"MinerTip":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"OverEstimationBurn":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Refund":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"TotalCost":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":"object","title":"objectOf_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_object_m9mo69s8_Content Identifier_object_m9mo69s8_object_m9mo69s8_B7SzuI38"},"Msg":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"MsgCid":{"title":"Content Identifier","type":"string"},"MsgRct":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1436"}},{"name":"Filecoin.StateSearchMsg","description":"```go\nfunc (s *FullNodeStruct) StateSearchMsg(p0 context.Context, p1 cid.Cid) (*api.MsgLookup, error) {\n\treturn s.Internal.StateSearchMsg(p0, p1)\n}\n```","summary":"StateSearchMsg searches for a message in the chain, and returns its receipt and the tipset where it was executed\n\nNOTE: If a replacing message is found on chain, this method will return\na MsgLookup for the replacing message - the MsgLookup.Message will be a different\nCID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the\nresult of the execution of the replacing message.\n\nIf the caller wants to ensure that exactly the requested message was executed,\nthey MUST check that MsgLookup.Message is equal to the provided 'cid'.\nWithout this check both the requested and original message may appear as\nsuccessfully executed on-chain, which may look like a double-spend.\n\nA replacing message is a message with a different CID, any of Gas values, and\ndifferent signature, but with all other parameters matching (source/destination,\nnonce, params, etc.)\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"*api.MsgLookup","description":"*api.MsgLookup","summary":"","schema":{"examples":[{"Message":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Receipt":{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9},"ReturnDec":{},"TipSet":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}],"Height":10101}],"additionalProperties":false,"properties":{"Height":{"title":"number","type":"number"},"Message":{"title":"Content Identifier","type":"string"},"Receipt":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"},"ReturnDec":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"},"TipSet":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1440"}},{"name":"Filecoin.StateSearchMsgLimited","description":"```go\nfunc (s *FullNodeStruct) StateSearchMsgLimited(p0 context.Context, p1 cid.Cid, p2 abi.ChainEpoch) (*api.MsgLookup, error) {\n\treturn s.Internal.StateSearchMsgLimited(p0, p1, p2)\n}\n```","summary":"StateSearchMsgLimited looks back up to limit epochs in the chain for a message, and returns its receipt and the tipset where it was executed\n\nNOTE: If a replacing message is found on chain, this method will return\na MsgLookup for the replacing message - the MsgLookup.Message will be a different\nCID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the\nresult of the execution of the replacing message.\n\nIf the caller wants to ensure that exactly the requested message was executed,\nthey MUST check that MsgLookup.Message is equal to the provided 'cid'.\nWithout this check both the requested and original message may appear as\nsuccessfully executed on-chain, which may look like a double-spend.\n\nA replacing message is a message with a different CID, any of Gas values, and\ndifferent signature, but with all other parameters matching (source/destination,\nnonce, params, etc.)\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},{"name":"p2","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false}],"result":{"name":"*api.MsgLookup","description":"*api.MsgLookup","summary":"","schema":{"examples":[{"Message":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Receipt":{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9},"ReturnDec":{},"TipSet":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}],"Height":10101}],"additionalProperties":false,"properties":{"Height":{"title":"number","type":"number"},"Message":{"title":"Content Identifier","type":"string"},"Receipt":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"},"ReturnDec":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"},"TipSet":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1444"}},{"name":"Filecoin.StateSectorExpiration","description":"```go\nfunc (s *FullNodeStruct) StateSectorExpiration(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (*miner.SectorExpiration, error) {\n\treturn s.Internal.StateSectorExpiration(p0, p1, p2, p3)\n}\n```","summary":"StateSectorExpiration returns epoch at which given sector will expire\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"abi.SectorNumber","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*miner.SectorExpiration","description":"*miner.SectorExpiration","summary":"","schema":{"examples":[{"OnTime":10101,"Early":10101}],"additionalProperties":false,"properties":{"Early":{"title":"number","type":"number"},"OnTime":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1448"}},{"name":"Filecoin.StateSectorGetInfo","description":"```go\nfunc (s *FullNodeStruct) StateSectorGetInfo(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (*miner.SectorOnChainInfo, error) {\n\treturn s.Internal.StateSectorGetInfo(p0, p1, p2, p3)\n}\n```","summary":"StateSectorGetInfo returns the on-chain info for the specified miner's sector. Returns null in case the sector info isn't found\nNOTE: returned info.Expiration may not be accurate in some cases, use StateSectorExpiration to get accurate\nexpiration epoch\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"abi.SectorNumber","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*miner.SectorOnChainInfo","description":"*miner.SectorOnChainInfo","summary":"","schema":{"examples":[{"SectorNumber":9,"SealProof":8,"SealedCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"DealIDs":null,"Activation":10101,"Expiration":10101,"DealWeight":"0","VerifiedDealWeight":"0","InitialPledge":"0","ExpectedDayReward":"0","ExpectedStoragePledge":"0"}],"additionalProperties":false,"properties":{"Activation":{"title":"number","type":"number"},"DealIDs":{"items":{"description":"Number is a number","title":"number","type":"number"},"type":"array","title":"unorderedSetOf_numberfMzgzdno"},"DealWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ExpectedDayReward":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ExpectedStoragePledge":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Expiration":{"title":"number","type":"number"},"InitialPledge":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"SealProof":{"title":"number","type":"number"},"SealedCID":{"title":"Content Identifier","type":"string"},"SectorNumber":{"title":"number","type":"number"},"VerifiedDealWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1452"}},{"name":"Filecoin.StateSectorPartition","description":"```go\nfunc (s *FullNodeStruct) StateSectorPartition(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (*miner.SectorLocation, error) {\n\treturn s.Internal.StateSectorPartition(p0, p1, p2, p3)\n}\n```","summary":"StateSectorPartition finds deadline/partition with the specified sector\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"abi.SectorNumber","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*miner.SectorLocation","description":"*miner.SectorLocation","summary":"","schema":{"examples":[{"Deadline":42,"Partition":42}],"additionalProperties":false,"properties":{"Deadline":{"title":"number","type":"number"},"Partition":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1456"}},{"name":"Filecoin.StateSectorPreCommitInfo","description":"```go\nfunc (s *FullNodeStruct) StateSectorPreCommitInfo(p0 context.Context, p1 address.Address, p2 abi.SectorNumber, p3 types.TipSetKey) (miner.SectorPreCommitOnChainInfo, error) {\n\treturn s.Internal.StateSectorPreCommitInfo(p0, p1, p2, p3)\n}\n```","summary":"StateSectorPreCommitInfo returns the PreCommit info for the specified miner's sector\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"abi.SectorNumber","summary":"","schema":{"title":"number","description":"Number is a number","examples":[9],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"miner.SectorPreCommitOnChainInfo","description":"miner.SectorPreCommitOnChainInfo","summary":"","schema":{"examples":[{"Info":{"SealProof":8,"SectorNumber":9,"SealedCID":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"SealRandEpoch":10101,"DealIDs":null,"Expiration":10101,"ReplaceCapacity":true,"ReplaceSectorDeadline":42,"ReplaceSectorPartition":42,"ReplaceSectorNumber":9},"PreCommitDeposit":"0","PreCommitEpoch":10101,"DealWeight":"0","VerifiedDealWeight":"0"}],"additionalProperties":false,"properties":{"DealWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Info":{"additionalProperties":false,"properties":{"DealIDs":{"items":{"description":"Number is a number","title":"number","type":"number"},"type":"array","title":"unorderedSetOf_numberfMzgzdno"},"Expiration":{"title":"number","type":"number"},"ReplaceCapacity":{"type":"boolean","title":"boolean_vyG3AETh"},"ReplaceSectorDeadline":{"title":"number","type":"number"},"ReplaceSectorNumber":{"title":"number","type":"number"},"ReplaceSectorPartition":{"title":"number","type":"number"},"SealProof":{"title":"number","type":"number"},"SealRandEpoch":{"title":"number","type":"number"},"SealedCID":{"title":"Content Identifier","type":"string"},"SectorNumber":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_Content Identifier_number_number_number_number_number_boolean_vyG3AETh_number_unorderedSetOf_numberfMzgzdno_Ttcu1gje"},"PreCommitDeposit":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"PreCommitEpoch":{"title":"number","type":"number"},"VerifiedDealWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1460"}},{"name":"Filecoin.StateVMCirculatingSupplyInternal","description":"```go\nfunc (s *FullNodeStruct) StateVMCirculatingSupplyInternal(p0 context.Context, p1 types.TipSetKey) (api.CirculatingSupply, error) {\n\treturn s.Internal.StateVMCirculatingSupplyInternal(p0, p1)\n}\n```","summary":"StateVMCirculatingSupplyInternal returns an approximation of the circulating supply of Filecoin at the given tipset.\nThis is the value reported by the runtime interface to actors code.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"api.CirculatingSupply","description":"api.CirculatingSupply","summary":"","schema":{"examples":[{"FilVested":"0","FilMined":"0","FilBurnt":"0","FilLocked":"0","FilCirculating":"0"}],"additionalProperties":false,"properties":{"FilBurnt":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"FilCirculating":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"FilLocked":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"FilMined":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"FilVested":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1464"}},{"name":"Filecoin.StateVerifiedClientStatus","description":"```go\nfunc (s *FullNodeStruct) StateVerifiedClientStatus(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*abi.StoragePower, error) {\n\treturn s.Internal.StateVerifiedClientStatus(p0, p1, p2)\n}\n```","summary":"StateVerifiedClientStatus returns the data cap for the given address.\nReturns nil if there is no entry in the data cap table for the\naddress.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*abi.StoragePower","description":"*abi.StoragePower","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1468"}},{"name":"Filecoin.StateVerifiedRegistryRootKey","description":"```go\nfunc (s *FullNodeStruct) StateVerifiedRegistryRootKey(p0 context.Context, p1 types.TipSetKey) (address.Address, error) {\n\treturn s.Internal.StateVerifiedRegistryRootKey(p0, p1)\n}\n```","summary":"StateVerifiedClientStatus returns the address of the Verified Registry's root key\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"address.Address","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1472"}},{"name":"Filecoin.StateVerifierStatus","description":"```go\nfunc (s *FullNodeStruct) StateVerifierStatus(p0 context.Context, p1 address.Address, p2 types.TipSetKey) (*abi.StoragePower, error) {\n\treturn s.Internal.StateVerifierStatus(p0, p1, p2)\n}\n```","summary":"StateVerifierStatus returns the data cap for the given address.\nReturns nil if there is no entry in the data cap table for the\naddress.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"*abi.StoragePower","description":"*abi.StoragePower","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1476"}},{"name":"Filecoin.StateWaitMsg","description":"```go\nfunc (s *FullNodeStruct) StateWaitMsg(p0 context.Context, p1 cid.Cid, p2 uint64) (*api.MsgLookup, error) {\n\treturn s.Internal.StateWaitMsg(p0, p1, p2)\n}\n```","summary":"StateWaitMsg looks back in the chain for a message. If not found, it blocks until the\nmessage arrives on chain, and gets to the indicated confidence depth.\n\nNOTE: If a replacing message is found on chain, this method will return\na MsgLookup for the replacing message - the MsgLookup.Message will be a different\nCID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the\nresult of the execution of the replacing message.\n\nIf the caller wants to ensure that exactly the requested message was executed,\nthey MUST check that MsgLookup.Message is equal to the provided 'cid'.\nWithout this check both the requested and original message may appear as\nsuccessfully executed on-chain, which may look like a double-spend.\n\nA replacing message is a message with a different CID, any of Gas values, and\ndifferent signature, but with all other parameters matching (source/destination,\nnonce, params, etc.)\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},{"name":"p2","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false}],"result":{"name":"*api.MsgLookup","description":"*api.MsgLookup","summary":"","schema":{"examples":[{"Message":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Receipt":{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9},"ReturnDec":{},"TipSet":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}],"Height":10101}],"additionalProperties":false,"properties":{"Height":{"title":"number","type":"number"},"Message":{"title":"Content Identifier","type":"string"},"Receipt":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"},"ReturnDec":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"},"TipSet":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1480"}},{"name":"Filecoin.StateWaitMsgLimited","description":"```go\nfunc (s *FullNodeStruct) StateWaitMsgLimited(p0 context.Context, p1 cid.Cid, p2 uint64, p3 abi.ChainEpoch) (*api.MsgLookup, error) {\n\treturn s.Internal.StateWaitMsgLimited(p0, p1, p2, p3)\n}\n```","summary":"StateWaitMsgLimited looks back up to limit epochs in the chain for a message.\nIf not found, it blocks until the message arrives on chain, and gets to the\nindicated confidence depth.\n\nNOTE: If a replacing message is found on chain, this method will return\na MsgLookup for the replacing message - the MsgLookup.Message will be a different\nCID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the\nresult of the execution of the replacing message.\n\nIf the caller wants to ensure that exactly the requested message was executed,\nthey MUST check that MsgLookup.Message is equal to the provided 'cid'.\nWithout this check both the requested and original message may appear as\nsuccessfully executed on-chain, which may look like a double-spend.\n\nA replacing message is a message with a different CID, any of Gas values, and\ndifferent signature, but with all other parameters matching (source/destination,\nnonce, params, etc.)\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false},{"name":"p2","description":"uint64","summary":"","schema":{"title":"number","description":"Number is a number","examples":[42],"type":["number"]},"required":true,"deprecated":false},{"name":"p3","description":"abi.ChainEpoch","summary":"","schema":{"title":"number","description":"Number is a number","examples":[10101],"type":["number"]},"required":true,"deprecated":false}],"result":{"name":"*api.MsgLookup","description":"*api.MsgLookup","summary":"","schema":{"examples":[{"Message":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Receipt":{"ExitCode":0,"Return":"Ynl0ZSBhcnJheQ==","GasUsed":9},"ReturnDec":{},"TipSet":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}],"Height":10101}],"additionalProperties":false,"properties":{"Height":{"title":"number","type":"number"},"Message":{"title":"Content Identifier","type":"string"},"Receipt":{"additionalProperties":false,"properties":{"ExitCode":{"title":"number","type":"number"},"GasUsed":{"title":"number","type":"number"},"Return":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_number_Ftcz8hhS"},"ReturnDec":{"additionalProperties":true,"type":"object","title":"object_iZgu6kjQ"},"TipSet":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1484"}},{"name":"Filecoin.SyncCheckBad","description":"```go\nfunc (s *FullNodeStruct) SyncCheckBad(p0 context.Context, p1 cid.Cid) (string, error) {\n\treturn s.Internal.SyncCheckBad(p0, p1)\n}\n```","summary":"SyncCheckBad checks if a block was marked as bad, and if it was, returns\nthe reason.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"string","description":"string","summary":"","schema":{"examples":["string value"],"type":["string"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1488"}},{"name":"Filecoin.SyncCheckpoint","description":"```go\nfunc (s *FullNodeStruct) SyncCheckpoint(p0 context.Context, p1 types.TipSetKey) error {\n\treturn s.Internal.SyncCheckpoint(p0, p1)\n}\n```","summary":"SyncCheckpoint marks a blocks as checkpointed, meaning that it won't ever fork away from it.\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1492"}},{"name":"Filecoin.SyncMarkBad","description":"```go\nfunc (s *FullNodeStruct) SyncMarkBad(p0 context.Context, p1 cid.Cid) error {\n\treturn s.Internal.SyncMarkBad(p0, p1)\n}\n```","summary":"SyncMarkBad marks a blocks as bad, meaning that it won't ever by synced.\nUse with extreme caution.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1500"}},{"name":"Filecoin.SyncState","description":"```go\nfunc (s *FullNodeStruct) SyncState(p0 context.Context) (*api.SyncState, error) {\n\treturn s.Internal.SyncState(p0)\n}\n```","summary":"SyncState returns the current status of the lotus sync system.\n","paramStructure":"by-position","params":[],"result":{"name":"*api.SyncState","description":"*api.SyncState","summary":"","schema":{"examples":[{"ActiveSyncs":null,"VMApplied":42}],"additionalProperties":false,"properties":{"ActiveSyncs":{"items":{"additionalProperties":false,"properties":{"Base":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"End":{"format":"date-time","type":"string","title":"string_V0uwQeVu"},"Height":{"title":"number","type":"number"},"Message":{"type":"string","title":"string_doaGddGA"},"Stage":{"title":"number","type":"number"},"Start":{"format":"date-time","type":"string","title":"string_V0uwQeVu"},"Target":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"WorkerID":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_string_V0uwQeVu_number_string_doaGddGA_number_string_V0uwQeVu_object_m9mo69s8_iaHLE3et"},"type":"array","title":"unorderedSetOf_objectOf_number_object_m9mo69s8_string_V0uwQeVu_number_string_doaGddGA_number_string_V0uwQeVu_object_m9mo69s8_iaHLE3ethuefQd39"},"VMApplied":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1504"}},{"name":"Filecoin.SyncSubmitBlock","description":"```go\nfunc (s *FullNodeStruct) SyncSubmitBlock(p0 context.Context, p1 *types.BlockMsg) error {\n\treturn s.Internal.SyncSubmitBlock(p0, p1)\n}\n```","summary":"SyncSubmitBlock can be used to submit a newly created block to the.\nnetwork through this node\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.BlockMsg","summary":"","schema":{"examples":[{"Header":{"Miner":"f01234","Ticket":{"VRFProof":"Ynl0ZSBhcnJheQ=="},"ElectionProof":{"WinCount":9,"VRFProof":"Ynl0ZSBhcnJheQ=="},"BeaconEntries":null,"WinPoStProof":null,"Parents":null,"ParentWeight":"0","Height":10101,"ParentStateRoot":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"ParentMessageReceipts":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"Messages":{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},"BLSAggregate":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"Timestamp":42,"BlockSig":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"ForkSignaling":42,"ParentBaseFee":"0"},"BlsMessages":null,"SecpkMessages":null}],"additionalProperties":false,"properties":{"BlsMessages":{"items":{"description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","title":"Content Identifier","type":"string"},"type":"array","title":"unorderedSetOf_Content IdentifierufUuJG8G"},"Header":{"additionalProperties":false,"properties":{"BLSAggregate":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"BeaconEntries":{"items":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Round":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_2yUgzKFI"},"type":"array","title":"unorderedSetOf_objectOf_number_string_BA0rq1iJ_2yUgzKFIjem9Pecj"},"BlockSig":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"},"ElectionProof":{"additionalProperties":false,"properties":{"VRFProof":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"WinCount":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_HzQhZnR6"},"ForkSignaling":{"title":"number","type":"number"},"Height":{"title":"number","type":"number"},"Messages":{"title":"Content Identifier","type":"string"},"Miner":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ParentBaseFee":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"ParentMessageReceipts":{"title":"Content Identifier","type":"string"},"ParentStateRoot":{"title":"Content Identifier","type":"string"},"ParentWeight":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Parents":{"items":{"description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","title":"Content Identifier","type":"string"},"type":"array","title":"unorderedSetOf_Content IdentifierufUuJG8G"},"Ticket":{"additionalProperties":false,"properties":{"VRFProof":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_PNUmOxq4"},"Timestamp":{"title":"number","type":"number"},"WinPoStProof":{"items":{"additionalProperties":false,"properties":{"PoStProof":{"title":"number","type":"number"},"ProofBytes":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"}},"type":"object","title":"objectOf_string_BA0rq1iJ_number_9EoEvOMy"},"type":"array","title":"unorderedSetOf_objectOf_string_BA0rq1iJ_number_9EoEvOMysZWX8aag"}},"type":"object","title":"objectOf_unorderedSetOf_objectOf_string_BA0rq1iJ_number_9EoEvOMysZWX8aag_number_objectOf_string_BA0rq1iJ_PNUmOxq4_unorderedSetOf_Content IdentifierufUuJG8G_object_m9mo69s8_Content Identifier_Content Identifier_object_m9mo69s8_object_m9mo69s8_Content Identifier_number_number_objectOf_number_string_BA0rq1iJ_HzQhZnR6_objectOf_number_string_BA0rq1iJ_DPaaQvVm_unorderedSetOf_objectOf_number_string_BA0rq1iJ_2yUgzKFIjem9Pecj_objectOf_number_string_BA0rq1iJ_DPaaQvVm_uzDnPsli"},"SecpkMessages":{"items":{"description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","title":"Content Identifier","type":"string"},"type":"array","title":"unorderedSetOf_Content IdentifierufUuJG8G"}},"type":["object"],"title":"object_Ghlx9mOy"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1508"}},{"name":"Filecoin.SyncUnmarkAllBad","description":"```go\nfunc (s *FullNodeStruct) SyncUnmarkAllBad(p0 context.Context) error {\n\treturn s.Internal.SyncUnmarkAllBad(p0)\n}\n```","summary":"SyncUnmarkAllBad purges bad block cache, making it possible to sync to chains previously marked as bad\n","paramStructure":"by-position","params":[],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1512"}},{"name":"Filecoin.SyncUnmarkBad","description":"```go\nfunc (s *FullNodeStruct) SyncUnmarkBad(p0 context.Context, p1 cid.Cid) error {\n\treturn s.Internal.SyncUnmarkBad(p0, p1)\n}\n```","summary":"SyncUnmarkBad unmarks a blocks as bad, making it possible to be validated and synced again.\n","paramStructure":"by-position","params":[{"name":"p1","description":"cid.Cid","summary":"","schema":{"title":"Content Identifier","description":"Cid represents a self-describing content addressed identifier. It is formed by a Version, a Codec (which indicates a multicodec-packed content type) and a Multihash.","examples":[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"}],"type":["string"]},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1516"}},{"name":"Filecoin.SyncValidateTipset","description":"```go\nfunc (s *FullNodeStruct) SyncValidateTipset(p0 context.Context, p1 types.TipSetKey) (bool, error) {\n\treturn s.Internal.SyncValidateTipset(p0, p1)\n}\n```","summary":"SyncValidateTipset indicates whether the provided tipset is valid or not\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.TipSetKey","summary":"","schema":{"examples":[[{"/":"bafy2bzacea3wsdh6y3a36tb3skempjoxqpuyompjbmfeyf34fi3uy6uue42v4"},{"/":"bafy2bzacebp3shtrn43k7g3unredz7fxn4gj533d3o43tqn2p2ipxxhrvchve"}]],"additionalProperties":false,"type":["object"],"title":"object_Mw6SutP8"},"required":true,"deprecated":false}],"result":{"name":"bool","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1520"}},{"name":"Filecoin.WalletBalance","description":"```go\nfunc (s *FullNodeStruct) WalletBalance(p0 context.Context, p1 address.Address) (types.BigInt, error) {\n\treturn s.Internal.WalletBalance(p0, p1)\n}\n```","summary":"WalletBalance returns the balance of the given address at the current head of the chain.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"types.BigInt","description":"types.BigInt","summary":"","schema":{"examples":["0"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1524"}},{"name":"Filecoin.WalletDefaultAddress","description":"```go\nfunc (s *FullNodeStruct) WalletDefaultAddress(p0 context.Context) (address.Address, error) {\n\treturn s.Internal.WalletDefaultAddress(p0)\n}\n```","summary":"WalletDefaultAddress returns the address marked as default in the wallet.\n","paramStructure":"by-position","params":[],"result":{"name":"address.Address","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1528"}},{"name":"Filecoin.WalletDelete","description":"```go\nfunc (s *FullNodeStruct) WalletDelete(p0 context.Context, p1 address.Address) error {\n\treturn s.Internal.WalletDelete(p0, p1)\n}\n```","summary":"WalletDelete deletes an address from the wallet.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1532"}},{"name":"Filecoin.WalletExport","description":"```go\nfunc (s *FullNodeStruct) WalletExport(p0 context.Context, p1 address.Address) (*types.KeyInfo, error) {\n\treturn s.Internal.WalletExport(p0, p1)\n}\n```","summary":"WalletExport returns the private key of an address in the wallet.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"*types.KeyInfo","description":"*types.KeyInfo","summary":"","schema":{"examples":[{"Type":"bls","PrivateKey":"Ynl0ZSBhcnJheQ=="}],"additionalProperties":false,"properties":{"PrivateKey":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"type":"string","title":"string_doaGddGA"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1536"}},{"name":"Filecoin.WalletHas","description":"```go\nfunc (s *FullNodeStruct) WalletHas(p0 context.Context, p1 address.Address) (bool, error) {\n\treturn s.Internal.WalletHas(p0, p1)\n}\n```","summary":"WalletHas indicates whether the given address is in the wallet.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"bool","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1540"}},{"name":"Filecoin.WalletImport","description":"```go\nfunc (s *FullNodeStruct) WalletImport(p0 context.Context, p1 *types.KeyInfo) (address.Address, error) {\n\treturn s.Internal.WalletImport(p0, p1)\n}\n```","summary":"WalletImport receives a KeyInfo, which includes a private key, and imports it into the wallet.\n","paramStructure":"by-position","params":[{"name":"p1","description":"*types.KeyInfo","summary":"","schema":{"examples":[{"Type":"bls","PrivateKey":"Ynl0ZSBhcnJheQ=="}],"additionalProperties":false,"properties":{"PrivateKey":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"type":"string","title":"string_doaGddGA"}},"type":["object"],"title":"object_gcAIGtwI"},"required":true,"deprecated":false}],"result":{"name":"address.Address","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1544"}},{"name":"Filecoin.WalletList","description":"```go\nfunc (s *FullNodeStruct) WalletList(p0 context.Context) ([]address.Address, error) {\n\treturn s.Internal.WalletList(p0)\n}\n```","summary":"WalletList lists all the addresses in the wallet.\n","paramStructure":"by-position","params":[],"result":{"name":"[]address.Address","description":"[]address.Address","summary":"","schema":{"examples":[null],"items":[{"additionalProperties":false,"type":["object"],"title":"object_88oBAfX3"}],"type":["array"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1548"}},{"name":"Filecoin.WalletNew","description":"```go\nfunc (s *FullNodeStruct) WalletNew(p0 context.Context, p1 types.KeyType) (address.Address, error) {\n\treturn s.Internal.WalletNew(p0, p1)\n}\n```","summary":"WalletNew creates a new address in the wallet with the given sigType.\nAvailable key types: bls, secp256k1, secp256k1-ledger\nSupport for numerical types: 1 - secp256k1, 2 - BLS is deprecated\n","paramStructure":"by-position","params":[{"name":"p1","description":"types.KeyType","summary":"","schema":{"examples":["bls"],"type":["string"],"title":"string_8cwHPQpT"},"required":true,"deprecated":false}],"result":{"name":"address.Address","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1552"}},{"name":"Filecoin.WalletSetDefault","description":"```go\nfunc (s *FullNodeStruct) WalletSetDefault(p0 context.Context, p1 address.Address) error {\n\treturn s.Internal.WalletSetDefault(p0, p1)\n}\n```","summary":"WalletSetDefault marks the given address as as the default one.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false}],"result":{"name":"Null","description":"Null","schema":{"type":["null"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1556"}},{"name":"Filecoin.WalletSign","description":"```go\nfunc (s *FullNodeStruct) WalletSign(p0 context.Context, p1 address.Address, p2 []byte) (*crypto.Signature, error) {\n\treturn s.Internal.WalletSign(p0, p1, p2)\n}\n```","summary":"WalletSign signs the given bytes using the given address.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false}],"result":{"name":"*crypto.Signature","description":"*crypto.Signature","summary":"","schema":{"examples":[{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="}],"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1560"}},{"name":"Filecoin.WalletSignMessage","description":"```go\nfunc (s *FullNodeStruct) WalletSignMessage(p0 context.Context, p1 address.Address, p2 *types.Message) (*types.SignedMessage, error) {\n\treturn s.Internal.WalletSignMessage(p0, p1, p2)\n}\n```","summary":"WalletSignMessage signs the given message using the given address.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"*types.Message","summary":"","schema":{"examples":[{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":["object"],"title":"object_oOOg4jJn"},"required":true,"deprecated":false}],"result":{"name":"*types.SignedMessage","description":"*types.SignedMessage","summary":"","schema":{"examples":[{"Message":{"Version":42,"To":"f01234","From":"f01234","Nonce":42,"Value":"0","GasLimit":9,"GasFeeCap":"0","GasPremium":"0","Method":1,"Params":"Ynl0ZSBhcnJheQ==","CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}},"Signature":{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="},"CID":{"/":"bafy2bzacebbpdegvr3i4cosewthysg5xkxpqfn2wfcz6mv2hmoktwbdxkax4s"}}],"additionalProperties":false,"properties":{"Message":{"additionalProperties":false,"properties":{"From":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasFeeCap":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"GasLimit":{"title":"number","type":"number"},"GasPremium":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Method":{"title":"number","type":"number"},"Nonce":{"title":"number","type":"number"},"Params":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"To":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Value":{"additionalProperties":false,"type":"object","title":"object_m9mo69s8"},"Version":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_object_m9mo69s8_object_m9mo69s8_string_BA0rq1iJ_number_number_object_m9mo69s8_number_object_m9mo69s8_object_m9mo69s8_zKEkBuF4"},"Signature":{"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":"object","title":"objectOf_number_string_BA0rq1iJ_DPaaQvVm"}},"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1564"}},{"name":"Filecoin.WalletValidateAddress","description":"```go\nfunc (s *FullNodeStruct) WalletValidateAddress(p0 context.Context, p1 string) (address.Address, error) {\n\treturn s.Internal.WalletValidateAddress(p0, p1)\n}\n```","summary":"WalletValidateAddress validates whether a given string can be decoded as a well-formed address\n","paramStructure":"by-position","params":[{"name":"p1","description":"string","summary":"","schema":{"examples":["string value"],"type":["string"],"title":"string_eprQ2tNC"},"required":true,"deprecated":false}],"result":{"name":"address.Address","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1568"}},{"name":"Filecoin.WalletVerify","description":"```go\nfunc (s *FullNodeStruct) WalletVerify(p0 context.Context, p1 address.Address, p2 []byte, p3 *crypto.Signature) (bool, error) {\n\treturn s.Internal.WalletVerify(p0, p1, p2, p3)\n}\n```","summary":"WalletVerify takes an address, a signature, and some bytes, and indicates whether the signature is valid.\nThe address does not have to be in the wallet.\n","paramStructure":"by-position","params":[{"name":"p1","description":"address.Address","summary":"","schema":{"examples":["f01234"],"additionalProperties":false,"type":["object"],"title":"object_WXh79Zia"},"required":true,"deprecated":false},{"name":"p2","description":"[]byte","summary":"","schema":{"examples":["Ynl0ZSBhcnJheQ=="],"type":["string"],"title":"string_2IbrpYpS"},"required":true,"deprecated":false},{"name":"p3","description":"*crypto.Signature","summary":"","schema":{"examples":[{"Type":2,"Data":"Ynl0ZSBhcnJheQ=="}],"additionalProperties":false,"properties":{"Data":{"media":{"binaryEncoding":"base64"},"type":"string","title":"string_BA0rq1iJ"},"Type":{"title":"number","type":"number"}},"type":["object"],"title":"object_QA1hvUjh"},"required":true,"deprecated":false}],"result":{"name":"bool","description":"bool","summary":"","schema":{"examples":[true],"type":["boolean"]},"required":true,"deprecated":false},"deprecated":false,"externalDocs":{"description":"Github remote link","url":"https://github.com/filecoin-project/lotus/blob/master/api/apistruct/struct.go#L1572"}}]} ;
  public transport: HTTPTransport | WebSocketTransport | PostMessageWindowTransport | PostMessageIframeTransport;
  private validator: MethodCallValidator;
  private timeout: number | undefined;

  constructor(options: Options) {

    if (options.transport === undefined || options.transport.type === undefined) {
      throw new Error("Invalid constructor params");
    }
    const {type, host, port, protocol} = options.transport;
    let path = options.transport.path || "";
    if(path && path[0] !== "/") {
        path = "/" + path;
    }
    switch (type) {
      case 'http':
      case 'https':
        this.transport = new HTTPTransport((protocol || type) + "://" + host + ":" + port + path);
        break;
      case 'websocket':
        this.transport = new WebSocketTransport((protocol || "ws://") + host + ":" + port + path);
        break;
      case 'postmessageiframe':
        this.transport = new PostMessageIframeTransport(protocol + "://" + host + ":" + port + path);
        break;
      case 'postmessagewindow':
        this.transport = new PostMessageWindowTransport(protocol + "://" + host + ":" + port + path);
        break;
      default:
        throw new Error("unsupported transport");
        break;
    }
    this.rpc = new Client(new RequestManager([this.transport]));
    this.validator = new MethodCallValidator(LotusRPCAPI.openrpcDocument);
  }
  /**
   * Adds a JSONRPC notification handler to handle receiving notifications.
   * @example
   * myClient.onNotification((data)=>console.log(data));
   */
  public onNotification(callback: (data: any) => void) {
    this.rpc.onNotification(callback);
  }

  /**
   * Adds an optional JSONRPCError handler to handle receiving errors that cannot be resolved to a specific request
   * @example
   * myClient.onError((err: JSONRPCError)=>console.log(err.message));
   */
  public onError(callback: (data: JSONRPCError) => void) {
     this.rpc.onError(callback);
  }

  /**
   * Sets a default timeout in ms for all requests excluding notifications.
   * @example
   * // 20s timeout
   * myClient.setDefaultTimeout(20000);
   * // Removes timeout from request
   * myClient.setDefaultTimeout(undefined);
   */
   public setDefaultTimeout(ms?: number) {
    this.timeout = ms;
  }

  /**
   * Initiates [[LotusRPCAPI.startBatch]] in order to build a batch call.
   *
   * Subsequent calls to [[LotusRPCAPI.request]] will be added to the batch.
   * Once [[LotusRPCAPI.stopBatch]] is called, the promises for the [[LotusRPCAPI.request]]
   * will then be resolved.  If there is already a batch in progress this method is a noop.
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public startBatch(): void {
    return this.rpc.startBatch();
  }

  /**
   * Initiates [[Client.stopBatch]] in order to finalize and send the batch to the underlying transport.
   *
   * stopBatch will send the [[LotusRPCAPI]] calls made since the last [[LotusRPCAPI.startBatch]] call. For
   * that reason, [[LotusRPCAPI.startBatch]] MUST be called before [[LotusRPCAPI.stopBatch]].
   *
   * @example
   * myClient.startBatch();
   * myClient.foo().then(() => console.log("foobar"))
   * myClient.bar().then(() => console.log("foobarbaz"))
   * myClient.stopBatch();
   */
  public stopBatch(): void {
    return this.rpc.stopBatch();
  }

  private request(methodName: string, params: any[]): Promise<any> {
    const methodObject = _.find(LotusRPCAPI.openrpcDocument.methods, ({name}) => name === methodName) as MethodObject;
    const notification = methodObject.result ? false : true;
    const openRpcMethodValidationErrors = this.validator.validate(methodName, params);
    if ( openRpcMethodValidationErrors instanceof MethodNotFoundError || openRpcMethodValidationErrors.length > 0) {
      return Promise.reject(openRpcMethodValidationErrors);
    }

    let rpcParams;
    if (methodObject.paramStructure && methodObject.paramStructure === "by-name") {
      rpcParams = _.zipObject(params, _.map(methodObject.params, "name"));
    } else {
      rpcParams = params;
    }
    if (notification) {
      return this.rpc.notify({method: methodName, params: rpcParams});
    }
    return this.rpc.request({method: methodName, params: rpcParams}, this.timeout);
  }

  
  /**
   * BeaconGetEntry returns the beacon entry for the given filecoin epoch. If
the entry has not yet been produced, the call will block until the entry
becomes available

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.BeaconGetEntry: FilecoinBeaconGetEntry = (...params) => {
    return this.request("Filecoin.BeaconGetEntry", params);
  }
  
  /**
   * ChainDeleteObj deletes node referenced by the given CID

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainDeleteObj: FilecoinChainDeleteObj = (...params) => {
    return this.request("Filecoin.ChainDeleteObj", params);
  }
  
  /**
   * ChainGetBlock returns the block specified by the given CID.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetBlock: FilecoinChainGetBlock = (...params) => {
    return this.request("Filecoin.ChainGetBlock", params);
  }
  
  /**
   * ChainGetBlockMessages returns messages stored in the specified block.

Note: If there are multiple blocks in a tipset, it's likely that some
messages will be duplicated. It's also possible for blocks in a tipset to have
different messages from the same sender at the same nonce. When that happens,
only the first message (in a block with lowest ticket) will be considered
for execution

NOTE: THIS METHOD SHOULD ONLY BE USED FOR GETTING MESSAGES IN A SPECIFIC BLOCK

DO NOT USE THIS METHOD TO GET MESSAGES INCLUDED IN A TIPSET
Use ChainGetParentMessages, which will perform correct message deduplication

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetBlockMessages: FilecoinChainGetBlockMessages = (...params) => {
    return this.request("Filecoin.ChainGetBlockMessages", params);
  }
  
  /**
   * ChainGetGenesis returns the genesis tipset.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetGenesis: FilecoinChainGetGenesis = (...params) => {
    return this.request("Filecoin.ChainGetGenesis", params);
  }
  
  /**
   * ChainGetMessage reads a message referenced by the specified CID from the
chain blockstore.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetMessage: FilecoinChainGetMessage = (...params) => {
    return this.request("Filecoin.ChainGetMessage", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetNode: FilecoinChainGetNode = (...params) => {
    return this.request("Filecoin.ChainGetNode", params);
  }
  
  /**
   * ChainGetParentMessages returns messages stored in parent tipset of the
specified block.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetParentMessages: FilecoinChainGetParentMessages = (...params) => {
    return this.request("Filecoin.ChainGetParentMessages", params);
  }
  
  /**
   * ChainGetParentReceipts returns receipts for messages in parent tipset of
the specified block. The receipts in the list returned is one-to-one with the
messages returned by a call to ChainGetParentMessages with the same blockCid.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetParentReceipts: FilecoinChainGetParentReceipts = (...params) => {
    return this.request("Filecoin.ChainGetParentReceipts", params);
  }
  
  /**
   * ChainGetPath returns a set of revert/apply operations needed to get from
one tipset to another, for example:
```
       to
        ^
from   tAA
  ^     ^
tBA    tAB
 ^---*--^
     ^
    tRR
```
Would return `[revert(tBA), apply(tAB), apply(tAA)]`

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetPath: FilecoinChainGetPath = (...params) => {
    return this.request("Filecoin.ChainGetPath", params);
  }
  
  /**
   * ChainGetRandomnessFromBeacon is used to sample the beacon for randomness.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetRandomnessFromBeacon: FilecoinChainGetRandomnessFromBeacon = (...params) => {
    return this.request("Filecoin.ChainGetRandomnessFromBeacon", params);
  }
  
  /**
   * ChainGetRandomnessFromTickets is used to sample the chain for randomness.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetRandomnessFromTickets: FilecoinChainGetRandomnessFromTickets = (...params) => {
    return this.request("Filecoin.ChainGetRandomnessFromTickets", params);
  }
  
  /**
   * ChainGetTipSet returns the tipset specified by the given TipSetKey.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetTipSet: FilecoinChainGetTipSet = (...params) => {
    return this.request("Filecoin.ChainGetTipSet", params);
  }
  
  /**
   * ChainGetTipSetByHeight looks back for a tipset at the specified epoch.
If there are no blocks at the specified epoch, a tipset at an earlier epoch
will be returned.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainGetTipSetByHeight: FilecoinChainGetTipSetByHeight = (...params) => {
    return this.request("Filecoin.ChainGetTipSetByHeight", params);
  }
  
  /**
   * ChainHasObj checks if a given CID exists in the chain blockstore.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainHasObj: FilecoinChainHasObj = (...params) => {
    return this.request("Filecoin.ChainHasObj", params);
  }
  
  /**
   * ChainHead returns the current head of the chain.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainHead: FilecoinChainHead = (...params) => {
    return this.request("Filecoin.ChainHead", params);
  }
  
  /**
   * ChainReadObj reads ipld nodes referenced by the specified CID from chain
blockstore and returns raw bytes.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainReadObj: FilecoinChainReadObj = (...params) => {
    return this.request("Filecoin.ChainReadObj", params);
  }
  
  /**
   * ChainSetHead forcefully sets current chain head. Use with caution.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainSetHead: FilecoinChainSetHead = (...params) => {
    return this.request("Filecoin.ChainSetHead", params);
  }
  
  /**
   * ChainStatObj returns statistics about the graph referenced by 'obj'.
If 'base' is also specified, then the returned stat will be a diff
between the two objects.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainStatObj: FilecoinChainStatObj = (...params) => {
    return this.request("Filecoin.ChainStatObj", params);
  }
  
  /**
   * ChainTipSetWeight computes weight for the specified tipset.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ChainTipSetWeight: FilecoinChainTipSetWeight = (...params) => {
    return this.request("Filecoin.ChainTipSetWeight", params);
  }
  
  /**
   * ClientCalcCommP calculates the CommP for a specified file

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientCalcCommP: FilecoinClientCalcCommP = (...params) => {
    return this.request("Filecoin.ClientCalcCommP", params);
  }
  
  /**
   * ClientCancelDataTransfer cancels a data transfer with the given transfer ID and other peer

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientCancelDataTransfer: FilecoinClientCancelDataTransfer = (...params) => {
    return this.request("Filecoin.ClientCancelDataTransfer", params);
  }
  
  /**
   * ClientCalcCommP calculates the CommP and data size of the specified CID

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientDealPieceCID: FilecoinClientDealPieceCID = (...params) => {
    return this.request("Filecoin.ClientDealPieceCID", params);
  }
  
  /**
   * ClientDealSize calculates real deal data size

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientDealSize: FilecoinClientDealSize = (...params) => {
    return this.request("Filecoin.ClientDealSize", params);
  }
  
  /**
   * ClientFindData identifies peers that have a certain file, and returns QueryOffers (one per peer).

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientFindData: FilecoinClientFindData = (...params) => {
    return this.request("Filecoin.ClientFindData", params);
  }
  
  /**
   * ClientGenCar generates a CAR file for the specified file.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientGenCar: FilecoinClientGenCar = (...params) => {
    return this.request("Filecoin.ClientGenCar", params);
  }
  
  /**
   * ClientGetDealInfo returns the latest information about a given deal.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientGetDealInfo: FilecoinClientGetDealInfo = (...params) => {
    return this.request("Filecoin.ClientGetDealInfo", params);
  }
  
  /**
   * ClientGetDealStatus returns status given a code

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientGetDealStatus: FilecoinClientGetDealStatus = (...params) => {
    return this.request("Filecoin.ClientGetDealStatus", params);
  }
  
  /**
   * ClientHasLocal indicates whether a certain CID is locally stored.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientHasLocal: FilecoinClientHasLocal = (...params) => {
    return this.request("Filecoin.ClientHasLocal", params);
  }
  
  /**
   * ClientImport imports file under the specified path into filestore.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientImport: FilecoinClientImport = (...params) => {
    return this.request("Filecoin.ClientImport", params);
  }
  
  /**
   * ClientListTransfers returns the status of all ongoing transfers of data

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientListDataTransfers: FilecoinClientListDataTransfers = (...params) => {
    return this.request("Filecoin.ClientListDataTransfers", params);
  }
  
  /**
   * ClientListDeals returns information about the deals made by the local client.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientListDeals: FilecoinClientListDeals = (...params) => {
    return this.request("Filecoin.ClientListDeals", params);
  }
  
  /**
   * ClientListImports lists imported files and their root CIDs

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientListImports: FilecoinClientListImports = (...params) => {
    return this.request("Filecoin.ClientListImports", params);
  }
  
  /**
   * ClientMinerQueryOffer returns a QueryOffer for the specific miner and file.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientMinerQueryOffer: FilecoinClientMinerQueryOffer = (...params) => {
    return this.request("Filecoin.ClientMinerQueryOffer", params);
  }
  
  /**
   * ClientQueryAsk returns a signed StorageAsk from the specified miner.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientQueryAsk: FilecoinClientQueryAsk = (...params) => {
    return this.request("Filecoin.ClientQueryAsk", params);
  }
  
  /**
   * ClientRemoveImport removes file import

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientRemoveImport: FilecoinClientRemoveImport = (...params) => {
    return this.request("Filecoin.ClientRemoveImport", params);
  }
  
  /**
   * ClientRestartDataTransfer attempts to restart a data transfer with the given transfer ID and other peer

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientRestartDataTransfer: FilecoinClientRestartDataTransfer = (...params) => {
    return this.request("Filecoin.ClientRestartDataTransfer", params);
  }
  
  /**
   * ClientRetrieve initiates the retrieval of a file, as specified in the order.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientRetrieve: FilecoinClientRetrieve = (...params) => {
    return this.request("Filecoin.ClientRetrieve", params);
  }
  
  /**
   * ClientRetrieveTryRestartInsufficientFunds attempts to restart stalled retrievals on a given payment channel
which are stuck due to insufficient funds

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientRetrieveTryRestartInsufficientFunds: FilecoinClientRetrieveTryRestartInsufficientFunds = (...params) => {
    return this.request("Filecoin.ClientRetrieveTryRestartInsufficientFunds", params);
  }
  
  /**
   * ClientStartDeal proposes a deal with a miner.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.ClientStartDeal: FilecoinClientStartDeal = (...params) => {
    return this.request("Filecoin.ClientStartDeal", params);
  }
  
  /**
   * CreateBackup creates node backup onder the specified file name. The
method requires that the lotus daemon is running with the
LOTUS_BACKUP_BASE_PATH environment variable set to some path, and that
the path specified when calling CreateBackup is within the base path

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.CreateBackup: FilecoinCreateBackup = (...params) => {
    return this.request("Filecoin.CreateBackup", params);
  }
  
  /**
   * GasEstimateFeeCap estimates gas fee cap

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.GasEstimateFeeCap: FilecoinGasEstimateFeeCap = (...params) => {
    return this.request("Filecoin.GasEstimateFeeCap", params);
  }
  
  /**
   * GasEstimateGasLimit estimates gas used by the message and returns it.
It fails if message fails to execute.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.GasEstimateGasLimit: FilecoinGasEstimateGasLimit = (...params) => {
    return this.request("Filecoin.GasEstimateGasLimit", params);
  }
  
  /**
   * GasEstimateGasPremium estimates what gas price should be used for a
message to have high likelihood of inclusion in `nblocksincl` epochs.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.GasEstimateGasPremium: FilecoinGasEstimateGasPremium = (...params) => {
    return this.request("Filecoin.GasEstimateGasPremium", params);
  }
  
  /**
   * GasEstimateMessageGas estimates gas values for unset message gas fields

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.GasEstimateMessageGas: FilecoinGasEstimateMessageGas = (...params) => {
    return this.request("Filecoin.GasEstimateMessageGas", params);
  }
  
  /**
   * MarketAddBalance adds funds to the market actor

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MarketAddBalance: FilecoinMarketAddBalance = (...params) => {
    return this.request("Filecoin.MarketAddBalance", params);
  }
  
  /**
   * MarketGetReserved gets the amount of funds that are currently reserved for the address

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MarketGetReserved: FilecoinMarketGetReserved = (...params) => {
    return this.request("Filecoin.MarketGetReserved", params);
  }
  
  /**
   * MarketReleaseFunds releases funds reserved by MarketReserveFunds

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MarketReleaseFunds: FilecoinMarketReleaseFunds = (...params) => {
    return this.request("Filecoin.MarketReleaseFunds", params);
  }
  
  /**
   * MarketReserveFunds reserves funds for a deal

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MarketReserveFunds: FilecoinMarketReserveFunds = (...params) => {
    return this.request("Filecoin.MarketReserveFunds", params);
  }
  
  /**
   * MarketWithdraw withdraws unlocked funds from the market actor

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MarketWithdraw: FilecoinMarketWithdraw = (...params) => {
    return this.request("Filecoin.MarketWithdraw", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MinerCreateBlock: FilecoinMinerCreateBlock = (...params) => {
    return this.request("Filecoin.MinerCreateBlock", params);
  }
  
  /**
   * There are not yet any comments for this method.
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MinerGetBaseInfo: FilecoinMinerGetBaseInfo = (...params) => {
    return this.request("Filecoin.MinerGetBaseInfo", params);
  }
  
  /**
   * MpoolBatchPush batch pushes a signed message to mempool.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolBatchPush: FilecoinMpoolBatchPush = (...params) => {
    return this.request("Filecoin.MpoolBatchPush", params);
  }
  
  /**
   * MpoolBatchPushMessage batch pushes a unsigned message to mempool.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolBatchPushMessage: FilecoinMpoolBatchPushMessage = (...params) => {
    return this.request("Filecoin.MpoolBatchPushMessage", params);
  }
  
  /**
   * MpoolBatchPushUntrusted batch pushes a signed message to mempool from untrusted sources.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolBatchPushUntrusted: FilecoinMpoolBatchPushUntrusted = (...params) => {
    return this.request("Filecoin.MpoolBatchPushUntrusted", params);
  }
  
  /**
   * MpoolClear clears pending messages from the mpool

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolClear: FilecoinMpoolClear = (...params) => {
    return this.request("Filecoin.MpoolClear", params);
  }
  
  /**
   * MpoolGetConfig returns (a copy of) the current mpool config

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolGetConfig: FilecoinMpoolGetConfig = (...params) => {
    return this.request("Filecoin.MpoolGetConfig", params);
  }
  
  /**
   * MpoolGetNonce gets next nonce for the specified sender.
Note that this method may not be atomic. Use MpoolPushMessage instead.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolGetNonce: FilecoinMpoolGetNonce = (...params) => {
    return this.request("Filecoin.MpoolGetNonce", params);
  }
  
  /**
   * MpoolPending returns pending mempool messages.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolPending: FilecoinMpoolPending = (...params) => {
    return this.request("Filecoin.MpoolPending", params);
  }
  
  /**
   * MpoolPush pushes a signed message to mempool.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolPush: FilecoinMpoolPush = (...params) => {
    return this.request("Filecoin.MpoolPush", params);
  }
  
  /**
   * MpoolPushMessage atomically assigns a nonce, signs, and pushes a message
to mempool.
maxFee is only used when GasFeeCap/GasPremium fields aren't specified

When maxFee is set to 0, MpoolPushMessage will guess appropriate fee
based on current chain conditions

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolPushMessage: FilecoinMpoolPushMessage = (...params) => {
    return this.request("Filecoin.MpoolPushMessage", params);
  }
  
  /**
   * MpoolPushUntrusted pushes a signed message to mempool from untrusted sources.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolPushUntrusted: FilecoinMpoolPushUntrusted = (...params) => {
    return this.request("Filecoin.MpoolPushUntrusted", params);
  }
  
  /**
   * MpoolSelect returns a list of pending messages for inclusion in the next block

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolSelect: FilecoinMpoolSelect = (...params) => {
    return this.request("Filecoin.MpoolSelect", params);
  }
  
  /**
   * MpoolSetConfig sets the mpool config to (a copy of) the supplied config

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MpoolSetConfig: FilecoinMpoolSetConfig = (...params) => {
    return this.request("Filecoin.MpoolSetConfig", params);
  }
  
  /**
   * MsigAddApprove approves a previously proposed AddSigner message
It takes the following params: <multisig address>, <sender address of the approve msg>, <proposed message ID>,
<proposer address>, <new signer>, <whether the number of required signers should be increased>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigAddApprove: FilecoinMsigAddApprove = (...params) => {
    return this.request("Filecoin.MsigAddApprove", params);
  }
  
  /**
   * MsigAddCancel cancels a previously proposed AddSigner message
It takes the following params: <multisig address>, <sender address of the cancel msg>, <proposed message ID>,
<new signer>, <whether the number of required signers should be increased>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigAddCancel: FilecoinMsigAddCancel = (...params) => {
    return this.request("Filecoin.MsigAddCancel", params);
  }
  
  /**
   * MsigAddPropose proposes adding a signer in the multisig
It takes the following params: <multisig address>, <sender address of the propose msg>,
<new signer>, <whether the number of required signers should be increased>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigAddPropose: FilecoinMsigAddPropose = (...params) => {
    return this.request("Filecoin.MsigAddPropose", params);
  }
  
  /**
   * MsigApprove approves a previously-proposed multisig message by transaction ID
It takes the following params: <multisig address>, <proposed transaction ID> <signer address>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigApprove: FilecoinMsigApprove = (...params) => {
    return this.request("Filecoin.MsigApprove", params);
  }
  
  /**
   * MsigApproveTxnHash approves a previously-proposed multisig message, specified
using both transaction ID and a hash of the parameters used in the
proposal. This method of approval can be used to ensure you only approve
exactly the transaction you think you are.
It takes the following params: <multisig address>, <proposed message ID>, <proposer address>, <recipient address>, <value to transfer>,
<sender address of the approve msg>, <method to call in the proposed message>, <params to include in the proposed message>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigApproveTxnHash: FilecoinMsigApproveTxnHash = (...params) => {
    return this.request("Filecoin.MsigApproveTxnHash", params);
  }
  
  /**
   * MsigCancel cancels a previously-proposed multisig message
It takes the following params: <multisig address>, <proposed transaction ID>, <recipient address>, <value to transfer>,
<sender address of the cancel msg>, <method to call in the proposed message>, <params to include in the proposed message>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigCancel: FilecoinMsigCancel = (...params) => {
    return this.request("Filecoin.MsigCancel", params);
  }
  
  /**
   * MsigCreate creates a multisig wallet
It takes the following params: <required number of senders>, <approving addresses>, <unlock duration>
<initial balance>, <sender address of the create msg>, <gas price>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigCreate: FilecoinMsigCreate = (...params) => {
    return this.request("Filecoin.MsigCreate", params);
  }
  
  /**
   * MsigGetAvailableBalance returns the portion of a multisig's balance that can be withdrawn or spent

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigGetAvailableBalance: FilecoinMsigGetAvailableBalance = (...params) => {
    return this.request("Filecoin.MsigGetAvailableBalance", params);
  }
  
  /**
   * MsigGetPending returns pending transactions for the given multisig
wallet. Once pending transactions are fully approved, they will no longer
appear here.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigGetPending: FilecoinMsigGetPending = (...params) => {
    return this.request("Filecoin.MsigGetPending", params);
  }
  
  /**
   * MsigGetVested returns the amount of FIL that vested in a multisig in a certain period.
It takes the following params: <multisig address>, <start epoch>, <end epoch>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigGetVested: FilecoinMsigGetVested = (...params) => {
    return this.request("Filecoin.MsigGetVested", params);
  }
  
  /**
   * MsigGetVestingSchedule returns the vesting details of a given multisig.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigGetVestingSchedule: FilecoinMsigGetVestingSchedule = (...params) => {
    return this.request("Filecoin.MsigGetVestingSchedule", params);
  }
  
  /**
   * MsigPropose proposes a multisig message
It takes the following params: <multisig address>, <recipient address>, <value to transfer>,
<sender address of the propose msg>, <method to call in the proposed message>, <params to include in the proposed message>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigPropose: FilecoinMsigPropose = (...params) => {
    return this.request("Filecoin.MsigPropose", params);
  }
  
  /**
   * MsigRemoveSigner proposes the removal of a signer from the multisig.
It accepts the multisig to make the change on, the proposer address to
send the message from, the address to be removed, and a boolean
indicating whether or not the signing threshold should be lowered by one
along with the address removal.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigRemoveSigner: FilecoinMsigRemoveSigner = (...params) => {
    return this.request("Filecoin.MsigRemoveSigner", params);
  }
  
  /**
   * MsigSwapApprove approves a previously proposed SwapSigner
It takes the following params: <multisig address>, <sender address of the approve msg>, <proposed message ID>,
<proposer address>, <old signer>, <new signer>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigSwapApprove: FilecoinMsigSwapApprove = (...params) => {
    return this.request("Filecoin.MsigSwapApprove", params);
  }
  
  /**
   * MsigSwapCancel cancels a previously proposed SwapSigner message
It takes the following params: <multisig address>, <sender address of the cancel msg>, <proposed message ID>,
<old signer>, <new signer>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigSwapCancel: FilecoinMsigSwapCancel = (...params) => {
    return this.request("Filecoin.MsigSwapCancel", params);
  }
  
  /**
   * MsigSwapPropose proposes swapping 2 signers in the multisig
It takes the following params: <multisig address>, <sender address of the propose msg>,
<old signer>, <new signer>

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.MsigSwapPropose: FilecoinMsigSwapPropose = (...params) => {
    return this.request("Filecoin.MsigSwapPropose", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychAllocateLane: FilecoinPaychAllocateLane = (...params) => {
    return this.request("Filecoin.PaychAllocateLane", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychAvailableFunds: FilecoinPaychAvailableFunds = (...params) => {
    return this.request("Filecoin.PaychAvailableFunds", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychAvailableFundsByFromTo: FilecoinPaychAvailableFundsByFromTo = (...params) => {
    return this.request("Filecoin.PaychAvailableFundsByFromTo", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychCollect: FilecoinPaychCollect = (...params) => {
    return this.request("Filecoin.PaychCollect", params);
  }
  
  /**
   * There are not yet any comments for this method.
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychGet: FilecoinPaychGet = (...params) => {
    return this.request("Filecoin.PaychGet", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychGetWaitReady: FilecoinPaychGetWaitReady = (...params) => {
    return this.request("Filecoin.PaychGetWaitReady", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychList: FilecoinPaychList = (...params) => {
    return this.request("Filecoin.PaychList", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychNewPayment: FilecoinPaychNewPayment = (...params) => {
    return this.request("Filecoin.PaychNewPayment", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychSettle: FilecoinPaychSettle = (...params) => {
    return this.request("Filecoin.PaychSettle", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychStatus: FilecoinPaychStatus = (...params) => {
    return this.request("Filecoin.PaychStatus", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychVoucherAdd: FilecoinPaychVoucherAdd = (...params) => {
    return this.request("Filecoin.PaychVoucherAdd", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychVoucherCheckSpendable: FilecoinPaychVoucherCheckSpendable = (...params) => {
    return this.request("Filecoin.PaychVoucherCheckSpendable", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychVoucherCheckValid: FilecoinPaychVoucherCheckValid = (...params) => {
    return this.request("Filecoin.PaychVoucherCheckValid", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychVoucherCreate: FilecoinPaychVoucherCreate = (...params) => {
    return this.request("Filecoin.PaychVoucherCreate", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychVoucherList: FilecoinPaychVoucherList = (...params) => {
    return this.request("Filecoin.PaychVoucherList", params);
  }
  
  /**
   * 
   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.PaychVoucherSubmit: FilecoinPaychVoucherSubmit = (...params) => {
    return this.request("Filecoin.PaychVoucherSubmit", params);
  }
  
  /**
   * StateAccountKey returns the public key address of the given ID address

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateAccountKey: FilecoinStateAccountKey = (...params) => {
    return this.request("Filecoin.StateAccountKey", params);
  }
  
  /**
   * StateAllMinerFaults returns all non-expired Faults that occur within lookback epochs of the given tipset

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateAllMinerFaults: FilecoinStateAllMinerFaults = (...params) => {
    return this.request("Filecoin.StateAllMinerFaults", params);
  }
  
  /**
   * StateCall runs the given message and returns its result without any persisted changes.

StateCall applies the message to the tipset's parent state. The
message is not applied on-top-of the messages in the passed-in
tipset.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateCall: FilecoinStateCall = (...params) => {
    return this.request("Filecoin.StateCall", params);
  }
  
  /**
   * StateChangedActors returns all the actors whose states change between the two given state CIDs
TODO: Should this take tipset keys instead?

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateChangedActors: FilecoinStateChangedActors = (...params) => {
    return this.request("Filecoin.StateChangedActors", params);
  }
  
  /**
   * StateCirculatingSupply returns the exact circulating supply of Filecoin at the given tipset.
This is not used anywhere in the protocol itself, and is only for external consumption.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateCirculatingSupply: FilecoinStateCirculatingSupply = (...params) => {
    return this.request("Filecoin.StateCirculatingSupply", params);
  }
  
  /**
   * StateCompute is a flexible command that applies the given messages on the given tipset.
The messages are run as though the VM were at the provided height.

When called, StateCompute will:
- Load the provided tipset, or use the current chain head if not provided
- Compute the tipset state of the provided tipset on top of the parent state
  - (note that this step runs before vmheight is applied to the execution)
  - Execute state upgrade if any were scheduled at the epoch, or in null
    blocks preceding the tipset
  - Call the cron actor on null blocks preceding the tipset
  - For each block in the tipset
    - Apply messages in blocks in the specified
    - Award block reward by calling the reward actor
  - Call the cron actor for the current epoch
- If the specified vmheight is higher than the current epoch, apply any
  needed state upgrades to the state
- Apply the specified messages to the state

The vmheight parameter sets VM execution epoch, and can be used to simulate
message execution in different network versions. If the specified vmheight
epoch is higher than the epoch of the specified tipset, any state upgrades
until the vmheight will be executed on the state before applying messages
specified by the user.

Note that the initial tipset state computation is not affected by the
vmheight parameter - only the messages in the `apply` set are

If the caller wants to simply compute the state, vmheight should be set to
the epoch of the specified tipset.

Messages in the `apply` parameter must have the correct nonces, and gas
values set.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateCompute: FilecoinStateCompute = (...params) => {
    return this.request("Filecoin.StateCompute", params);
  }
  
  /**
   * StateDealProviderCollateralBounds returns the min and max collateral a storage provider
can issue. It takes the deal size and verified status as parameters.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateDealProviderCollateralBounds: FilecoinStateDealProviderCollateralBounds = (...params) => {
    return this.request("Filecoin.StateDealProviderCollateralBounds", params);
  }
  
  /**
   * StateDecodeParams attempts to decode the provided params, based on the recipient actor address and method number.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateDecodeParams: FilecoinStateDecodeParams = (...params) => {
    return this.request("Filecoin.StateDecodeParams", params);
  }
  
  /**
   * StateGetActor returns the indicated actor's nonce and balance.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateGetActor: FilecoinStateGetActor = (...params) => {
    return this.request("Filecoin.StateGetActor", params);
  }
  
  /**
   * StateGetReceipt returns the message receipt for the given message or for a
matching gas-repriced replacing message

NOTE: If the requested message was replaced, this method will return the receipt
for the replacing message - if the caller needs the receipt for exactly the
requested message, use StateSearchMsg().Receipt, and check that MsgLookup.Message
is matching the requested CID

DEPRECATED: Use StateSearchMsg, this method won't be supported in v1 API

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateGetReceipt: FilecoinStateGetReceipt = (...params) => {
    return this.request("Filecoin.StateGetReceipt", params);
  }
  
  /**
   * StateListActors returns the addresses of every actor in the state

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateListActors: FilecoinStateListActors = (...params) => {
    return this.request("Filecoin.StateListActors", params);
  }
  
  /**
   * StateListMessages looks back and returns all messages with a matching to or from address, stopping at the given height.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateListMessages: FilecoinStateListMessages = (...params) => {
    return this.request("Filecoin.StateListMessages", params);
  }
  
  /**
   * StateListMiners returns the addresses of every miner that has claimed power in the Power Actor

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateListMiners: FilecoinStateListMiners = (...params) => {
    return this.request("Filecoin.StateListMiners", params);
  }
  
  /**
   * StateLookupID retrieves the ID address of the given address

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateLookupID: FilecoinStateLookupID = (...params) => {
    return this.request("Filecoin.StateLookupID", params);
  }
  
  /**
   * StateMarketBalance looks up the Escrow and Locked balances of the given address in the Storage Market

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMarketBalance: FilecoinStateMarketBalance = (...params) => {
    return this.request("Filecoin.StateMarketBalance", params);
  }
  
  /**
   * StateMarketDeals returns information about every deal in the Storage Market

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMarketDeals: FilecoinStateMarketDeals = (...params) => {
    return this.request("Filecoin.StateMarketDeals", params);
  }
  
  /**
   * StateMarketParticipants returns the Escrow and Locked balances of every participant in the Storage Market

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMarketParticipants: FilecoinStateMarketParticipants = (...params) => {
    return this.request("Filecoin.StateMarketParticipants", params);
  }
  
  /**
   * StateMarketStorageDeal returns information about the indicated deal

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMarketStorageDeal: FilecoinStateMarketStorageDeal = (...params) => {
    return this.request("Filecoin.StateMarketStorageDeal", params);
  }
  
  /**
   * StateMinerActiveSectors returns info about sectors that a given miner is actively proving.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerActiveSectors: FilecoinStateMinerActiveSectors = (...params) => {
    return this.request("Filecoin.StateMinerActiveSectors", params);
  }
  
  /**
   * StateMinerAvailableBalance returns the portion of a miner's balance that can be withdrawn or spent

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerAvailableBalance: FilecoinStateMinerAvailableBalance = (...params) => {
    return this.request("Filecoin.StateMinerAvailableBalance", params);
  }
  
  /**
   * StateMinerDeadlines returns all the proving deadlines for the given miner

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerDeadlines: FilecoinStateMinerDeadlines = (...params) => {
    return this.request("Filecoin.StateMinerDeadlines", params);
  }
  
  /**
   * StateMinerFaults returns a bitfield indicating the faulty sectors of the given miner

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerFaults: FilecoinStateMinerFaults = (...params) => {
    return this.request("Filecoin.StateMinerFaults", params);
  }
  
  /**
   * StateMinerInfo returns info about the indicated miner

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerInfo: FilecoinStateMinerInfo = (...params) => {
    return this.request("Filecoin.StateMinerInfo", params);
  }
  
  /**
   * StateMinerInitialPledgeCollateral returns the initial pledge collateral for the specified miner's sector

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerInitialPledgeCollateral: FilecoinStateMinerInitialPledgeCollateral = (...params) => {
    return this.request("Filecoin.StateMinerInitialPledgeCollateral", params);
  }
  
  /**
   * StateMinerPartitions returns all partitions in the specified deadline

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerPartitions: FilecoinStateMinerPartitions = (...params) => {
    return this.request("Filecoin.StateMinerPartitions", params);
  }
  
  /**
   * StateMinerPower returns the power of the indicated miner

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerPower: FilecoinStateMinerPower = (...params) => {
    return this.request("Filecoin.StateMinerPower", params);
  }
  
  /**
   * StateMinerInitialPledgeCollateral returns the precommit deposit for the specified miner's sector

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerPreCommitDepositForPower: FilecoinStateMinerPreCommitDepositForPower = (...params) => {
    return this.request("Filecoin.StateMinerPreCommitDepositForPower", params);
  }
  
  /**
   * StateMinerProvingDeadline calculates the deadline at some epoch for a proving period
and returns the deadline-related calculations.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerProvingDeadline: FilecoinStateMinerProvingDeadline = (...params) => {
    return this.request("Filecoin.StateMinerProvingDeadline", params);
  }
  
  /**
   * StateMinerRecoveries returns a bitfield indicating the recovering sectors of the given miner

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerRecoveries: FilecoinStateMinerRecoveries = (...params) => {
    return this.request("Filecoin.StateMinerRecoveries", params);
  }
  
  /**
   * StateMinerSectorAllocated checks if a sector is allocated

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerSectorAllocated: FilecoinStateMinerSectorAllocated = (...params) => {
    return this.request("Filecoin.StateMinerSectorAllocated", params);
  }
  
  /**
   * StateMinerSectorCount returns the number of sectors in a miner's sector set and proving set

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerSectorCount: FilecoinStateMinerSectorCount = (...params) => {
    return this.request("Filecoin.StateMinerSectorCount", params);
  }
  
  /**
   * StateMinerSectors returns info about the given miner's sectors. If the filter bitfield is nil, all sectors are included.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateMinerSectors: FilecoinStateMinerSectors = (...params) => {
    return this.request("Filecoin.StateMinerSectors", params);
  }
  
  /**
   * StateNetworkName returns the name of the network the node is synced to

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateNetworkName: FilecoinStateNetworkName = (...params) => {
    return this.request("Filecoin.StateNetworkName", params);
  }
  
  /**
   * StateNetworkVersion returns the network version at the given tipset

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateNetworkVersion: FilecoinStateNetworkVersion = (...params) => {
    return this.request("Filecoin.StateNetworkVersion", params);
  }
  
  /**
   * StateReadState returns the indicated actor's state.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateReadState: FilecoinStateReadState = (...params) => {
    return this.request("Filecoin.StateReadState", params);
  }
  
  /**
   * StateReplay replays a given message, assuming it was included in a block in the specified tipset.

If a tipset key is provided, and a replacing message is found on chain,
the method will return an error saying that the message wasn't found

If no tipset key is provided, the appropriate tipset is looked up, and if
the message was gas-repriced, the on-chain message will be replayed - in
that case the returned InvocResult.MsgCid will not match the Cid param

If the caller wants to ensure that exactly the requested message was executed,
they MUST check that InvocResult.MsgCid is equal to the provided Cid.
Without this check both the requested and original message may appear as
successfully executed on-chain, which may look like a double-spend.

A replacing message is a message with a different CID, any of Gas values, and
different signature, but with all other parameters matching (source/destination,
nonce, params, etc.)

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateReplay: FilecoinStateReplay = (...params) => {
    return this.request("Filecoin.StateReplay", params);
  }
  
  /**
   * StateSearchMsg searches for a message in the chain, and returns its receipt and the tipset where it was executed

NOTE: If a replacing message is found on chain, this method will return
a MsgLookup for the replacing message - the MsgLookup.Message will be a different
CID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the
result of the execution of the replacing message.

If the caller wants to ensure that exactly the requested message was executed,
they MUST check that MsgLookup.Message is equal to the provided 'cid'.
Without this check both the requested and original message may appear as
successfully executed on-chain, which may look like a double-spend.

A replacing message is a message with a different CID, any of Gas values, and
different signature, but with all other parameters matching (source/destination,
nonce, params, etc.)

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateSearchMsg: FilecoinStateSearchMsg = (...params) => {
    return this.request("Filecoin.StateSearchMsg", params);
  }
  
  /**
   * StateSearchMsgLimited looks back up to limit epochs in the chain for a message, and returns its receipt and the tipset where it was executed

NOTE: If a replacing message is found on chain, this method will return
a MsgLookup for the replacing message - the MsgLookup.Message will be a different
CID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the
result of the execution of the replacing message.

If the caller wants to ensure that exactly the requested message was executed,
they MUST check that MsgLookup.Message is equal to the provided 'cid'.
Without this check both the requested and original message may appear as
successfully executed on-chain, which may look like a double-spend.

A replacing message is a message with a different CID, any of Gas values, and
different signature, but with all other parameters matching (source/destination,
nonce, params, etc.)

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateSearchMsgLimited: FilecoinStateSearchMsgLimited = (...params) => {
    return this.request("Filecoin.StateSearchMsgLimited", params);
  }
  
  /**
   * StateSectorExpiration returns epoch at which given sector will expire

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateSectorExpiration: FilecoinStateSectorExpiration = (...params) => {
    return this.request("Filecoin.StateSectorExpiration", params);
  }
  
  /**
   * StateSectorGetInfo returns the on-chain info for the specified miner's sector. Returns null in case the sector info isn't found
NOTE: returned info.Expiration may not be accurate in some cases, use StateSectorExpiration to get accurate
expiration epoch

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateSectorGetInfo: FilecoinStateSectorGetInfo = (...params) => {
    return this.request("Filecoin.StateSectorGetInfo", params);
  }
  
  /**
   * StateSectorPartition finds deadline/partition with the specified sector

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateSectorPartition: FilecoinStateSectorPartition = (...params) => {
    return this.request("Filecoin.StateSectorPartition", params);
  }
  
  /**
   * StateSectorPreCommitInfo returns the PreCommit info for the specified miner's sector

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateSectorPreCommitInfo: FilecoinStateSectorPreCommitInfo = (...params) => {
    return this.request("Filecoin.StateSectorPreCommitInfo", params);
  }
  
  /**
   * StateVMCirculatingSupplyInternal returns an approximation of the circulating supply of Filecoin at the given tipset.
This is the value reported by the runtime interface to actors code.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateVMCirculatingSupplyInternal: FilecoinStateVMCirculatingSupplyInternal = (...params) => {
    return this.request("Filecoin.StateVMCirculatingSupplyInternal", params);
  }
  
  /**
   * StateVerifiedClientStatus returns the data cap for the given address.
Returns nil if there is no entry in the data cap table for the
address.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateVerifiedClientStatus: FilecoinStateVerifiedClientStatus = (...params) => {
    return this.request("Filecoin.StateVerifiedClientStatus", params);
  }
  
  /**
   * StateVerifiedClientStatus returns the address of the Verified Registry's root key

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateVerifiedRegistryRootKey: FilecoinStateVerifiedRegistryRootKey = (...params) => {
    return this.request("Filecoin.StateVerifiedRegistryRootKey", params);
  }
  
  /**
   * StateVerifierStatus returns the data cap for the given address.
Returns nil if there is no entry in the data cap table for the
address.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateVerifierStatus: FilecoinStateVerifierStatus = (...params) => {
    return this.request("Filecoin.StateVerifierStatus", params);
  }
  
  /**
   * StateWaitMsg looks back in the chain for a message. If not found, it blocks until the
message arrives on chain, and gets to the indicated confidence depth.

NOTE: If a replacing message is found on chain, this method will return
a MsgLookup for the replacing message - the MsgLookup.Message will be a different
CID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the
result of the execution of the replacing message.

If the caller wants to ensure that exactly the requested message was executed,
they MUST check that MsgLookup.Message is equal to the provided 'cid'.
Without this check both the requested and original message may appear as
successfully executed on-chain, which may look like a double-spend.

A replacing message is a message with a different CID, any of Gas values, and
different signature, but with all other parameters matching (source/destination,
nonce, params, etc.)

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateWaitMsg: FilecoinStateWaitMsg = (...params) => {
    return this.request("Filecoin.StateWaitMsg", params);
  }
  
  /**
   * StateWaitMsgLimited looks back up to limit epochs in the chain for a message.
If not found, it blocks until the message arrives on chain, and gets to the
indicated confidence depth.

NOTE: If a replacing message is found on chain, this method will return
a MsgLookup for the replacing message - the MsgLookup.Message will be a different
CID than the one provided in the 'cid' param, MsgLookup.Receipt will contain the
result of the execution of the replacing message.

If the caller wants to ensure that exactly the requested message was executed,
they MUST check that MsgLookup.Message is equal to the provided 'cid'.
Without this check both the requested and original message may appear as
successfully executed on-chain, which may look like a double-spend.

A replacing message is a message with a different CID, any of Gas values, and
different signature, but with all other parameters matching (source/destination,
nonce, params, etc.)

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.StateWaitMsgLimited: FilecoinStateWaitMsgLimited = (...params) => {
    return this.request("Filecoin.StateWaitMsgLimited", params);
  }
  
  /**
   * SyncCheckBad checks if a block was marked as bad, and if it was, returns
the reason.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.SyncCheckBad: FilecoinSyncCheckBad = (...params) => {
    return this.request("Filecoin.SyncCheckBad", params);
  }
  
  /**
   * SyncCheckpoint marks a blocks as checkpointed, meaning that it won't ever fork away from it.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.SyncCheckpoint: FilecoinSyncCheckpoint = (...params) => {
    return this.request("Filecoin.SyncCheckpoint", params);
  }
  
  /**
   * SyncMarkBad marks a blocks as bad, meaning that it won't ever by synced.
Use with extreme caution.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.SyncMarkBad: FilecoinSyncMarkBad = (...params) => {
    return this.request("Filecoin.SyncMarkBad", params);
  }
  
  /**
   * SyncState returns the current status of the lotus sync system.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.SyncState: FilecoinSyncState = (...params) => {
    return this.request("Filecoin.SyncState", params);
  }
  
  /**
   * SyncSubmitBlock can be used to submit a newly created block to the.
network through this node

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.SyncSubmitBlock: FilecoinSyncSubmitBlock = (...params) => {
    return this.request("Filecoin.SyncSubmitBlock", params);
  }
  
  /**
   * SyncUnmarkAllBad purges bad block cache, making it possible to sync to chains previously marked as bad

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.SyncUnmarkAllBad: FilecoinSyncUnmarkAllBad = (...params) => {
    return this.request("Filecoin.SyncUnmarkAllBad", params);
  }
  
  /**
   * SyncUnmarkBad unmarks a blocks as bad, making it possible to be validated and synced again.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.SyncUnmarkBad: FilecoinSyncUnmarkBad = (...params) => {
    return this.request("Filecoin.SyncUnmarkBad", params);
  }
  
  /**
   * SyncValidateTipset indicates whether the provided tipset is valid or not

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.SyncValidateTipset: FilecoinSyncValidateTipset = (...params) => {
    return this.request("Filecoin.SyncValidateTipset", params);
  }
  
  /**
   * WalletBalance returns the balance of the given address at the current head of the chain.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletBalance: FilecoinWalletBalance = (...params) => {
    return this.request("Filecoin.WalletBalance", params);
  }
  
  /**
   * WalletDefaultAddress returns the address marked as default in the wallet.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletDefaultAddress: FilecoinWalletDefaultAddress = (...params) => {
    return this.request("Filecoin.WalletDefaultAddress", params);
  }
  
  /**
   * WalletDelete deletes an address from the wallet.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletDelete: FilecoinWalletDelete = (...params) => {
    return this.request("Filecoin.WalletDelete", params);
  }
  
  /**
   * WalletExport returns the private key of an address in the wallet.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletExport: FilecoinWalletExport = (...params) => {
    return this.request("Filecoin.WalletExport", params);
  }
  
  /**
   * WalletHas indicates whether the given address is in the wallet.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletHas: FilecoinWalletHas = (...params) => {
    return this.request("Filecoin.WalletHas", params);
  }
  
  /**
   * WalletImport receives a KeyInfo, which includes a private key, and imports it into the wallet.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletImport: FilecoinWalletImport = (...params) => {
    return this.request("Filecoin.WalletImport", params);
  }
  
  /**
   * WalletList lists all the addresses in the wallet.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletList: FilecoinWalletList = (...params) => {
    return this.request("Filecoin.WalletList", params);
  }
  
  /**
   * WalletNew creates a new address in the wallet with the given sigType.
Available key types: bls, secp256k1, secp256k1-ledger
Support for numerical types: 1 - secp256k1, 2 - BLS is deprecated

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletNew: FilecoinWalletNew = (...params) => {
    return this.request("Filecoin.WalletNew", params);
  }
  
  /**
   * WalletSetDefault marks the given address as as the default one.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletSetDefault: FilecoinWalletSetDefault = (...params) => {
    return this.request("Filecoin.WalletSetDefault", params);
  }
  
  /**
   * WalletSign signs the given bytes using the given address.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletSign: FilecoinWalletSign = (...params) => {
    return this.request("Filecoin.WalletSign", params);
  }
  
  /**
   * WalletSignMessage signs the given message using the given address.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletSignMessage: FilecoinWalletSignMessage = (...params) => {
    return this.request("Filecoin.WalletSignMessage", params);
  }
  
  /**
   * WalletValidateAddress validates whether a given string can be decoded as a well-formed address

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletValidateAddress: FilecoinWalletValidateAddress = (...params) => {
    return this.request("Filecoin.WalletValidateAddress", params);
  }
  
  /**
   * WalletVerify takes an address, a signature, and some bytes, and indicates whether the signature is valid.
The address does not have to be in the wallet.

   */
  // tslint:disable-next-line:max-line-length
  public Filecoin.WalletVerify: FilecoinWalletVerify = (...params) => {
    return this.request("Filecoin.WalletVerify", params);
  }
  
}
export default LotusRPCAPI;
